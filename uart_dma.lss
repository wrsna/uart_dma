
uart_dma.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000079c4  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000879c4  000879c4  000179c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000c44  20070000  000879cc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000154  20070c44  00088610  00020c44  2**2
                  ALLOC
  4 .stack        00002000  20070d98  00088764  00020c44  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020c44  2**0
                  CONTENTS, READONLY
  6 .comment      000000ae  00000000  00000000  00020c6d  2**0
                  CONTENTS, READONLY
  7 .debug_info   000269c8  00000000  00000000  00020d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00006727  00000000  00000000  000476e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000c70  00000000  00000000  0004de10  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000d18  00000000  00000000  0004ea80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00018c32  00000000  00000000  0004f798  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00010514  00000000  00000000  000683ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000666a0  00000000  00000000  000788de  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002aa4  00000000  00000000  000def80  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0000c03b  00000000  00000000  000e1a24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	98 2d 07 20 11 19 08 00 09 19 08 00 09 19 08 00     .-. ............
   80010:	09 19 08 00 09 19 08 00 09 19 08 00 00 00 00 00     ................
	...
   8002c:	09 19 08 00 09 19 08 00 00 00 00 00 09 19 08 00     ................
   8003c:	91 02 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   8004c:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   8005c:	09 19 08 00 09 19 08 00 09 19 08 00 00 00 00 00     ................
   8006c:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
	...
   80084:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   80094:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   800a4:	00 00 00 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   800b4:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   800c4:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   800d4:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................
   800e4:	09 19 08 00 09 19 08 00 09 19 08 00 09 19 08 00     ................

000800f4 <deregister_tm_clones>:
   800f4:	4803      	ldr	r0, [pc, #12]	; (80104 <deregister_tm_clones+0x10>)
   800f6:	4b04      	ldr	r3, [pc, #16]	; (80108 <deregister_tm_clones+0x14>)
   800f8:	4283      	cmp	r3, r0
   800fa:	d002      	beq.n	80102 <deregister_tm_clones+0xe>
   800fc:	4b03      	ldr	r3, [pc, #12]	; (8010c <deregister_tm_clones+0x18>)
   800fe:	b103      	cbz	r3, 80102 <deregister_tm_clones+0xe>
   80100:	4718      	bx	r3
   80102:	4770      	bx	lr
   80104:	000879cc 	.word	0x000879cc
   80108:	000879cc 	.word	0x000879cc
   8010c:	00000000 	.word	0x00000000

00080110 <register_tm_clones>:
   80110:	4805      	ldr	r0, [pc, #20]	; (80128 <register_tm_clones+0x18>)
   80112:	4906      	ldr	r1, [pc, #24]	; (8012c <register_tm_clones+0x1c>)
   80114:	1a09      	subs	r1, r1, r0
   80116:	1089      	asrs	r1, r1, #2
   80118:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
   8011c:	1049      	asrs	r1, r1, #1
   8011e:	d002      	beq.n	80126 <register_tm_clones+0x16>
   80120:	4b03      	ldr	r3, [pc, #12]	; (80130 <register_tm_clones+0x20>)
   80122:	b103      	cbz	r3, 80126 <register_tm_clones+0x16>
   80124:	4718      	bx	r3
   80126:	4770      	bx	lr
   80128:	000879cc 	.word	0x000879cc
   8012c:	000879cc 	.word	0x000879cc
   80130:	00000000 	.word	0x00000000

00080134 <__do_global_dtors_aux>:
   80134:	b510      	push	{r4, lr}
   80136:	4c06      	ldr	r4, [pc, #24]	; (80150 <__do_global_dtors_aux+0x1c>)
   80138:	7823      	ldrb	r3, [r4, #0]
   8013a:	b943      	cbnz	r3, 8014e <__do_global_dtors_aux+0x1a>
   8013c:	f7ff ffda 	bl	800f4 <deregister_tm_clones>
   80140:	4b04      	ldr	r3, [pc, #16]	; (80154 <__do_global_dtors_aux+0x20>)
   80142:	b113      	cbz	r3, 8014a <__do_global_dtors_aux+0x16>
   80144:	4804      	ldr	r0, [pc, #16]	; (80158 <__do_global_dtors_aux+0x24>)
   80146:	f3af 8000 	nop.w
   8014a:	2301      	movs	r3, #1
   8014c:	7023      	strb	r3, [r4, #0]
   8014e:	bd10      	pop	{r4, pc}
   80150:	20070c44 	.word	0x20070c44
   80154:	00000000 	.word	0x00000000
   80158:	000879cc 	.word	0x000879cc

0008015c <frame_dummy>:
   8015c:	b508      	push	{r3, lr}
   8015e:	4b04      	ldr	r3, [pc, #16]	; (80170 <frame_dummy+0x14>)
   80160:	b11b      	cbz	r3, 8016a <frame_dummy+0xe>
   80162:	4904      	ldr	r1, [pc, #16]	; (80174 <frame_dummy+0x18>)
   80164:	4804      	ldr	r0, [pc, #16]	; (80178 <frame_dummy+0x1c>)
   80166:	f3af 8000 	nop.w
   8016a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8016e:	e7cf      	b.n	80110 <register_tm_clones>
   80170:	00000000 	.word	0x00000000
   80174:	20070c48 	.word	0x20070c48
   80178:	000879cc 	.word	0x000879cc

0008017c <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
   8017c:	b480      	push	{r7}
   8017e:	b083      	sub	sp, #12
   80180:	af00      	add	r7, sp, #0
   80182:	4603      	mov	r3, r0
   80184:	6039      	str	r1, [r7, #0]
   80186:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
   80188:	f997 3007 	ldrsb.w	r3, [r7, #7]
   8018c:	2b00      	cmp	r3, #0
   8018e:	da0b      	bge.n	801a8 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   80190:	683b      	ldr	r3, [r7, #0]
   80192:	b2da      	uxtb	r2, r3
   80194:	490c      	ldr	r1, [pc, #48]	; (801c8 <NVIC_SetPriority+0x4c>)
   80196:	79fb      	ldrb	r3, [r7, #7]
   80198:	f003 030f 	and.w	r3, r3, #15
   8019c:	3b04      	subs	r3, #4
   8019e:	0112      	lsls	r2, r2, #4
   801a0:	b2d2      	uxtb	r2, r2
   801a2:	440b      	add	r3, r1
   801a4:	761a      	strb	r2, [r3, #24]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
}
   801a6:	e009      	b.n	801bc <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   801a8:	683b      	ldr	r3, [r7, #0]
   801aa:	b2da      	uxtb	r2, r3
   801ac:	4907      	ldr	r1, [pc, #28]	; (801cc <NVIC_SetPriority+0x50>)
   801ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
   801b2:	0112      	lsls	r2, r2, #4
   801b4:	b2d2      	uxtb	r2, r2
   801b6:	440b      	add	r3, r1
   801b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
   801bc:	bf00      	nop
   801be:	370c      	adds	r7, #12
   801c0:	46bd      	mov	sp, r7
   801c2:	bc80      	pop	{r7}
   801c4:	4770      	bx	lr
   801c6:	bf00      	nop
   801c8:	e000ed00 	.word	0xe000ed00
   801cc:	e000e100 	.word	0xe000e100

000801d0 <rtos_init>:





uint8_t rtos_init(uint32_t slices_us){
   801d0:	b590      	push	{r4, r7, lr}
   801d2:	b087      	sub	sp, #28
   801d4:	af00      	add	r7, sp, #0
   801d6:	6078      	str	r0, [r7, #4]
    /*pazi na zaokraževanje/deljenje in na obseg števil*/
    uint32_t n = 0;
   801d8:	2300      	movs	r3, #0
   801da:	617b      	str	r3, [r7, #20]
    uint64_t buff = 0;
   801dc:	f04f 0300 	mov.w	r3, #0
   801e0:	f04f 0400 	mov.w	r4, #0
   801e4:	e9c7 3402 	strd	r3, r4, [r7, #8]

    buff = SystemCoreClock/8;
   801e8:	4b1f      	ldr	r3, [pc, #124]	; (80268 <rtos_init+0x98>)
   801ea:	681b      	ldr	r3, [r3, #0]
   801ec:	08db      	lsrs	r3, r3, #3
   801ee:	f04f 0400 	mov.w	r4, #0
   801f2:	e9c7 3402 	strd	r3, r4, [r7, #8]
    buff = buff*slices_us;
   801f6:	687b      	ldr	r3, [r7, #4]
   801f8:	f04f 0400 	mov.w	r4, #0
   801fc:	68fa      	ldr	r2, [r7, #12]
   801fe:	fb03 f102 	mul.w	r1, r3, r2
   80202:	68ba      	ldr	r2, [r7, #8]
   80204:	fb04 f202 	mul.w	r2, r4, r2
   80208:	440a      	add	r2, r1
   8020a:	68b9      	ldr	r1, [r7, #8]
   8020c:	fba1 3403 	umull	r3, r4, r1, r3
   80210:	4422      	add	r2, r4
   80212:	4614      	mov	r4, r2
   80214:	e9c7 3402 	strd	r3, r4, [r7, #8]
   80218:	e9c7 3402 	strd	r3, r4, [r7, #8]
    n = buff/MICRO_SEC;
   8021c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
   80220:	4a12      	ldr	r2, [pc, #72]	; (8026c <rtos_init+0x9c>)
   80222:	f04f 0300 	mov.w	r3, #0
   80226:	f001 ff53 	bl	820d0 <__aeabi_uldivmod>
   8022a:	4603      	mov	r3, r0
   8022c:	460c      	mov	r4, r1
   8022e:	617b      	str	r3, [r7, #20]

    if((n-1) > SysTick_LOAD_RELOAD_Msk) return 1;  //counter value too big
   80230:	697b      	ldr	r3, [r7, #20]
   80232:	3b01      	subs	r3, #1
   80234:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   80238:	d301      	bcc.n	8023e <rtos_init+0x6e>
   8023a:	2301      	movs	r3, #1
   8023c:	e00f      	b.n	8025e <rtos_init+0x8e>

    SysTick->LOAD  = n - 1;
   8023e:	4a0c      	ldr	r2, [pc, #48]	; (80270 <rtos_init+0xa0>)
   80240:	697b      	ldr	r3, [r7, #20]
   80242:	3b01      	subs	r3, #1
   80244:	6053      	str	r3, [r2, #4]
    NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);
   80246:	210f      	movs	r1, #15
   80248:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   8024c:	f7ff ff96 	bl	8017c <NVIC_SetPriority>
    SysTick->VAL   = 0;
   80250:	4b07      	ldr	r3, [pc, #28]	; (80270 <rtos_init+0xa0>)
   80252:	2200      	movs	r2, #0
   80254:	609a      	str	r2, [r3, #8]
    SysTick-> CTRL = 0<<SysTick_CTRL_CLKSOURCE_Pos | SysTick_CTRL_TICKINT_Msk;
   80256:	4b06      	ldr	r3, [pc, #24]	; (80270 <rtos_init+0xa0>)
   80258:	2202      	movs	r2, #2
   8025a:	601a      	str	r2, [r3, #0]




    return 0;
   8025c:	2300      	movs	r3, #0
}
   8025e:	4618      	mov	r0, r3
   80260:	371c      	adds	r7, #28
   80262:	46bd      	mov	sp, r7
   80264:	bd90      	pop	{r4, r7, pc}
   80266:	bf00      	nop
   80268:	20070294 	.word	0x20070294
   8026c:	000f4240 	.word	0x000f4240
   80270:	e000e010 	.word	0xe000e010

00080274 <rtos_enable>:

/************************************************************************/

void rtos_enable(void){
   80274:	b480      	push	{r7}
   80276:	af00      	add	r7, sp, #0
    SysTick-> CTRL |= SysTick_CTRL_ENABLE_Msk;
   80278:	4b04      	ldr	r3, [pc, #16]	; (8028c <rtos_enable+0x18>)
   8027a:	681b      	ldr	r3, [r3, #0]
   8027c:	4a03      	ldr	r2, [pc, #12]	; (8028c <rtos_enable+0x18>)
   8027e:	f043 0301 	orr.w	r3, r3, #1
   80282:	6013      	str	r3, [r2, #0]
}
   80284:	bf00      	nop
   80286:	46bd      	mov	sp, r7
   80288:	bc80      	pop	{r7}
   8028a:	4770      	bx	lr
   8028c:	e000e010 	.word	0xe000e010

00080290 <SysTick_Handler>:
}

/*************************************************************************/


void SysTick_Handler(void){
   80290:	b580      	push	{r7, lr}
   80292:	b082      	sub	sp, #8
   80294:	af00      	add	r7, sp, #0
/******jedro programa exeption prekinitve za taske****/

    static uint8_t idx = 0;
    static uint32_t tick = 0;
    uint32_t pending_proces = 0;
   80296:	2300      	movs	r3, #0
   80298:	607b      	str	r3, [r7, #4]
    tick++;
   8029a:	4b27      	ldr	r3, [pc, #156]	; (80338 <SysTick_Handler+0xa8>)
   8029c:	681b      	ldr	r3, [r3, #0]
   8029e:	3301      	adds	r3, #1
   802a0:	4a25      	ldr	r2, [pc, #148]	; (80338 <SysTick_Handler+0xa8>)
   802a2:	6013      	str	r3, [r2, #0]



/** priviligiran task izvedba vsako rezino**/
    if((task_priv != 0) && task_priv->active){
   802a4:	4b25      	ldr	r3, [pc, #148]	; (8033c <SysTick_Handler+0xac>)
   802a6:	681b      	ldr	r3, [r3, #0]
   802a8:	2b00      	cmp	r3, #0
   802aa:	d00d      	beq.n	802c8 <SysTick_Handler+0x38>
   802ac:	4b23      	ldr	r3, [pc, #140]	; (8033c <SysTick_Handler+0xac>)
   802ae:	681b      	ldr	r3, [r3, #0]
   802b0:	7cdb      	ldrb	r3, [r3, #19]
   802b2:	2b00      	cmp	r3, #0
   802b4:	d008      	beq.n	802c8 <SysTick_Handler+0x38>
        task_priv->driver();
   802b6:	4b21      	ldr	r3, [pc, #132]	; (8033c <SysTick_Handler+0xac>)
   802b8:	681b      	ldr	r3, [r3, #0]
   802ba:	695b      	ldr	r3, [r3, #20]
   802bc:	4798      	blx	r3
        task_priv->last_tick = tick;
   802be:	4b1f      	ldr	r3, [pc, #124]	; (8033c <SysTick_Handler+0xac>)
   802c0:	681b      	ldr	r3, [r3, #0]
   802c2:	4a1d      	ldr	r2, [pc, #116]	; (80338 <SysTick_Handler+0xa8>)
   802c4:	6812      	ldr	r2, [r2, #0]
   802c6:	601a      	str	r2, [r3, #0]

    }
/** izvajaj taske **/

    if(task_list[idx]->active){
   802c8:	4b1d      	ldr	r3, [pc, #116]	; (80340 <SysTick_Handler+0xb0>)
   802ca:	781b      	ldrb	r3, [r3, #0]
   802cc:	461a      	mov	r2, r3
   802ce:	4b1d      	ldr	r3, [pc, #116]	; (80344 <SysTick_Handler+0xb4>)
   802d0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   802d4:	7cdb      	ldrb	r3, [r3, #19]
   802d6:	2b00      	cmp	r3, #0
   802d8:	d010      	beq.n	802fc <SysTick_Handler+0x6c>
        task_list[idx]->driver(); //uzemi objekt driver iz te strukture delaš s pointeri
   802da:	4b19      	ldr	r3, [pc, #100]	; (80340 <SysTick_Handler+0xb0>)
   802dc:	781b      	ldrb	r3, [r3, #0]
   802de:	461a      	mov	r2, r3
   802e0:	4b18      	ldr	r3, [pc, #96]	; (80344 <SysTick_Handler+0xb4>)
   802e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   802e6:	695b      	ldr	r3, [r3, #20]
   802e8:	4798      	blx	r3
        task_list[idx]->last_tick = tick;
   802ea:	4b15      	ldr	r3, [pc, #84]	; (80340 <SysTick_Handler+0xb0>)
   802ec:	781b      	ldrb	r3, [r3, #0]
   802ee:	461a      	mov	r2, r3
   802f0:	4b14      	ldr	r3, [pc, #80]	; (80344 <SysTick_Handler+0xb4>)
   802f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   802f6:	4a10      	ldr	r2, [pc, #64]	; (80338 <SysTick_Handler+0xa8>)
   802f8:	6812      	ldr	r2, [r2, #0]
   802fa:	601a      	str	r2, [r3, #0]
    }


/** skrbi za rollover  **/
    idx++;
   802fc:	4b10      	ldr	r3, [pc, #64]	; (80340 <SysTick_Handler+0xb0>)
   802fe:	781b      	ldrb	r3, [r3, #0]
   80300:	3301      	adds	r3, #1
   80302:	b2da      	uxtb	r2, r3
   80304:	4b0e      	ldr	r3, [pc, #56]	; (80340 <SysTick_Handler+0xb0>)
   80306:	701a      	strb	r2, [r3, #0]
    if(task_list[idx] == 0){
   80308:	4b0d      	ldr	r3, [pc, #52]	; (80340 <SysTick_Handler+0xb0>)
   8030a:	781b      	ldrb	r3, [r3, #0]
   8030c:	461a      	mov	r2, r3
   8030e:	4b0d      	ldr	r3, [pc, #52]	; (80344 <SysTick_Handler+0xb4>)
   80310:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   80314:	2b00      	cmp	r3, #0
   80316:	d102      	bne.n	8031e <SysTick_Handler+0x8e>
        idx = 0;
   80318:	4b09      	ldr	r3, [pc, #36]	; (80340 <SysTick_Handler+0xb0>)
   8031a:	2200      	movs	r2, #0
   8031c:	701a      	strb	r2, [r3, #0]





    pending_proces = SCB->ICSR;
   8031e:	4b0a      	ldr	r3, [pc, #40]	; (80348 <SysTick_Handler+0xb8>)
   80320:	685b      	ldr	r3, [r3, #4]
   80322:	607b      	str	r3, [r7, #4]

    if(pending_proces & SCB_ICSR_PENDSTSET_Msk){
   80324:	687b      	ldr	r3, [r7, #4]
   80326:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
   8032a:	2b00      	cmp	r3, #0
   8032c:	d000      	beq.n	80330 <SysTick_Handler+0xa0>
        while(1); //operacija predolga za časovno rezino
   8032e:	e7fe      	b.n	8032e <SysTick_Handler+0x9e>

    }
}
   80330:	bf00      	nop
   80332:	3708      	adds	r7, #8
   80334:	46bd      	mov	sp, r7
   80336:	bd80      	pop	{r7, pc}
   80338:	20070c60 	.word	0x20070c60
   8033c:	20070284 	.word	0x20070284
   80340:	20070c64 	.word	0x20070c64
   80344:	20070268 	.word	0x20070268
   80348:	e000ed00 	.word	0xe000ed00

0008034c <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
   8034c:	b480      	push	{r7}
   8034e:	b083      	sub	sp, #12
   80350:	af00      	add	r7, sp, #0
   80352:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   80354:	687b      	ldr	r3, [r7, #4]
   80356:	2b07      	cmp	r3, #7
   80358:	d825      	bhi.n	803a6 <osc_get_rate+0x5a>
   8035a:	a201      	add	r2, pc, #4	; (adr r2, 80360 <osc_get_rate+0x14>)
   8035c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80360:	00080381 	.word	0x00080381
   80364:	00080387 	.word	0x00080387
   80368:	0008038d 	.word	0x0008038d
   8036c:	00080393 	.word	0x00080393
   80370:	00080397 	.word	0x00080397
   80374:	0008039b 	.word	0x0008039b
   80378:	0008039f 	.word	0x0008039f
   8037c:	000803a3 	.word	0x000803a3
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
   80380:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   80384:	e010      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
   80386:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   8038a:	e00d      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
   8038c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80390:	e00a      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
   80392:	4b08      	ldr	r3, [pc, #32]	; (803b4 <osc_get_rate+0x68>)
   80394:	e008      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
   80396:	4b08      	ldr	r3, [pc, #32]	; (803b8 <osc_get_rate+0x6c>)
   80398:	e006      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
   8039a:	4b08      	ldr	r3, [pc, #32]	; (803bc <osc_get_rate+0x70>)
   8039c:	e004      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
   8039e:	4b07      	ldr	r3, [pc, #28]	; (803bc <osc_get_rate+0x70>)
   803a0:	e002      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
   803a2:	4b06      	ldr	r3, [pc, #24]	; (803bc <osc_get_rate+0x70>)
   803a4:	e000      	b.n	803a8 <osc_get_rate+0x5c>
	}

	return 0;
   803a6:	2300      	movs	r3, #0
}
   803a8:	4618      	mov	r0, r3
   803aa:	370c      	adds	r7, #12
   803ac:	46bd      	mov	sp, r7
   803ae:	bc80      	pop	{r7}
   803b0:	4770      	bx	lr
   803b2:	bf00      	nop
   803b4:	003d0900 	.word	0x003d0900
   803b8:	007a1200 	.word	0x007a1200
   803bc:	00b71b00 	.word	0x00b71b00

000803c0 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
   803c0:	b580      	push	{r7, lr}
   803c2:	af00      	add	r7, sp, #0
	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
		return OSC_MAINCK_BYPASS_HZ;
	}
#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		return pll_get_default_rate(0);
   803c4:	2006      	movs	r0, #6
   803c6:	f7ff ffc1 	bl	8034c <osc_get_rate>
   803ca:	4602      	mov	r2, r0
   803cc:	4613      	mov	r3, r2
   803ce:	00db      	lsls	r3, r3, #3
   803d0:	1a9b      	subs	r3, r3, r2
   803d2:	005b      	lsls	r3, r3, #1
#endif
	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
   803d4:	4618      	mov	r0, r3
   803d6:	bd80      	pop	{r7, pc}

000803d8 <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
   803d8:	b580      	push	{r7, lr}
   803da:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
   803dc:	f7ff fff0 	bl	803c0 <sysclk_get_main_hz>
   803e0:	4603      	mov	r3, r0
   803e2:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
   803e4:	4618      	mov	r0, r3
   803e6:	bd80      	pop	{r7, pc}

000803e8 <sysclk_enable_peripheral_clock>:
 * \brief Enable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
   803e8:	b580      	push	{r7, lr}
   803ea:	b082      	sub	sp, #8
   803ec:	af00      	add	r7, sp, #0
   803ee:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   803f0:	6878      	ldr	r0, [r7, #4]
   803f2:	f001 fdab 	bl	81f4c <pmc_enable_periph_clk>
}
   803f6:	bf00      	nop
   803f8:	3708      	adds	r7, #8
   803fa:	46bd      	mov	sp, r7
   803fc:	bd80      	pop	{r7, pc}

000803fe <ioport_init>:
 *
 * This function must be called before using any other functions in the IOPORT
 * service.
 */
static inline void ioport_init(void)
{
   803fe:	b580      	push	{r7, lr}
   80400:	af00      	add	r7, sp, #0
}

__always_inline static void arch_ioport_init(void)
{
#ifdef ID_PIOA
	sysclk_enable_peripheral_clock(ID_PIOA);
   80402:	200b      	movs	r0, #11
   80404:	f7ff fff0 	bl	803e8 <sysclk_enable_peripheral_clock>
#endif
#ifdef ID_PIOB
	sysclk_enable_peripheral_clock(ID_PIOB);
   80408:	200c      	movs	r0, #12
   8040a:	f7ff ffed 	bl	803e8 <sysclk_enable_peripheral_clock>
#endif
#ifdef ID_PIOC
	sysclk_enable_peripheral_clock(ID_PIOC);
   8040e:	200d      	movs	r0, #13
   80410:	f7ff ffea 	bl	803e8 <sysclk_enable_peripheral_clock>
#endif
#ifdef ID_PIOD
	sysclk_enable_peripheral_clock(ID_PIOD);
   80414:	200e      	movs	r0, #14
   80416:	f7ff ffe7 	bl	803e8 <sysclk_enable_peripheral_clock>
	arch_ioport_init();
}
   8041a:	bf00      	nop
   8041c:	bd80      	pop	{r7, pc}

0008041e <ioport_set_pin_dir>:
 * \param pin IOPORT pin to configure
 * \param dir Direction to set for the specified pin (\ref ioport_direction)
 */
static inline void ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
   8041e:	b480      	push	{r7}
   80420:	b08d      	sub	sp, #52	; 0x34
   80422:	af00      	add	r7, sp, #0
   80424:	6078      	str	r0, [r7, #4]
   80426:	460b      	mov	r3, r1
   80428:	70fb      	strb	r3, [r7, #3]
   8042a:	687b      	ldr	r3, [r7, #4]
   8042c:	62fb      	str	r3, [r7, #44]	; 0x2c
   8042e:	78fb      	ldrb	r3, [r7, #3]
   80430:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
   80434:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   80436:	627b      	str	r3, [r7, #36]	; 0x24
   80438:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   8043a:	623b      	str	r3, [r7, #32]
	return pin >> 5;
   8043c:	6a3b      	ldr	r3, [r7, #32]
   8043e:	095b      	lsrs	r3, r3, #5
   80440:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80442:	69fb      	ldr	r3, [r7, #28]
   80444:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80448:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8044c:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);
   8044e:	61bb      	str	r3, [r7, #24]

	if (dir == IOPORT_DIR_OUTPUT) {
   80450:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   80454:	2b01      	cmp	r3, #1
   80456:	d109      	bne.n	8046c <ioport_set_pin_dir+0x4e>
   80458:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8045a:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   8045c:	697b      	ldr	r3, [r7, #20]
   8045e:	f003 031f 	and.w	r3, r3, #31
   80462:	2201      	movs	r2, #1
   80464:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80466:	69bb      	ldr	r3, [r7, #24]
   80468:	611a      	str	r2, [r3, #16]
   8046a:	e00c      	b.n	80486 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
   8046c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   80470:	2b00      	cmp	r3, #0
   80472:	d108      	bne.n	80486 <ioport_set_pin_dir+0x68>
   80474:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   80476:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   80478:	693b      	ldr	r3, [r7, #16]
   8047a:	f003 031f 	and.w	r3, r3, #31
   8047e:	2201      	movs	r2, #1
   80480:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80482:	69bb      	ldr	r3, [r7, #24]
   80484:	615a      	str	r2, [r3, #20]
   80486:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   80488:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8048a:	68fb      	ldr	r3, [r7, #12]
   8048c:	f003 031f 	and.w	r3, r3, #31
   80490:	2201      	movs	r2, #1
   80492:	409a      	lsls	r2, r3
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80494:	69bb      	ldr	r3, [r7, #24]
   80496:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	arch_ioport_set_pin_dir(pin, dir);
}
   8049a:	bf00      	nop
   8049c:	3734      	adds	r7, #52	; 0x34
   8049e:	46bd      	mov	sp, r7
   804a0:	bc80      	pop	{r7}
   804a2:	4770      	bx	lr

000804a4 <ioport_set_pin_level>:
 *
 * \param pin IOPORT pin to configure
 * \param level Logical value of the pin
 */
static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
{
   804a4:	b480      	push	{r7}
   804a6:	b08b      	sub	sp, #44	; 0x2c
   804a8:	af00      	add	r7, sp, #0
   804aa:	6078      	str	r0, [r7, #4]
   804ac:	460b      	mov	r3, r1
   804ae:	70fb      	strb	r3, [r7, #3]
   804b0:	687b      	ldr	r3, [r7, #4]
   804b2:	627b      	str	r3, [r7, #36]	; 0x24
   804b4:	78fb      	ldrb	r3, [r7, #3]
   804b6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   804ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   804bc:	61fb      	str	r3, [r7, #28]
   804be:	69fb      	ldr	r3, [r7, #28]
   804c0:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   804c2:	69bb      	ldr	r3, [r7, #24]
   804c4:	095b      	lsrs	r3, r3, #5
   804c6:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   804c8:	697b      	ldr	r3, [r7, #20]
   804ca:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   804ce:	f203 7307 	addw	r3, r3, #1799	; 0x707
   804d2:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);
   804d4:	613b      	str	r3, [r7, #16]

	if (level) {
   804d6:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   804da:	2b00      	cmp	r3, #0
   804dc:	d009      	beq.n	804f2 <ioport_set_pin_level+0x4e>
   804de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   804e0:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   804e2:	68fb      	ldr	r3, [r7, #12]
   804e4:	f003 031f 	and.w	r3, r3, #31
   804e8:	2201      	movs	r2, #1
   804ea:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   804ec:	693b      	ldr	r3, [r7, #16]
   804ee:	631a      	str	r2, [r3, #48]	; 0x30
	arch_ioport_set_pin_level(pin, level);
}
   804f0:	e008      	b.n	80504 <ioport_set_pin_level+0x60>
   804f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   804f4:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   804f6:	68bb      	ldr	r3, [r7, #8]
   804f8:	f003 031f 	and.w	r3, r3, #31
   804fc:	2201      	movs	r2, #1
   804fe:	409a      	lsls	r2, r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80500:	693b      	ldr	r3, [r7, #16]
   80502:	635a      	str	r2, [r3, #52]	; 0x34
   80504:	bf00      	nop
   80506:	372c      	adds	r7, #44	; 0x2c
   80508:	46bd      	mov	sp, r7
   8050a:	bc80      	pop	{r7}
   8050c:	4770      	bx	lr

0008050e <ioport_get_pin_level>:
 *
 * \param pin IOPORT pin to read
 * \return Current logical value of the specified pin
 */
static inline bool ioport_get_pin_level(ioport_pin_t pin)
{
   8050e:	b480      	push	{r7}
   80510:	b089      	sub	sp, #36	; 0x24
   80512:	af00      	add	r7, sp, #0
   80514:	6078      	str	r0, [r7, #4]
   80516:	687b      	ldr	r3, [r7, #4]
   80518:	61fb      	str	r3, [r7, #28]
   8051a:	69fb      	ldr	r3, [r7, #28]
   8051c:	61bb      	str	r3, [r7, #24]
   8051e:	69bb      	ldr	r3, [r7, #24]
   80520:	617b      	str	r3, [r7, #20]
	return pin >> 5;
   80522:	697b      	ldr	r3, [r7, #20]
   80524:	095b      	lsrs	r3, r3, #5
   80526:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80528:	693b      	ldr	r3, [r7, #16]
   8052a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8052e:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80532:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80534:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   80536:	69fb      	ldr	r3, [r7, #28]
   80538:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8053a:	68fb      	ldr	r3, [r7, #12]
   8053c:	f003 031f 	and.w	r3, r3, #31
   80540:	2101      	movs	r1, #1
   80542:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80546:	4013      	ands	r3, r2
   80548:	2b00      	cmp	r3, #0
   8054a:	bf14      	ite	ne
   8054c:	2301      	movne	r3, #1
   8054e:	2300      	moveq	r3, #0
   80550:	b2db      	uxtb	r3, r3
	return arch_ioport_get_pin_level(pin);
}
   80552:	4618      	mov	r0, r3
   80554:	3724      	adds	r7, #36	; 0x24
   80556:	46bd      	mov	sp, r7
   80558:	bc80      	pop	{r7}
   8055a:	4770      	bx	lr
   8055c:	0000      	movs	r0, r0
	...

00080560 <busy>:
  return position;

}

// Wait for busy state of LCD to end
void busy(void){
   80560:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   80564:	b082      	sub	sp, #8
   80566:	af00      	add	r7, sp, #0

/*  ioport_set_port_dir(IOPORT_PIOC,\
                      _LCD_D4_PIO | _LCD_D5_PIO | _LCD_D6_PIO | _LCD_D7_PIO, IOPORT_DIR_INPUT);
                      */

  ioport_set_pin_dir(_PIN_LCD_D4, IOPORT_DIR_INPUT);
   80568:	2100      	movs	r1, #0
   8056a:	204d      	movs	r0, #77	; 0x4d
   8056c:	f7ff ff57 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D5, IOPORT_DIR_INPUT);
   80570:	2100      	movs	r1, #0
   80572:	204f      	movs	r0, #79	; 0x4f
   80574:	f7ff ff53 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D6, IOPORT_DIR_INPUT);
   80578:	2100      	movs	r1, #0
   8057a:	2051      	movs	r0, #81	; 0x51
   8057c:	f7ff ff4f 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D7, IOPORT_DIR_INPUT);
   80580:	2100      	movs	r1, #0
   80582:	2053      	movs	r0, #83	; 0x53
   80584:	f7ff ff4b 	bl	8041e <ioport_set_pin_dir>


  ioport_set_pin_level(_PIN_LCD_RS, 0);
   80588:	2100      	movs	r1, #0
   8058a:	204c      	movs	r0, #76	; 0x4c
   8058c:	f7ff ff8a 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_RW, 1);
   80590:	2101      	movs	r1, #1
   80592:	204e      	movs	r0, #78	; 0x4e
   80594:	f7ff ff86 	bl	804a4 <ioport_set_pin_level>

  do
  {
    delay_us(1);
   80598:	f7ff ff1e 	bl	803d8 <sysclk_get_cpu_hz>
   8059c:	4603      	mov	r3, r0
   8059e:	f04f 0400 	mov.w	r4, #0
   805a2:	a245      	add	r2, pc, #276	; (adr r2, 806b8 <busy+0x158>)
   805a4:	e9d2 1200 	ldrd	r1, r2, [r2]
   805a8:	eb13 0b01 	adds.w	fp, r3, r1
   805ac:	eb44 0c02 	adc.w	ip, r4, r2
   805b0:	4658      	mov	r0, fp
   805b2:	4661      	mov	r1, ip
   805b4:	4a42      	ldr	r2, [pc, #264]	; (806c0 <busy+0x160>)
   805b6:	f04f 0300 	mov.w	r3, #0
   805ba:	f001 fd89 	bl	820d0 <__aeabi_uldivmod>
   805be:	4603      	mov	r3, r0
   805c0:	460c      	mov	r4, r1
   805c2:	4618      	mov	r0, r3
   805c4:	f007 f9f4 	bl	879b0 <__portable_delay_cycles_veneer>
    ioport_set_pin_level(_PIN_LCD_E, 1);
   805c8:	2101      	movs	r1, #1
   805ca:	2050      	movs	r0, #80	; 0x50
   805cc:	f7ff ff6a 	bl	804a4 <ioport_set_pin_level>
    delay_us(1);
   805d0:	f7ff ff02 	bl	803d8 <sysclk_get_cpu_hz>
   805d4:	4603      	mov	r3, r0
   805d6:	f04f 0400 	mov.w	r4, #0
   805da:	a237      	add	r2, pc, #220	; (adr r2, 806b8 <busy+0x158>)
   805dc:	e9d2 1200 	ldrd	r1, r2, [r2]
   805e0:	eb13 0b01 	adds.w	fp, r3, r1
   805e4:	eb44 0c02 	adc.w	ip, r4, r2
   805e8:	4658      	mov	r0, fp
   805ea:	4661      	mov	r1, ip
   805ec:	4a34      	ldr	r2, [pc, #208]	; (806c0 <busy+0x160>)
   805ee:	f04f 0300 	mov.w	r3, #0
   805f2:	f001 fd6d 	bl	820d0 <__aeabi_uldivmod>
   805f6:	4603      	mov	r3, r0
   805f8:	460c      	mov	r4, r1
   805fa:	4618      	mov	r0, r3
   805fc:	f007 f9d8 	bl	879b0 <__portable_delay_cycles_veneer>
    busy_flag = ioport_get_pin_level(_PIN_LCD_D7);
   80600:	2053      	movs	r0, #83	; 0x53
   80602:	f7ff ff84 	bl	8050e <ioport_get_pin_level>
   80606:	4603      	mov	r3, r0
   80608:	607b      	str	r3, [r7, #4]
    ioport_set_pin_level(_PIN_LCD_E, 0);
   8060a:	2100      	movs	r1, #0
   8060c:	2050      	movs	r0, #80	; 0x50
   8060e:	f7ff ff49 	bl	804a4 <ioport_set_pin_level>
    delay_us(1);
   80612:	f7ff fee1 	bl	803d8 <sysclk_get_cpu_hz>
   80616:	4603      	mov	r3, r0
   80618:	f04f 0400 	mov.w	r4, #0
   8061c:	a226      	add	r2, pc, #152	; (adr r2, 806b8 <busy+0x158>)
   8061e:	e9d2 1200 	ldrd	r1, r2, [r2]
   80622:	eb13 0b01 	adds.w	fp, r3, r1
   80626:	eb44 0c02 	adc.w	ip, r4, r2
   8062a:	4658      	mov	r0, fp
   8062c:	4661      	mov	r1, ip
   8062e:	4a24      	ldr	r2, [pc, #144]	; (806c0 <busy+0x160>)
   80630:	f04f 0300 	mov.w	r3, #0
   80634:	f001 fd4c 	bl	820d0 <__aeabi_uldivmod>
   80638:	4603      	mov	r3, r0
   8063a:	460c      	mov	r4, r1
   8063c:	4618      	mov	r0, r3
   8063e:	f007 f9b7 	bl	879b0 <__portable_delay_cycles_veneer>
    ioport_set_pin_level(_PIN_LCD_E, 1);
   80642:	2101      	movs	r1, #1
   80644:	2050      	movs	r0, #80	; 0x50
   80646:	f7ff ff2d 	bl	804a4 <ioport_set_pin_level>
    delay_us(1);
   8064a:	f7ff fec5 	bl	803d8 <sysclk_get_cpu_hz>
   8064e:	4603      	mov	r3, r0
   80650:	f04f 0400 	mov.w	r4, #0
   80654:	a218      	add	r2, pc, #96	; (adr r2, 806b8 <busy+0x158>)
   80656:	e9d2 1200 	ldrd	r1, r2, [r2]
   8065a:	eb13 0b01 	adds.w	fp, r3, r1
   8065e:	eb44 0c02 	adc.w	ip, r4, r2
   80662:	4658      	mov	r0, fp
   80664:	4661      	mov	r1, ip
   80666:	4a16      	ldr	r2, [pc, #88]	; (806c0 <busy+0x160>)
   80668:	f04f 0300 	mov.w	r3, #0
   8066c:	f001 fd30 	bl	820d0 <__aeabi_uldivmod>
   80670:	4603      	mov	r3, r0
   80672:	460c      	mov	r4, r1
   80674:	4618      	mov	r0, r3
   80676:	f007 f99b 	bl	879b0 <__portable_delay_cycles_veneer>
    ioport_set_pin_level(_PIN_LCD_E, 0);
   8067a:	2100      	movs	r1, #0
   8067c:	2050      	movs	r0, #80	; 0x50
   8067e:	f7ff ff11 	bl	804a4 <ioport_set_pin_level>
  } while(busy_flag);
   80682:	687b      	ldr	r3, [r7, #4]
   80684:	2b00      	cmp	r3, #0
   80686:	d187      	bne.n	80598 <busy+0x38>

  /*
  ioport_set_port_dir(IOPORT_PIOC,\
                      _LCD_D4_PIO | _LCD_D5_PIO | _LCD_D6_PIO | _LCD_D7_PIO, IOPORT_DIR_OUTPUT);
                      */
  ioport_set_pin_dir(_PIN_LCD_D4, IOPORT_DIR_OUTPUT);
   80688:	2101      	movs	r1, #1
   8068a:	204d      	movs	r0, #77	; 0x4d
   8068c:	f7ff fec7 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D5, IOPORT_DIR_OUTPUT);
   80690:	2101      	movs	r1, #1
   80692:	204f      	movs	r0, #79	; 0x4f
   80694:	f7ff fec3 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D6, IOPORT_DIR_OUTPUT);
   80698:	2101      	movs	r1, #1
   8069a:	2051      	movs	r0, #81	; 0x51
   8069c:	f7ff febf 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D7, IOPORT_DIR_OUTPUT);
   806a0:	2101      	movs	r1, #1
   806a2:	2053      	movs	r0, #83	; 0x53
   806a4:	f7ff febb 	bl	8041e <ioport_set_pin_dir>

}
   806a8:	bf00      	nop
   806aa:	3708      	adds	r7, #8
   806ac:	46bd      	mov	sp, r7
   806ae:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
   806b2:	bf00      	nop
   806b4:	f3af 8000 	nop.w
   806b8:	00d59f7f 	.word	0x00d59f7f
   806bc:	00000000 	.word	0x00000000
   806c0:	00d59f80 	.word	0x00d59f80
   806c4:	00000000 	.word	0x00000000

000806c8 <lcd_write_high>:

// LCD write high four bits
// byte ... data or command byte
void lcd_write_high(uint8_t byte){
   806c8:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   806cc:	b082      	sub	sp, #8
   806ce:	af00      	add	r7, sp, #0
   806d0:	4603      	mov	r3, r0
   806d2:	71fb      	strb	r3, [r7, #7]

  ioport_set_pin_level(_PIN_LCD_RW, 0);
   806d4:	2100      	movs	r1, #0
   806d6:	204e      	movs	r0, #78	; 0x4e
   806d8:	f7ff fee4 	bl	804a4 <ioport_set_pin_level>
  delay_us(1);
   806dc:	f7ff fe7c 	bl	803d8 <sysclk_get_cpu_hz>
   806e0:	4603      	mov	r3, r0
   806e2:	f04f 0400 	mov.w	r4, #0
   806e6:	a232      	add	r2, pc, #200	; (adr r2, 807b0 <lcd_write_high+0xe8>)
   806e8:	e9d2 1200 	ldrd	r1, r2, [r2]
   806ec:	eb13 0b01 	adds.w	fp, r3, r1
   806f0:	eb44 0c02 	adc.w	ip, r4, r2
   806f4:	4658      	mov	r0, fp
   806f6:	4661      	mov	r1, ip
   806f8:	4a2f      	ldr	r2, [pc, #188]	; (807b8 <lcd_write_high+0xf0>)
   806fa:	f04f 0300 	mov.w	r3, #0
   806fe:	f001 fce7 	bl	820d0 <__aeabi_uldivmod>
   80702:	4603      	mov	r3, r0
   80704:	460c      	mov	r4, r1
   80706:	4618      	mov	r0, r3
   80708:	f007 f952 	bl	879b0 <__portable_delay_cycles_veneer>


  ioport_set_pin_level(_PIN_LCD_D7, ( byte&(1<<7) )!=0 );
   8070c:	f997 3007 	ldrsb.w	r3, [r7, #7]
   80710:	b2db      	uxtb	r3, r3
   80712:	09db      	lsrs	r3, r3, #7
   80714:	b2db      	uxtb	r3, r3
   80716:	4619      	mov	r1, r3
   80718:	2053      	movs	r0, #83	; 0x53
   8071a:	f7ff fec3 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D6, ( byte&(1<<6) )!=0 );
   8071e:	79fb      	ldrb	r3, [r7, #7]
   80720:	f003 0340 	and.w	r3, r3, #64	; 0x40
   80724:	2b00      	cmp	r3, #0
   80726:	bf14      	ite	ne
   80728:	2301      	movne	r3, #1
   8072a:	2300      	moveq	r3, #0
   8072c:	b2db      	uxtb	r3, r3
   8072e:	4619      	mov	r1, r3
   80730:	2051      	movs	r0, #81	; 0x51
   80732:	f7ff feb7 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D5, ( byte&(1<<5) )!=0 );
   80736:	79fb      	ldrb	r3, [r7, #7]
   80738:	f003 0320 	and.w	r3, r3, #32
   8073c:	2b00      	cmp	r3, #0
   8073e:	bf14      	ite	ne
   80740:	2301      	movne	r3, #1
   80742:	2300      	moveq	r3, #0
   80744:	b2db      	uxtb	r3, r3
   80746:	4619      	mov	r1, r3
   80748:	204f      	movs	r0, #79	; 0x4f
   8074a:	f7ff feab 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D4, ( byte&(1<<4) )!=0 );
   8074e:	79fb      	ldrb	r3, [r7, #7]
   80750:	f003 0310 	and.w	r3, r3, #16
   80754:	2b00      	cmp	r3, #0
   80756:	bf14      	ite	ne
   80758:	2301      	movne	r3, #1
   8075a:	2300      	moveq	r3, #0
   8075c:	b2db      	uxtb	r3, r3
   8075e:	4619      	mov	r1, r3
   80760:	204d      	movs	r0, #77	; 0x4d
   80762:	f7ff fe9f 	bl	804a4 <ioport_set_pin_level>

  ioport_set_pin_level(_PIN_LCD_E, 1);
   80766:	2101      	movs	r1, #1
   80768:	2050      	movs	r0, #80	; 0x50
   8076a:	f7ff fe9b 	bl	804a4 <ioport_set_pin_level>
  delay_us(1);
   8076e:	f7ff fe33 	bl	803d8 <sysclk_get_cpu_hz>
   80772:	4603      	mov	r3, r0
   80774:	f04f 0400 	mov.w	r4, #0
   80778:	a20d      	add	r2, pc, #52	; (adr r2, 807b0 <lcd_write_high+0xe8>)
   8077a:	e9d2 1200 	ldrd	r1, r2, [r2]
   8077e:	eb13 0b01 	adds.w	fp, r3, r1
   80782:	eb44 0c02 	adc.w	ip, r4, r2
   80786:	4658      	mov	r0, fp
   80788:	4661      	mov	r1, ip
   8078a:	4a0b      	ldr	r2, [pc, #44]	; (807b8 <lcd_write_high+0xf0>)
   8078c:	f04f 0300 	mov.w	r3, #0
   80790:	f001 fc9e 	bl	820d0 <__aeabi_uldivmod>
   80794:	4603      	mov	r3, r0
   80796:	460c      	mov	r4, r1
   80798:	4618      	mov	r0, r3
   8079a:	f007 f909 	bl	879b0 <__portable_delay_cycles_veneer>
  ioport_set_pin_level(_PIN_LCD_E, 0);
   8079e:	2100      	movs	r1, #0
   807a0:	2050      	movs	r0, #80	; 0x50
   807a2:	f7ff fe7f 	bl	804a4 <ioport_set_pin_level>
}
   807a6:	bf00      	nop
   807a8:	3708      	adds	r7, #8
   807aa:	46bd      	mov	sp, r7
   807ac:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
   807b0:	00d59f7f 	.word	0x00d59f7f
   807b4:	00000000 	.word	0x00000000
   807b8:	00d59f80 	.word	0x00d59f80
   807bc:	00000000 	.word	0x00000000

000807c0 <lcd_write_low>:

// LCD write low four bits
// byte ... data or command byte
void lcd_write_low(uint8_t byte){
   807c0:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   807c4:	b082      	sub	sp, #8
   807c6:	af00      	add	r7, sp, #0
   807c8:	4603      	mov	r3, r0
   807ca:	71fb      	strb	r3, [r7, #7]
  delay_us(1);
   807cc:	f7ff fe04 	bl	803d8 <sysclk_get_cpu_hz>
   807d0:	4603      	mov	r3, r0
   807d2:	f04f 0400 	mov.w	r4, #0
   807d6:	a236      	add	r2, pc, #216	; (adr r2, 808b0 <lcd_write_low+0xf0>)
   807d8:	e9d2 1200 	ldrd	r1, r2, [r2]
   807dc:	eb13 0b01 	adds.w	fp, r3, r1
   807e0:	eb44 0c02 	adc.w	ip, r4, r2
   807e4:	4658      	mov	r0, fp
   807e6:	4661      	mov	r1, ip
   807e8:	4a33      	ldr	r2, [pc, #204]	; (808b8 <lcd_write_low+0xf8>)
   807ea:	f04f 0300 	mov.w	r3, #0
   807ee:	f001 fc6f 	bl	820d0 <__aeabi_uldivmod>
   807f2:	4603      	mov	r3, r0
   807f4:	460c      	mov	r4, r1
   807f6:	4618      	mov	r0, r3
   807f8:	f007 f8da 	bl	879b0 <__portable_delay_cycles_veneer>

  ioport_set_pin_level(_PIN_LCD_D7, ( byte&(1<<3) )!=0 );
   807fc:	79fb      	ldrb	r3, [r7, #7]
   807fe:	f003 0308 	and.w	r3, r3, #8
   80802:	2b00      	cmp	r3, #0
   80804:	bf14      	ite	ne
   80806:	2301      	movne	r3, #1
   80808:	2300      	moveq	r3, #0
   8080a:	b2db      	uxtb	r3, r3
   8080c:	4619      	mov	r1, r3
   8080e:	2053      	movs	r0, #83	; 0x53
   80810:	f7ff fe48 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D6, ( byte&(1<<2) )!=0 );
   80814:	79fb      	ldrb	r3, [r7, #7]
   80816:	f003 0304 	and.w	r3, r3, #4
   8081a:	2b00      	cmp	r3, #0
   8081c:	bf14      	ite	ne
   8081e:	2301      	movne	r3, #1
   80820:	2300      	moveq	r3, #0
   80822:	b2db      	uxtb	r3, r3
   80824:	4619      	mov	r1, r3
   80826:	2051      	movs	r0, #81	; 0x51
   80828:	f7ff fe3c 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D5, ( byte&(1<<1) )!=0 );
   8082c:	79fb      	ldrb	r3, [r7, #7]
   8082e:	f003 0302 	and.w	r3, r3, #2
   80832:	2b00      	cmp	r3, #0
   80834:	bf14      	ite	ne
   80836:	2301      	movne	r3, #1
   80838:	2300      	moveq	r3, #0
   8083a:	b2db      	uxtb	r3, r3
   8083c:	4619      	mov	r1, r3
   8083e:	204f      	movs	r0, #79	; 0x4f
   80840:	f7ff fe30 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D4, ( byte&(1<<0) )!=0 );
   80844:	79fb      	ldrb	r3, [r7, #7]
   80846:	f003 0301 	and.w	r3, r3, #1
   8084a:	2b00      	cmp	r3, #0
   8084c:	bf14      	ite	ne
   8084e:	2301      	movne	r3, #1
   80850:	2300      	moveq	r3, #0
   80852:	b2db      	uxtb	r3, r3
   80854:	4619      	mov	r1, r3
   80856:	204d      	movs	r0, #77	; 0x4d
   80858:	f7ff fe24 	bl	804a4 <ioport_set_pin_level>

  ioport_set_pin_level(_PIN_LCD_E, 1);
   8085c:	2101      	movs	r1, #1
   8085e:	2050      	movs	r0, #80	; 0x50
   80860:	f7ff fe20 	bl	804a4 <ioport_set_pin_level>
  delay_us(1);
   80864:	f7ff fdb8 	bl	803d8 <sysclk_get_cpu_hz>
   80868:	4603      	mov	r3, r0
   8086a:	f04f 0400 	mov.w	r4, #0
   8086e:	a210      	add	r2, pc, #64	; (adr r2, 808b0 <lcd_write_low+0xf0>)
   80870:	e9d2 1200 	ldrd	r1, r2, [r2]
   80874:	eb13 0b01 	adds.w	fp, r3, r1
   80878:	eb44 0c02 	adc.w	ip, r4, r2
   8087c:	4658      	mov	r0, fp
   8087e:	4661      	mov	r1, ip
   80880:	4a0d      	ldr	r2, [pc, #52]	; (808b8 <lcd_write_low+0xf8>)
   80882:	f04f 0300 	mov.w	r3, #0
   80886:	f001 fc23 	bl	820d0 <__aeabi_uldivmod>
   8088a:	4603      	mov	r3, r0
   8088c:	460c      	mov	r4, r1
   8088e:	4618      	mov	r0, r3
   80890:	f007 f88e 	bl	879b0 <__portable_delay_cycles_veneer>
  ioport_set_pin_level(_PIN_LCD_E, 0);
   80894:	2100      	movs	r1, #0
   80896:	2050      	movs	r0, #80	; 0x50
   80898:	f7ff fe04 	bl	804a4 <ioport_set_pin_level>
  busy();
   8089c:	f7ff fe60 	bl	80560 <busy>
}
   808a0:	bf00      	nop
   808a2:	3708      	adds	r7, #8
   808a4:	46bd      	mov	sp, r7
   808a6:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
   808aa:	bf00      	nop
   808ac:	f3af 8000 	nop.w
   808b0:	00d59f7f 	.word	0x00d59f7f
   808b4:	00000000 	.word	0x00000000
   808b8:	00d59f80 	.word	0x00d59f80

000808bc <lcd_write_half_comm>:

// LCD write half command
// com ... command
void lcd_write_half_comm(uint8_t com){
   808bc:	b580      	push	{r7, lr}
   808be:	b082      	sub	sp, #8
   808c0:	af00      	add	r7, sp, #0
   808c2:	4603      	mov	r3, r0
   808c4:	71fb      	strb	r3, [r7, #7]
  ioport_set_pin_level(_PIN_LCD_RS, 0);
   808c6:	2100      	movs	r1, #0
   808c8:	204c      	movs	r0, #76	; 0x4c
   808ca:	f7ff fdeb 	bl	804a4 <ioport_set_pin_level>
  lcd_write_high(com);
   808ce:	79fb      	ldrb	r3, [r7, #7]
   808d0:	4618      	mov	r0, r3
   808d2:	f7ff fef9 	bl	806c8 <lcd_write_high>
}
   808d6:	bf00      	nop
   808d8:	3708      	adds	r7, #8
   808da:	46bd      	mov	sp, r7
   808dc:	bd80      	pop	{r7, pc}

000808de <lcd_write_comm>:

// LCD write command
// com ... command
void lcd_write_comm(uint8_t com){
   808de:	b580      	push	{r7, lr}
   808e0:	b082      	sub	sp, #8
   808e2:	af00      	add	r7, sp, #0
   808e4:	4603      	mov	r3, r0
   808e6:	71fb      	strb	r3, [r7, #7]
  lcd_write_half_comm(com);
   808e8:	79fb      	ldrb	r3, [r7, #7]
   808ea:	4618      	mov	r0, r3
   808ec:	f7ff ffe6 	bl	808bc <lcd_write_half_comm>
  lcd_write_low(com);
   808f0:	79fb      	ldrb	r3, [r7, #7]
   808f2:	4618      	mov	r0, r3
   808f4:	f7ff ff64 	bl	807c0 <lcd_write_low>
}
   808f8:	bf00      	nop
   808fa:	3708      	adds	r7, #8
   808fc:	46bd      	mov	sp, r7
   808fe:	bd80      	pop	{r7, pc}

00080900 <lcd_write_data>:

// LCD write data
// data ... character
void lcd_write_data(uint8_t data){
   80900:	b580      	push	{r7, lr}
   80902:	b082      	sub	sp, #8
   80904:	af00      	add	r7, sp, #0
   80906:	4603      	mov	r3, r0
   80908:	71fb      	strb	r3, [r7, #7]
  ioport_set_pin_level(_PIN_LCD_RS, 1);
   8090a:	2101      	movs	r1, #1
   8090c:	204c      	movs	r0, #76	; 0x4c
   8090e:	f7ff fdc9 	bl	804a4 <ioport_set_pin_level>
  lcd_write_high(data);
   80912:	79fb      	ldrb	r3, [r7, #7]
   80914:	4618      	mov	r0, r3
   80916:	f7ff fed7 	bl	806c8 <lcd_write_high>
  lcd_write_low(data);
   8091a:	79fb      	ldrb	r3, [r7, #7]
   8091c:	4618      	mov	r0, r3
   8091e:	f7ff ff4f 	bl	807c0 <lcd_write_low>
}
   80922:	bf00      	nop
   80924:	3708      	adds	r7, #8
   80926:	46bd      	mov	sp, r7
   80928:	bd80      	pop	{r7, pc}
   8092a:	0000      	movs	r0, r0
   8092c:	0000      	movs	r0, r0
	...

00080930 <lcd_init>:

// LCD initialisation routine
void lcd_init(void){
   80930:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
   80934:	af00      	add	r7, sp, #0
  ioport_init();
   80936:	f7ff fd62 	bl	803fe <ioport_init>
/*  ioport_set_port_dir(IOPORT_PIOC,\
       PIO_PC12 | PIO_PC14 | PIO_PC16 | PIO_PC13 |PIO_PC15 |PIO_PC17 |PIO_PC19,\
       IOPORT_DIR_OUTPUT);
       */

  ioport_set_pin_dir(_PIN_LCD_D4, IOPORT_DIR_OUTPUT);
   8093a:	2101      	movs	r1, #1
   8093c:	204d      	movs	r0, #77	; 0x4d
   8093e:	f7ff fd6e 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D5, IOPORT_DIR_OUTPUT);
   80942:	2101      	movs	r1, #1
   80944:	204f      	movs	r0, #79	; 0x4f
   80946:	f7ff fd6a 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D6, IOPORT_DIR_OUTPUT);
   8094a:	2101      	movs	r1, #1
   8094c:	2051      	movs	r0, #81	; 0x51
   8094e:	f7ff fd66 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D7, IOPORT_DIR_OUTPUT);
   80952:	2101      	movs	r1, #1
   80954:	2053      	movs	r0, #83	; 0x53
   80956:	f7ff fd62 	bl	8041e <ioport_set_pin_dir>

  ioport_set_pin_dir(_PIN_LCD_E, IOPORT_DIR_OUTPUT);
   8095a:	2101      	movs	r1, #1
   8095c:	2050      	movs	r0, #80	; 0x50
   8095e:	f7ff fd5e 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_RS, IOPORT_DIR_OUTPUT);
   80962:	2101      	movs	r1, #1
   80964:	204c      	movs	r0, #76	; 0x4c
   80966:	f7ff fd5a 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_RW, IOPORT_DIR_OUTPUT);
   8096a:	2101      	movs	r1, #1
   8096c:	204e      	movs	r0, #78	; 0x4e
   8096e:	f7ff fd56 	bl	8041e <ioport_set_pin_dir>


  delay_us(40000);
   80972:	f7ff fd31 	bl	803d8 <sysclk_get_cpu_hz>
   80976:	4603      	mov	r3, r0
   80978:	461d      	mov	r5, r3
   8097a:	f04f 0600 	mov.w	r6, #0
   8097e:	462b      	mov	r3, r5
   80980:	4634      	mov	r4, r6
   80982:	f04f 0100 	mov.w	r1, #0
   80986:	f04f 0200 	mov.w	r2, #0
   8098a:	00a2      	lsls	r2, r4, #2
   8098c:	ea42 7293 	orr.w	r2, r2, r3, lsr #30
   80990:	0099      	lsls	r1, r3, #2
   80992:	460b      	mov	r3, r1
   80994:	4614      	mov	r4, r2
   80996:	195b      	adds	r3, r3, r5
   80998:	eb44 0406 	adc.w	r4, r4, r6
   8099c:	f04f 0100 	mov.w	r1, #0
   809a0:	f04f 0200 	mov.w	r2, #0
   809a4:	00e2      	lsls	r2, r4, #3
   809a6:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
   809aa:	00d9      	lsls	r1, r3, #3
   809ac:	460b      	mov	r3, r1
   809ae:	4614      	mov	r4, r2
   809b0:	1b5b      	subs	r3, r3, r5
   809b2:	eb64 0406 	sbc.w	r4, r4, r6
   809b6:	f04f 0100 	mov.w	r1, #0
   809ba:	f04f 0200 	mov.w	r2, #0
   809be:	0122      	lsls	r2, r4, #4
   809c0:	ea42 7213 	orr.w	r2, r2, r3, lsr #28
   809c4:	0119      	lsls	r1, r3, #4
   809c6:	460b      	mov	r3, r1
   809c8:	4614      	mov	r4, r2
   809ca:	195b      	adds	r3, r3, r5
   809cc:	eb44 0406 	adc.w	r4, r4, r6
   809d0:	f04f 0100 	mov.w	r1, #0
   809d4:	f04f 0200 	mov.w	r2, #0
   809d8:	01a2      	lsls	r2, r4, #6
   809da:	ea42 6293 	orr.w	r2, r2, r3, lsr #26
   809de:	0199      	lsls	r1, r3, #6
   809e0:	460b      	mov	r3, r1
   809e2:	4614      	mov	r4, r2
   809e4:	4619      	mov	r1, r3
   809e6:	4622      	mov	r2, r4
   809e8:	a469      	add	r4, pc, #420	; (adr r4, 80b90 <lcd_init+0x260>)
   809ea:	e9d4 3400 	ldrd	r3, r4, [r4]
   809ee:	18cd      	adds	r5, r1, r3
   809f0:	eb42 0604 	adc.w	r6, r2, r4
   809f4:	4628      	mov	r0, r5
   809f6:	4631      	mov	r1, r6
   809f8:	4a67      	ldr	r2, [pc, #412]	; (80b98 <lcd_init+0x268>)
   809fa:	f04f 0300 	mov.w	r3, #0
   809fe:	f001 fb67 	bl	820d0 <__aeabi_uldivmod>
   80a02:	4603      	mov	r3, r0
   80a04:	460c      	mov	r4, r1
   80a06:	4618      	mov	r0, r3
   80a08:	f006 ffd2 	bl	879b0 <__portable_delay_cycles_veneer>

  lcd_write_half_comm(SET | BITS_8);
   80a0c:	2030      	movs	r0, #48	; 0x30
   80a0e:	f7ff ff55 	bl	808bc <lcd_write_half_comm>
  delay_us(4100);
   80a12:	f7ff fce1 	bl	803d8 <sysclk_get_cpu_hz>
   80a16:	4603      	mov	r3, r0
   80a18:	461d      	mov	r5, r3
   80a1a:	f04f 0600 	mov.w	r6, #0
   80a1e:	462b      	mov	r3, r5
   80a20:	4634      	mov	r4, r6
   80a22:	f04f 0100 	mov.w	r1, #0
   80a26:	f04f 0200 	mov.w	r2, #0
   80a2a:	02a2      	lsls	r2, r4, #10
   80a2c:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
   80a30:	0299      	lsls	r1, r3, #10
   80a32:	460b      	mov	r3, r1
   80a34:	4614      	mov	r4, r2
   80a36:	195b      	adds	r3, r3, r5
   80a38:	eb44 0406 	adc.w	r4, r4, r6
   80a3c:	f04f 0100 	mov.w	r1, #0
   80a40:	f04f 0200 	mov.w	r2, #0
   80a44:	00a2      	lsls	r2, r4, #2
   80a46:	ea42 7293 	orr.w	r2, r2, r3, lsr #30
   80a4a:	0099      	lsls	r1, r3, #2
   80a4c:	460b      	mov	r3, r1
   80a4e:	4614      	mov	r4, r2
   80a50:	4619      	mov	r1, r3
   80a52:	4622      	mov	r2, r4
   80a54:	a44e      	add	r4, pc, #312	; (adr r4, 80b90 <lcd_init+0x260>)
   80a56:	e9d4 3400 	ldrd	r3, r4, [r4]
   80a5a:	18cd      	adds	r5, r1, r3
   80a5c:	eb42 0604 	adc.w	r6, r2, r4
   80a60:	4628      	mov	r0, r5
   80a62:	4631      	mov	r1, r6
   80a64:	4a4c      	ldr	r2, [pc, #304]	; (80b98 <lcd_init+0x268>)
   80a66:	f04f 0300 	mov.w	r3, #0
   80a6a:	f001 fb31 	bl	820d0 <__aeabi_uldivmod>
   80a6e:	4603      	mov	r3, r0
   80a70:	460c      	mov	r4, r1
   80a72:	4618      	mov	r0, r3
   80a74:	f006 ff9c 	bl	879b0 <__portable_delay_cycles_veneer>


  lcd_write_half_comm(SET | BITS_8);
   80a78:	2030      	movs	r0, #48	; 0x30
   80a7a:	f7ff ff1f 	bl	808bc <lcd_write_half_comm>
  delay_us(100);
   80a7e:	f7ff fcab 	bl	803d8 <sysclk_get_cpu_hz>
   80a82:	4603      	mov	r3, r0
   80a84:	461d      	mov	r5, r3
   80a86:	f04f 0600 	mov.w	r6, #0
   80a8a:	46ab      	mov	fp, r5
   80a8c:	46b4      	mov	ip, r6
   80a8e:	eb1b 030b 	adds.w	r3, fp, fp
   80a92:	eb4c 040c 	adc.w	r4, ip, ip
   80a96:	469b      	mov	fp, r3
   80a98:	46a4      	mov	ip, r4
   80a9a:	eb1b 0b05 	adds.w	fp, fp, r5
   80a9e:	eb4c 0c06 	adc.w	ip, ip, r6
   80aa2:	f04f 0100 	mov.w	r1, #0
   80aa6:	f04f 0200 	mov.w	r2, #0
   80aaa:	ea4f 124c 	mov.w	r2, ip, lsl #5
   80aae:	ea42 62db 	orr.w	r2, r2, fp, lsr #27
   80ab2:	ea4f 114b 	mov.w	r1, fp, lsl #5
   80ab6:	eb1b 0b01 	adds.w	fp, fp, r1
   80aba:	eb4c 0c02 	adc.w	ip, ip, r2
   80abe:	eb1b 0305 	adds.w	r3, fp, r5
   80ac2:	eb4c 0406 	adc.w	r4, ip, r6
   80ac6:	a232      	add	r2, pc, #200	; (adr r2, 80b90 <lcd_init+0x260>)
   80ac8:	e9d2 1200 	ldrd	r1, r2, [r2]
   80acc:	185d      	adds	r5, r3, r1
   80ace:	eb44 0602 	adc.w	r6, r4, r2
   80ad2:	4628      	mov	r0, r5
   80ad4:	4631      	mov	r1, r6
   80ad6:	4a30      	ldr	r2, [pc, #192]	; (80b98 <lcd_init+0x268>)
   80ad8:	f04f 0300 	mov.w	r3, #0
   80adc:	f001 faf8 	bl	820d0 <__aeabi_uldivmod>
   80ae0:	4603      	mov	r3, r0
   80ae2:	460c      	mov	r4, r1
   80ae4:	4618      	mov	r0, r3
   80ae6:	f006 ff63 	bl	879b0 <__portable_delay_cycles_veneer>
  lcd_write_half_comm(SET | BITS_8);
   80aea:	2030      	movs	r0, #48	; 0x30
   80aec:	f7ff fee6 	bl	808bc <lcd_write_half_comm>
  busy();
   80af0:	f7ff fd36 	bl	80560 <busy>
  lcd_write_half_comm(SET | BITS_4);
   80af4:	2020      	movs	r0, #32
   80af6:	f7ff fee1 	bl	808bc <lcd_write_half_comm>
  delay_us(100);	// LCD initialisation sometimes hangs without this delay ???
   80afa:	f7ff fc6d 	bl	803d8 <sysclk_get_cpu_hz>
   80afe:	4603      	mov	r3, r0
   80b00:	461d      	mov	r5, r3
   80b02:	f04f 0600 	mov.w	r6, #0
   80b06:	46ab      	mov	fp, r5
   80b08:	46b4      	mov	ip, r6
   80b0a:	eb1b 030b 	adds.w	r3, fp, fp
   80b0e:	eb4c 040c 	adc.w	r4, ip, ip
   80b12:	469b      	mov	fp, r3
   80b14:	46a4      	mov	ip, r4
   80b16:	eb1b 0b05 	adds.w	fp, fp, r5
   80b1a:	eb4c 0c06 	adc.w	ip, ip, r6
   80b1e:	f04f 0100 	mov.w	r1, #0
   80b22:	f04f 0200 	mov.w	r2, #0
   80b26:	ea4f 124c 	mov.w	r2, ip, lsl #5
   80b2a:	ea42 62db 	orr.w	r2, r2, fp, lsr #27
   80b2e:	ea4f 114b 	mov.w	r1, fp, lsl #5
   80b32:	eb1b 0b01 	adds.w	fp, fp, r1
   80b36:	eb4c 0c02 	adc.w	ip, ip, r2
   80b3a:	eb1b 0305 	adds.w	r3, fp, r5
   80b3e:	eb4c 0406 	adc.w	r4, ip, r6
   80b42:	a213      	add	r2, pc, #76	; (adr r2, 80b90 <lcd_init+0x260>)
   80b44:	e9d2 1200 	ldrd	r1, r2, [r2]
   80b48:	185d      	adds	r5, r3, r1
   80b4a:	eb44 0602 	adc.w	r6, r4, r2
   80b4e:	4628      	mov	r0, r5
   80b50:	4631      	mov	r1, r6
   80b52:	4a11      	ldr	r2, [pc, #68]	; (80b98 <lcd_init+0x268>)
   80b54:	f04f 0300 	mov.w	r3, #0
   80b58:	f001 faba 	bl	820d0 <__aeabi_uldivmod>
   80b5c:	4603      	mov	r3, r0
   80b5e:	460c      	mov	r4, r1
   80b60:	4618      	mov	r0, r3
   80b62:	f006 ff25 	bl	879b0 <__portable_delay_cycles_veneer>
  busy();
   80b66:	f7ff fcfb 	bl	80560 <busy>
  lcd_write_comm(SET | BITS_4 | LINES_2 | DOTS_5_8);
   80b6a:	2028      	movs	r0, #40	; 0x28
   80b6c:	f7ff feb7 	bl	808de <lcd_write_comm>
  lcd_write_comm(CONTROL | DISPLAY_OFF | CURSOR_OFF | BLINK_OFF);
   80b70:	2008      	movs	r0, #8
   80b72:	f7ff feb4 	bl	808de <lcd_write_comm>
  lcd_write_comm(CLEAR_DISPLAY);
   80b76:	2001      	movs	r0, #1
   80b78:	f7ff feb1 	bl	808de <lcd_write_comm>
  lcd_write_comm(MODE | CURSOR_DIRECTION_RIGHT | DISPLAY_SHIFT_OFF);
   80b7c:	2006      	movs	r0, #6
   80b7e:	f7ff feae 	bl	808de <lcd_write_comm>
  lcd_write_comm(CONTROL | DISPLAY_ON | CURSOR_OFF | BLINK_OFF);
   80b82:	200c      	movs	r0, #12
   80b84:	f7ff feab 	bl	808de <lcd_write_comm>

}
   80b88:	bf00      	nop
   80b8a:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
   80b8e:	bf00      	nop
   80b90:	00d59f7f 	.word	0x00d59f7f
   80b94:	00000000 	.word	0x00000000
   80b98:	00d59f80 	.word	0x00d59f80

00080b9c <lcd_driver>:


/* Sends the lcd_string to the LCD */
void lcd_driver(void){
   80b9c:	b580      	push	{r7, lr}
   80b9e:	b082      	sub	sp, #8
   80ba0:	af00      	add	r7, sp, #0
  int i;
  lcd_write_comm(DDRAM | 0x00);
   80ba2:	2080      	movs	r0, #128	; 0x80
   80ba4:	f7ff fe9b 	bl	808de <lcd_write_comm>
  for(i = 0; i < 16; i++){
   80ba8:	2300      	movs	r3, #0
   80baa:	607b      	str	r3, [r7, #4]
   80bac:	e00a      	b.n	80bc4 <lcd_driver+0x28>
	lcd_write_data(lcd_string[i]);
   80bae:	4b12      	ldr	r3, [pc, #72]	; (80bf8 <lcd_driver+0x5c>)
   80bb0:	681a      	ldr	r2, [r3, #0]
   80bb2:	687b      	ldr	r3, [r7, #4]
   80bb4:	4413      	add	r3, r2
   80bb6:	781b      	ldrb	r3, [r3, #0]
   80bb8:	4618      	mov	r0, r3
   80bba:	f7ff fea1 	bl	80900 <lcd_write_data>
  for(i = 0; i < 16; i++){
   80bbe:	687b      	ldr	r3, [r7, #4]
   80bc0:	3301      	adds	r3, #1
   80bc2:	607b      	str	r3, [r7, #4]
   80bc4:	687b      	ldr	r3, [r7, #4]
   80bc6:	2b0f      	cmp	r3, #15
   80bc8:	ddf1      	ble.n	80bae <lcd_driver+0x12>
  }
  lcd_write_comm(DDRAM | 0x40);
   80bca:	20c0      	movs	r0, #192	; 0xc0
   80bcc:	f7ff fe87 	bl	808de <lcd_write_comm>
  for(; i < 32; i++){
   80bd0:	e00a      	b.n	80be8 <lcd_driver+0x4c>
	lcd_write_data(lcd_string[i]);
   80bd2:	4b09      	ldr	r3, [pc, #36]	; (80bf8 <lcd_driver+0x5c>)
   80bd4:	681a      	ldr	r2, [r3, #0]
   80bd6:	687b      	ldr	r3, [r7, #4]
   80bd8:	4413      	add	r3, r2
   80bda:	781b      	ldrb	r3, [r3, #0]
   80bdc:	4618      	mov	r0, r3
   80bde:	f7ff fe8f 	bl	80900 <lcd_write_data>
  for(; i < 32; i++){
   80be2:	687b      	ldr	r3, [r7, #4]
   80be4:	3301      	adds	r3, #1
   80be6:	607b      	str	r3, [r7, #4]
   80be8:	687b      	ldr	r3, [r7, #4]
   80bea:	2b1f      	cmp	r3, #31
   80bec:	ddf1      	ble.n	80bd2 <lcd_driver+0x36>
  }
}
   80bee:	bf00      	nop
   80bf0:	3708      	adds	r7, #8
   80bf2:	46bd      	mov	sp, r7
   80bf4:	bd80      	pop	{r7, pc}
   80bf6:	bf00      	nop
   80bf8:	200701bc 	.word	0x200701bc

00080bfc <ioport_set_pin_level>:
{
   80bfc:	b480      	push	{r7}
   80bfe:	b08b      	sub	sp, #44	; 0x2c
   80c00:	af00      	add	r7, sp, #0
   80c02:	6078      	str	r0, [r7, #4]
   80c04:	460b      	mov	r3, r1
   80c06:	70fb      	strb	r3, [r7, #3]
   80c08:	687b      	ldr	r3, [r7, #4]
   80c0a:	627b      	str	r3, [r7, #36]	; 0x24
   80c0c:	78fb      	ldrb	r3, [r7, #3]
   80c0e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   80c12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80c14:	61fb      	str	r3, [r7, #28]
   80c16:	69fb      	ldr	r3, [r7, #28]
   80c18:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   80c1a:	69bb      	ldr	r3, [r7, #24]
   80c1c:	095b      	lsrs	r3, r3, #5
   80c1e:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80c20:	697b      	ldr	r3, [r7, #20]
   80c22:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80c26:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80c2a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   80c2c:	613b      	str	r3, [r7, #16]
	if (level) {
   80c2e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   80c32:	2b00      	cmp	r3, #0
   80c34:	d009      	beq.n	80c4a <ioport_set_pin_level+0x4e>
   80c36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80c38:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   80c3a:	68fb      	ldr	r3, [r7, #12]
   80c3c:	f003 031f 	and.w	r3, r3, #31
   80c40:	2201      	movs	r2, #1
   80c42:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80c44:	693b      	ldr	r3, [r7, #16]
   80c46:	631a      	str	r2, [r3, #48]	; 0x30
}
   80c48:	e008      	b.n	80c5c <ioport_set_pin_level+0x60>
   80c4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80c4c:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   80c4e:	68bb      	ldr	r3, [r7, #8]
   80c50:	f003 031f 	and.w	r3, r3, #31
   80c54:	2201      	movs	r2, #1
   80c56:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80c58:	693b      	ldr	r3, [r7, #16]
   80c5a:	635a      	str	r2, [r3, #52]	; 0x34
   80c5c:	bf00      	nop
   80c5e:	372c      	adds	r7, #44	; 0x2c
   80c60:	46bd      	mov	sp, r7
   80c62:	bc80      	pop	{r7}
   80c64:	4770      	bx	lr

00080c66 <ioport_toggle_pin_level>:
 * an output.
 *
 * \param pin IOPORT pin to toggle
 */
static inline void ioport_toggle_pin_level(ioport_pin_t pin)
{
   80c66:	b480      	push	{r7}
   80c68:	b08b      	sub	sp, #44	; 0x2c
   80c6a:	af00      	add	r7, sp, #0
   80c6c:	6078      	str	r0, [r7, #4]
   80c6e:	687b      	ldr	r3, [r7, #4]
   80c70:	627b      	str	r3, [r7, #36]	; 0x24
   80c72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80c74:	623b      	str	r3, [r7, #32]
   80c76:	6a3b      	ldr	r3, [r7, #32]
   80c78:	61fb      	str	r3, [r7, #28]
	return pin >> 5;
   80c7a:	69fb      	ldr	r3, [r7, #28]
   80c7c:	095b      	lsrs	r3, r3, #5
   80c7e:	61bb      	str	r3, [r7, #24]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80c80:	69bb      	ldr	r3, [r7, #24]
   80c82:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80c86:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80c8a:	025b      	lsls	r3, r3, #9
	return arch_ioport_port_to_base(port)->PIO_PDSR & mask;
}

__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
   80c8c:	617b      	str	r3, [r7, #20]
   80c8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80c90:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   80c92:	693b      	ldr	r3, [r7, #16]
   80c94:	f003 031f 	and.w	r3, r3, #31
   80c98:	2201      	movs	r2, #1
   80c9a:	fa02 f303 	lsl.w	r3, r2, r3
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);
   80c9e:	60fb      	str	r3, [r7, #12]

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
   80ca0:	697b      	ldr	r3, [r7, #20]
   80ca2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   80ca4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80ca6:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   80ca8:	68bb      	ldr	r3, [r7, #8]
   80caa:	f003 031f 	and.w	r3, r3, #31
   80cae:	2101      	movs	r1, #1
   80cb0:	fa01 f303 	lsl.w	r3, r1, r3
	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
   80cb4:	4013      	ands	r3, r2
   80cb6:	2b00      	cmp	r3, #0
   80cb8:	d003      	beq.n	80cc2 <ioport_toggle_pin_level+0x5c>
		port->PIO_CODR = mask;
   80cba:	697b      	ldr	r3, [r7, #20]
   80cbc:	68fa      	ldr	r2, [r7, #12]
   80cbe:	635a      	str	r2, [r3, #52]	; 0x34
	arch_ioport_toggle_pin_level(pin);
}
   80cc0:	e002      	b.n	80cc8 <ioport_toggle_pin_level+0x62>
	} else {
		port->PIO_SODR = mask;
   80cc2:	697b      	ldr	r3, [r7, #20]
   80cc4:	68fa      	ldr	r2, [r7, #12]
   80cc6:	631a      	str	r2, [r3, #48]	; 0x30
   80cc8:	bf00      	nop
   80cca:	372c      	adds	r7, #44	; 0x2c
   80ccc:	46bd      	mov	sp, r7
   80cce:	bc80      	pop	{r7}
   80cd0:	4770      	bx	lr
	...

00080cd4 <ura_driver>:


/*****************FUNKCIJE**************************************************/


void ura_driver(void){
   80cd4:	b580      	push	{r7, lr}
   80cd6:	af00      	add	r7, sp, #0
    static uint32_t clk = 0;

    clk++;
   80cd8:	4b0b      	ldr	r3, [pc, #44]	; (80d08 <ura_driver+0x34>)
   80cda:	681b      	ldr	r3, [r3, #0]
   80cdc:	3301      	adds	r3, #1
   80cde:	4a0a      	ldr	r2, [pc, #40]	; (80d08 <ura_driver+0x34>)
   80ce0:	6013      	str	r3, [r2, #0]

    if(!(clk%25)){
   80ce2:	4b09      	ldr	r3, [pc, #36]	; (80d08 <ura_driver+0x34>)
   80ce4:	6819      	ldr	r1, [r3, #0]
   80ce6:	4b09      	ldr	r3, [pc, #36]	; (80d0c <ura_driver+0x38>)
   80ce8:	fba3 2301 	umull	r2, r3, r3, r1
   80cec:	08da      	lsrs	r2, r3, #3
   80cee:	4613      	mov	r3, r2
   80cf0:	009b      	lsls	r3, r3, #2
   80cf2:	4413      	add	r3, r2
   80cf4:	009a      	lsls	r2, r3, #2
   80cf6:	4413      	add	r3, r2
   80cf8:	1aca      	subs	r2, r1, r3
   80cfa:	2a00      	cmp	r2, #0
   80cfc:	d102      	bne.n	80d04 <ura_driver+0x30>
        ioport_toggle_pin_level(D1_IDX);
   80cfe:	2067      	movs	r0, #103	; 0x67
   80d00:	f7ff ffb1 	bl	80c66 <ioport_toggle_pin_level>
    }
}
   80d04:	bf00      	nop
   80d06:	bd80      	pop	{r7, pc}
   80d08:	20070c68 	.word	0x20070c68
   80d0c:	51eb851f 	.word	0x51eb851f

00080d10 <text_driver>:


void text_driver(void){
   80d10:	b580      	push	{r7, lr}
   80d12:	b084      	sub	sp, #16
   80d14:	af00      	add	r7, sp, #0
    static uint8_t position = 0;
    int i,n = 0;
   80d16:	2300      	movs	r3, #0
   80d18:	60bb      	str	r3, [r7, #8]
    uint8_t key;
    /// z isklapljanjem procesov


    n = fifo_read(&keys_fifo,&key,1);
   80d1a:	1dfb      	adds	r3, r7, #7
   80d1c:	2201      	movs	r2, #1
   80d1e:	4619      	mov	r1, r3
   80d20:	4845      	ldr	r0, [pc, #276]	; (80e38 <text_driver+0x128>)
   80d22:	f000 fcab 	bl	8167c <fifo_read>
   80d26:	4603      	mov	r3, r0
   80d28:	60bb      	str	r3, [r7, #8]

    if((key == 27) && n){
   80d2a:	79fb      	ldrb	r3, [r7, #7]
   80d2c:	2b1b      	cmp	r3, #27
   80d2e:	d109      	bne.n	80d44 <text_driver+0x34>
   80d30:	68bb      	ldr	r3, [r7, #8]
   80d32:	2b00      	cmp	r3, #0
   80d34:	d006      	beq.n	80d44 <text_driver+0x34>
        task_text.active = 0;
   80d36:	4b41      	ldr	r3, [pc, #260]	; (80e3c <text_driver+0x12c>)
   80d38:	2200      	movs	r2, #0
   80d3a:	74da      	strb	r2, [r3, #19]
        task_sent.active = 1;
   80d3c:	4b40      	ldr	r3, [pc, #256]	; (80e40 <text_driver+0x130>)
   80d3e:	2201      	movs	r2, #1
   80d40:	74da      	strb	r2, [r3, #19]
   80d42:	e075      	b.n	80e30 <text_driver+0x120>
    }
    else if(n){
   80d44:	68bb      	ldr	r3, [r7, #8]
   80d46:	2b00      	cmp	r3, #0
   80d48:	d072      	beq.n	80e30 <text_driver+0x120>

        switch(key){
   80d4a:	79fb      	ldrb	r3, [r7, #7]
   80d4c:	2b0d      	cmp	r3, #13
   80d4e:	d013      	beq.n	80d78 <text_driver+0x68>
   80d50:	2b7f      	cmp	r3, #127	; 0x7f
   80d52:	d002      	beq.n	80d5a <text_driver+0x4a>
   80d54:	2b0a      	cmp	r3, #10
   80d56:	d02b      	beq.n	80db0 <text_driver+0xa0>
   80d58:	e02e      	b.n	80db8 <text_driver+0xa8>

            case 127:  //backspace
                position--;
   80d5a:	4b3a      	ldr	r3, [pc, #232]	; (80e44 <text_driver+0x134>)
   80d5c:	781b      	ldrb	r3, [r3, #0]
   80d5e:	3b01      	subs	r3, #1
   80d60:	b2da      	uxtb	r2, r3
   80d62:	4b38      	ldr	r3, [pc, #224]	; (80e44 <text_driver+0x134>)
   80d64:	701a      	strb	r2, [r3, #0]
                lcd_string[16+position] = ' ';
   80d66:	4b38      	ldr	r3, [pc, #224]	; (80e48 <text_driver+0x138>)
   80d68:	681b      	ldr	r3, [r3, #0]
   80d6a:	4a36      	ldr	r2, [pc, #216]	; (80e44 <text_driver+0x134>)
   80d6c:	7812      	ldrb	r2, [r2, #0]
   80d6e:	3210      	adds	r2, #16
   80d70:	4413      	add	r3, r2
   80d72:	2220      	movs	r2, #32
   80d74:	701a      	strb	r2, [r3, #0]
                break;
   80d76:	e05b      	b.n	80e30 <text_driver+0x120>
            case  13:  // line fead
                for(i=0; i<16;i++){
   80d78:	2300      	movs	r3, #0
   80d7a:	60fb      	str	r3, [r7, #12]
   80d7c:	e014      	b.n	80da8 <text_driver+0x98>
                    lcd_string[i] = lcd_string[i+16];
   80d7e:	4b32      	ldr	r3, [pc, #200]	; (80e48 <text_driver+0x138>)
   80d80:	681a      	ldr	r2, [r3, #0]
   80d82:	68fb      	ldr	r3, [r7, #12]
   80d84:	3310      	adds	r3, #16
   80d86:	441a      	add	r2, r3
   80d88:	4b2f      	ldr	r3, [pc, #188]	; (80e48 <text_driver+0x138>)
   80d8a:	6819      	ldr	r1, [r3, #0]
   80d8c:	68fb      	ldr	r3, [r7, #12]
   80d8e:	440b      	add	r3, r1
   80d90:	7812      	ldrb	r2, [r2, #0]
   80d92:	701a      	strb	r2, [r3, #0]
                    lcd_string[i+16] = ' ';
   80d94:	4b2c      	ldr	r3, [pc, #176]	; (80e48 <text_driver+0x138>)
   80d96:	681a      	ldr	r2, [r3, #0]
   80d98:	68fb      	ldr	r3, [r7, #12]
   80d9a:	3310      	adds	r3, #16
   80d9c:	4413      	add	r3, r2
   80d9e:	2220      	movs	r2, #32
   80da0:	701a      	strb	r2, [r3, #0]
                for(i=0; i<16;i++){
   80da2:	68fb      	ldr	r3, [r7, #12]
   80da4:	3301      	adds	r3, #1
   80da6:	60fb      	str	r3, [r7, #12]
   80da8:	68fb      	ldr	r3, [r7, #12]
   80daa:	2b0f      	cmp	r3, #15
   80dac:	dde7      	ble.n	80d7e <text_driver+0x6e>

                }
                break;
   80dae:	e03f      	b.n	80e30 <text_driver+0x120>
            case 10:  //carage return
                position = 0;
   80db0:	4b24      	ldr	r3, [pc, #144]	; (80e44 <text_driver+0x134>)
   80db2:	2200      	movs	r2, #0
   80db4:	701a      	strb	r2, [r3, #0]
                break;
   80db6:	e03b      	b.n	80e30 <text_driver+0x120>
            default:
                sprintf(lcd_string+16+position,"%c",(char)key);
   80db8:	4b23      	ldr	r3, [pc, #140]	; (80e48 <text_driver+0x138>)
   80dba:	681a      	ldr	r2, [r3, #0]
   80dbc:	4b21      	ldr	r3, [pc, #132]	; (80e44 <text_driver+0x134>)
   80dbe:	781b      	ldrb	r3, [r3, #0]
   80dc0:	3310      	adds	r3, #16
   80dc2:	4413      	add	r3, r2
   80dc4:	79fa      	ldrb	r2, [r7, #7]
   80dc6:	4921      	ldr	r1, [pc, #132]	; (80e4c <text_driver+0x13c>)
   80dc8:	4618      	mov	r0, r3
   80dca:	f001 fbaf 	bl	8252c <sprintf>
                position++;
   80dce:	4b1d      	ldr	r3, [pc, #116]	; (80e44 <text_driver+0x134>)
   80dd0:	781b      	ldrb	r3, [r3, #0]
   80dd2:	3301      	adds	r3, #1
   80dd4:	b2da      	uxtb	r2, r3
   80dd6:	4b1b      	ldr	r3, [pc, #108]	; (80e44 <text_driver+0x134>)
   80dd8:	701a      	strb	r2, [r3, #0]
                lcd_string[16+position] = ' ';
   80dda:	4b1b      	ldr	r3, [pc, #108]	; (80e48 <text_driver+0x138>)
   80ddc:	681b      	ldr	r3, [r3, #0]
   80dde:	4a19      	ldr	r2, [pc, #100]	; (80e44 <text_driver+0x134>)
   80de0:	7812      	ldrb	r2, [r2, #0]
   80de2:	3210      	adds	r2, #16
   80de4:	4413      	add	r3, r2
   80de6:	2220      	movs	r2, #32
   80de8:	701a      	strb	r2, [r3, #0]

                if(position == 16){
   80dea:	4b16      	ldr	r3, [pc, #88]	; (80e44 <text_driver+0x134>)
   80dec:	781b      	ldrb	r3, [r3, #0]
   80dee:	2b10      	cmp	r3, #16
   80df0:	d11e      	bne.n	80e30 <text_driver+0x120>
                    position = 0;
   80df2:	4b14      	ldr	r3, [pc, #80]	; (80e44 <text_driver+0x134>)
   80df4:	2200      	movs	r2, #0
   80df6:	701a      	strb	r2, [r3, #0]

                    for(i=0; i<16;i++){
   80df8:	2300      	movs	r3, #0
   80dfa:	60fb      	str	r3, [r7, #12]
   80dfc:	e014      	b.n	80e28 <text_driver+0x118>
                        lcd_string[i] = lcd_string[i+16];
   80dfe:	4b12      	ldr	r3, [pc, #72]	; (80e48 <text_driver+0x138>)
   80e00:	681a      	ldr	r2, [r3, #0]
   80e02:	68fb      	ldr	r3, [r7, #12]
   80e04:	3310      	adds	r3, #16
   80e06:	441a      	add	r2, r3
   80e08:	4b0f      	ldr	r3, [pc, #60]	; (80e48 <text_driver+0x138>)
   80e0a:	6819      	ldr	r1, [r3, #0]
   80e0c:	68fb      	ldr	r3, [r7, #12]
   80e0e:	440b      	add	r3, r1
   80e10:	7812      	ldrb	r2, [r2, #0]
   80e12:	701a      	strb	r2, [r3, #0]
                        lcd_string[i+16] = ' ';
   80e14:	4b0c      	ldr	r3, [pc, #48]	; (80e48 <text_driver+0x138>)
   80e16:	681a      	ldr	r2, [r3, #0]
   80e18:	68fb      	ldr	r3, [r7, #12]
   80e1a:	3310      	adds	r3, #16
   80e1c:	4413      	add	r3, r2
   80e1e:	2220      	movs	r2, #32
   80e20:	701a      	strb	r2, [r3, #0]
                    for(i=0; i<16;i++){
   80e22:	68fb      	ldr	r3, [r7, #12]
   80e24:	3301      	adds	r3, #1
   80e26:	60fb      	str	r3, [r7, #12]
   80e28:	68fb      	ldr	r3, [r7, #12]
   80e2a:	2b0f      	cmp	r3, #15
   80e2c:	dde7      	ble.n	80dfe <text_driver+0xee>

                    }
                }
        }
    }
}
   80e2e:	e7ff      	b.n	80e30 <text_driver+0x120>
   80e30:	bf00      	nop
   80e32:	3710      	adds	r7, #16
   80e34:	46bd      	mov	sp, r7
   80e36:	bd80      	pop	{r7, pc}
   80e38:	20070288 	.word	0x20070288
   80e3c:	200701f0 	.word	0x200701f0
   80e40:	20070238 	.word	0x20070238
   80e44:	20070c6c 	.word	0x20070c6c
   80e48:	200701bc 	.word	0x200701bc
   80e4c:	00087688 	.word	0x00087688

00080e50 <buttons_driver>:


void buttons_driver(void){
   80e50:	b580      	push	{r7, lr}
   80e52:	b082      	sub	sp, #8
   80e54:	af00      	add	r7, sp, #0
    int butons = 0;
   80e56:	2300      	movs	r3, #0
   80e58:	607b      	str	r3, [r7, #4]

    butons = get_button_press();
   80e5a:	f000 fb07 	bl	8146c <get_button_press>
   80e5e:	6078      	str	r0, [r7, #4]

    if(butons & Mask_T1){
   80e60:	687b      	ldr	r3, [r7, #4]
   80e62:	f003 0301 	and.w	r3, r3, #1
   80e66:	2b00      	cmp	r3, #0
   80e68:	d004      	beq.n	80e74 <buttons_driver+0x24>
        fifo_write(&keys_fifo,(const unsigned char *)"T1",2);
   80e6a:	2202      	movs	r2, #2
   80e6c:	4912      	ldr	r1, [pc, #72]	; (80eb8 <buttons_driver+0x68>)
   80e6e:	4813      	ldr	r0, [pc, #76]	; (80ebc <buttons_driver+0x6c>)
   80e70:	f000 fc3d 	bl	816ee <fifo_write>
    }
    if(butons & Mask_T2){
   80e74:	687b      	ldr	r3, [r7, #4]
   80e76:	f003 0302 	and.w	r3, r3, #2
   80e7a:	2b00      	cmp	r3, #0
   80e7c:	d004      	beq.n	80e88 <buttons_driver+0x38>
        fifo_write(&keys_fifo,(const unsigned char *)"T2",2);
   80e7e:	2202      	movs	r2, #2
   80e80:	490f      	ldr	r1, [pc, #60]	; (80ec0 <buttons_driver+0x70>)
   80e82:	480e      	ldr	r0, [pc, #56]	; (80ebc <buttons_driver+0x6c>)
   80e84:	f000 fc33 	bl	816ee <fifo_write>
    }
    if(butons & Mask_T3){
   80e88:	687b      	ldr	r3, [r7, #4]
   80e8a:	f003 0304 	and.w	r3, r3, #4
   80e8e:	2b00      	cmp	r3, #0
   80e90:	d004      	beq.n	80e9c <buttons_driver+0x4c>
        fifo_write(&keys_fifo,(const unsigned char *)"T3",2);
   80e92:	2202      	movs	r2, #2
   80e94:	490b      	ldr	r1, [pc, #44]	; (80ec4 <buttons_driver+0x74>)
   80e96:	4809      	ldr	r0, [pc, #36]	; (80ebc <buttons_driver+0x6c>)
   80e98:	f000 fc29 	bl	816ee <fifo_write>
    }
    if(butons & Mask_T4){
   80e9c:	687b      	ldr	r3, [r7, #4]
   80e9e:	f003 0308 	and.w	r3, r3, #8
   80ea2:	2b00      	cmp	r3, #0
   80ea4:	d004      	beq.n	80eb0 <buttons_driver+0x60>
        fifo_write(&keys_fifo,(const unsigned char *)"T4",2);   //write protect še nared
   80ea6:	2202      	movs	r2, #2
   80ea8:	4907      	ldr	r1, [pc, #28]	; (80ec8 <buttons_driver+0x78>)
   80eaa:	4804      	ldr	r0, [pc, #16]	; (80ebc <buttons_driver+0x6c>)
   80eac:	f000 fc1f 	bl	816ee <fifo_write>
    }
}
   80eb0:	bf00      	nop
   80eb2:	3708      	adds	r7, #8
   80eb4:	46bd      	mov	sp, r7
   80eb6:	bd80      	pop	{r7, pc}
   80eb8:	0008768c 	.word	0x0008768c
   80ebc:	20070288 	.word	0x20070288
   80ec0:	00087690 	.word	0x00087690
   80ec4:	00087694 	.word	0x00087694
   80ec8:	00087698 	.word	0x00087698

00080ecc <led_driver>:


void led_driver(void){
   80ecc:	b580      	push	{r7, lr}
   80ece:	b082      	sub	sp, #8
   80ed0:	af00      	add	r7, sp, #0
    uint8_t  check, data_read;
    static uint8_t  count=0;


    if(count>0){
   80ed2:	4b32      	ldr	r3, [pc, #200]	; (80f9c <led_driver+0xd0>)
   80ed4:	781b      	ldrb	r3, [r3, #0]
   80ed6:	2b00      	cmp	r3, #0
   80ed8:	d039      	beq.n	80f4e <led_driver+0x82>
        if((count%5 == 0)  && (count>50)){
   80eda:	4b30      	ldr	r3, [pc, #192]	; (80f9c <led_driver+0xd0>)
   80edc:	781a      	ldrb	r2, [r3, #0]
   80ede:	4b30      	ldr	r3, [pc, #192]	; (80fa0 <led_driver+0xd4>)
   80ee0:	fba3 1302 	umull	r1, r3, r3, r2
   80ee4:	0899      	lsrs	r1, r3, #2
   80ee6:	460b      	mov	r3, r1
   80ee8:	009b      	lsls	r3, r3, #2
   80eea:	440b      	add	r3, r1
   80eec:	1ad3      	subs	r3, r2, r3
   80eee:	b2db      	uxtb	r3, r3
   80ef0:	2b00      	cmp	r3, #0
   80ef2:	d10c      	bne.n	80f0e <led_driver+0x42>
   80ef4:	4b29      	ldr	r3, [pc, #164]	; (80f9c <led_driver+0xd0>)
   80ef6:	781b      	ldrb	r3, [r3, #0]
   80ef8:	2b32      	cmp	r3, #50	; 0x32
   80efa:	d908      	bls.n	80f0e <led_driver+0x42>
            ioport_set_pin_level(D4_IDX, HIGH);
   80efc:	2101      	movs	r1, #1
   80efe:	2056      	movs	r0, #86	; 0x56
   80f00:	f7ff fe7c 	bl	80bfc <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, HIGH);
   80f04:	2101      	movs	r1, #1
   80f06:	205d      	movs	r0, #93	; 0x5d
   80f08:	f7ff fe78 	bl	80bfc <ioport_set_pin_level>
   80f0c:	e018      	b.n	80f40 <led_driver+0x74>

        }
        else if((count%5 == 3)  && (count>50)){
   80f0e:	4b23      	ldr	r3, [pc, #140]	; (80f9c <led_driver+0xd0>)
   80f10:	781a      	ldrb	r2, [r3, #0]
   80f12:	4b23      	ldr	r3, [pc, #140]	; (80fa0 <led_driver+0xd4>)
   80f14:	fba3 1302 	umull	r1, r3, r3, r2
   80f18:	0899      	lsrs	r1, r3, #2
   80f1a:	460b      	mov	r3, r1
   80f1c:	009b      	lsls	r3, r3, #2
   80f1e:	440b      	add	r3, r1
   80f20:	1ad3      	subs	r3, r2, r3
   80f22:	b2db      	uxtb	r3, r3
   80f24:	2b03      	cmp	r3, #3
   80f26:	d10b      	bne.n	80f40 <led_driver+0x74>
   80f28:	4b1c      	ldr	r3, [pc, #112]	; (80f9c <led_driver+0xd0>)
   80f2a:	781b      	ldrb	r3, [r3, #0]
   80f2c:	2b32      	cmp	r3, #50	; 0x32
   80f2e:	d907      	bls.n	80f40 <led_driver+0x74>
            ioport_set_pin_level(D4_IDX, LOW);
   80f30:	2100      	movs	r1, #0
   80f32:	2056      	movs	r0, #86	; 0x56
   80f34:	f7ff fe62 	bl	80bfc <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, LOW);
   80f38:	2100      	movs	r1, #0
   80f3a:	205d      	movs	r0, #93	; 0x5d
   80f3c:	f7ff fe5e 	bl	80bfc <ioport_set_pin_level>

        }
        else{
        }

        count--;
   80f40:	4b16      	ldr	r3, [pc, #88]	; (80f9c <led_driver+0xd0>)
   80f42:	781b      	ldrb	r3, [r3, #0]
   80f44:	3b01      	subs	r3, #1
   80f46:	b2da      	uxtb	r2, r3
   80f48:	4b14      	ldr	r3, [pc, #80]	; (80f9c <led_driver+0xd0>)
   80f4a:	701a      	strb	r2, [r3, #0]
        else{
        //error reading or buffer empty
        }
    }

}
   80f4c:	e021      	b.n	80f92 <led_driver+0xc6>
        check = fifo_read (&keys_fifo, &data_read, 1);
   80f4e:	1dbb      	adds	r3, r7, #6
   80f50:	2201      	movs	r2, #1
   80f52:	4619      	mov	r1, r3
   80f54:	4813      	ldr	r0, [pc, #76]	; (80fa4 <led_driver+0xd8>)
   80f56:	f000 fb91 	bl	8167c <fifo_read>
   80f5a:	4603      	mov	r3, r0
   80f5c:	71fb      	strb	r3, [r7, #7]
        if(check == 1){
   80f5e:	79fb      	ldrb	r3, [r7, #7]
   80f60:	2b01      	cmp	r3, #1
   80f62:	d116      	bne.n	80f92 <led_driver+0xc6>
            count = data_read * 5 +50;
   80f64:	79bb      	ldrb	r3, [r7, #6]
   80f66:	461a      	mov	r2, r3
   80f68:	0092      	lsls	r2, r2, #2
   80f6a:	4413      	add	r3, r2
   80f6c:	b2db      	uxtb	r3, r3
   80f6e:	3332      	adds	r3, #50	; 0x32
   80f70:	b2da      	uxtb	r2, r3
   80f72:	4b0a      	ldr	r3, [pc, #40]	; (80f9c <led_driver+0xd0>)
   80f74:	701a      	strb	r2, [r3, #0]
            ioport_set_pin_level(D4_IDX, HIGH);
   80f76:	2101      	movs	r1, #1
   80f78:	2056      	movs	r0, #86	; 0x56
   80f7a:	f7ff fe3f 	bl	80bfc <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, HIGH);
   80f7e:	2101      	movs	r1, #1
   80f80:	205d      	movs	r0, #93	; 0x5d
   80f82:	f7ff fe3b 	bl	80bfc <ioport_set_pin_level>
            count--;
   80f86:	4b05      	ldr	r3, [pc, #20]	; (80f9c <led_driver+0xd0>)
   80f88:	781b      	ldrb	r3, [r3, #0]
   80f8a:	3b01      	subs	r3, #1
   80f8c:	b2da      	uxtb	r2, r3
   80f8e:	4b03      	ldr	r3, [pc, #12]	; (80f9c <led_driver+0xd0>)
   80f90:	701a      	strb	r2, [r3, #0]
}
   80f92:	bf00      	nop
   80f94:	3708      	adds	r7, #8
   80f96:	46bd      	mov	sp, r7
   80f98:	bd80      	pop	{r7, pc}
   80f9a:	bf00      	nop
   80f9c:	20070c6d 	.word	0x20070c6d
   80fa0:	cccccccd 	.word	0xcccccccd
   80fa4:	20070288 	.word	0x20070288

00080fa8 <sent_driver>:

void sent_driver(void){
   80fa8:	b580      	push	{r7, lr}
   80faa:	b082      	sub	sp, #8
   80fac:	af00      	add	r7, sp, #0
    int n;
    uint8_t key;

    n = fifo_read(&keys_fifo,&key,1);
   80fae:	1cfb      	adds	r3, r7, #3
   80fb0:	2201      	movs	r2, #1
   80fb2:	4619      	mov	r1, r3
   80fb4:	480f      	ldr	r0, [pc, #60]	; (80ff4 <sent_driver+0x4c>)
   80fb6:	f000 fb61 	bl	8167c <fifo_read>
   80fba:	4603      	mov	r3, r0
   80fbc:	607b      	str	r3, [r7, #4]

    if((key == 27) && n){
   80fbe:	78fb      	ldrb	r3, [r7, #3]
   80fc0:	2b1b      	cmp	r3, #27
   80fc2:	d109      	bne.n	80fd8 <sent_driver+0x30>
   80fc4:	687b      	ldr	r3, [r7, #4]
   80fc6:	2b00      	cmp	r3, #0
   80fc8:	d006      	beq.n	80fd8 <sent_driver+0x30>
        task_text.active = 1;
   80fca:	4b0b      	ldr	r3, [pc, #44]	; (80ff8 <sent_driver+0x50>)
   80fcc:	2201      	movs	r2, #1
   80fce:	74da      	strb	r2, [r3, #19]
        task_sent.active = 0;
   80fd0:	4b0a      	ldr	r3, [pc, #40]	; (80ffc <sent_driver+0x54>)
   80fd2:	2200      	movs	r2, #0
   80fd4:	74da      	strb	r2, [r3, #19]
    }
    else if(n){
        PDC_UART -> PERIPH_TPR = (uint32_t)&key;
        PDC_UART -> PERIPH_TCR = 1;
    }
}
   80fd6:	e008      	b.n	80fea <sent_driver+0x42>
    else if(n){
   80fd8:	687b      	ldr	r3, [r7, #4]
   80fda:	2b00      	cmp	r3, #0
   80fdc:	d005      	beq.n	80fea <sent_driver+0x42>
        PDC_UART -> PERIPH_TPR = (uint32_t)&key;
   80fde:	4a08      	ldr	r2, [pc, #32]	; (81000 <sent_driver+0x58>)
   80fe0:	1cfb      	adds	r3, r7, #3
   80fe2:	6093      	str	r3, [r2, #8]
        PDC_UART -> PERIPH_TCR = 1;
   80fe4:	4b06      	ldr	r3, [pc, #24]	; (81000 <sent_driver+0x58>)
   80fe6:	2201      	movs	r2, #1
   80fe8:	60da      	str	r2, [r3, #12]
}
   80fea:	bf00      	nop
   80fec:	3708      	adds	r7, #8
   80fee:	46bd      	mov	sp, r7
   80ff0:	bd80      	pop	{r7, pc}
   80ff2:	bf00      	nop
   80ff4:	20070288 	.word	0x20070288
   80ff8:	200701f0 	.word	0x200701f0
   80ffc:	20070238 	.word	0x20070238
   81000:	400e0900 	.word	0x400e0900

00081004 <dma_driver>:


void dma_driver(void){
   81004:	b580      	push	{r7, lr}
   81006:	b082      	sub	sp, #8
   81008:	af00      	add	r7, sp, #0
    uint8_t *check_sent;
    static uint8_t overflow = 0;

    check_sent = (uint8_t*)PDC_UART->PERIPH_RPR-1;
   8100a:	4b2d      	ldr	r3, [pc, #180]	; (810c0 <dma_driver+0xbc>)
   8100c:	681b      	ldr	r3, [r3, #0]
   8100e:	3b01      	subs	r3, #1
   81010:	607b      	str	r3, [r7, #4]

    if(*check_sent == 13 && overflow){
   81012:	687b      	ldr	r3, [r7, #4]
   81014:	781b      	ldrb	r3, [r3, #0]
   81016:	2b0d      	cmp	r3, #13
   81018:	d115      	bne.n	81046 <dma_driver+0x42>
   8101a:	4b2a      	ldr	r3, [pc, #168]	; (810c4 <dma_driver+0xc0>)
   8101c:	781b      	ldrb	r3, [r3, #0]
   8101e:	2b00      	cmp	r3, #0
   81020:	d011      	beq.n	81046 <dma_driver+0x42>
        overflow = 0;
   81022:	4b28      	ldr	r3, [pc, #160]	; (810c4 <dma_driver+0xc0>)
   81024:	2200      	movs	r2, #0
   81026:	701a      	strb	r2, [r3, #0]
        fifo_write(&keys_fifo,(uint8_t *)"ok\r",3);
   81028:	2203      	movs	r2, #3
   8102a:	4927      	ldr	r1, [pc, #156]	; (810c8 <dma_driver+0xc4>)
   8102c:	4827      	ldr	r0, [pc, #156]	; (810cc <dma_driver+0xc8>)
   8102e:	f000 fb5e 	bl	816ee <fifo_write>

        PDC_UART -> PERIPH_RPR = (uint32_t)memory0;
   81032:	4b23      	ldr	r3, [pc, #140]	; (810c0 <dma_driver+0xbc>)
   81034:	4a26      	ldr	r2, [pc, #152]	; (810d0 <dma_driver+0xcc>)
   81036:	601a      	str	r2, [r3, #0]
        PDC_UART -> PERIPH_RCR = MEMORY_SIZE;
   81038:	4b21      	ldr	r3, [pc, #132]	; (810c0 <dma_driver+0xbc>)
   8103a:	2210      	movs	r2, #16
   8103c:	605a      	str	r2, [r3, #4]
        PDC_UART -> PERIPH_RNCR = 0;
   8103e:	4b20      	ldr	r3, [pc, #128]	; (810c0 <dma_driver+0xbc>)
   81040:	2200      	movs	r2, #0
   81042:	615a      	str	r2, [r3, #20]
        PDC_UART -> PERIPH_RCR = MEMORY_SIZE;
        PDC_UART -> PERIPH_RNCR = 0;

        overflow = 1;
    }
}
   81044:	e038      	b.n	810b8 <dma_driver+0xb4>
    else if(*check_sent == 13){
   81046:	687b      	ldr	r3, [r7, #4]
   81048:	781b      	ldrb	r3, [r3, #0]
   8104a:	2b0d      	cmp	r3, #13
   8104c:	d11f      	bne.n	8108e <dma_driver+0x8a>
        fifo_write(&keys_fifo,(uint8_t*)PDC_UART->PERIPH_RPR - (MEMORY_SIZE - PDC_UART -> PERIPH_RCR),MEMORY_SIZE - PDC_UART -> PERIPH_RCR);
   8104e:	4b1c      	ldr	r3, [pc, #112]	; (810c0 <dma_driver+0xbc>)
   81050:	685a      	ldr	r2, [r3, #4]
   81052:	4b1b      	ldr	r3, [pc, #108]	; (810c0 <dma_driver+0xbc>)
   81054:	681b      	ldr	r3, [r3, #0]
   81056:	4413      	add	r3, r2
   81058:	3b10      	subs	r3, #16
   8105a:	4619      	mov	r1, r3
   8105c:	4b18      	ldr	r3, [pc, #96]	; (810c0 <dma_driver+0xbc>)
   8105e:	685b      	ldr	r3, [r3, #4]
   81060:	b29b      	uxth	r3, r3
   81062:	f1c3 0310 	rsb	r3, r3, #16
   81066:	b29b      	uxth	r3, r3
   81068:	461a      	mov	r2, r3
   8106a:	4818      	ldr	r0, [pc, #96]	; (810cc <dma_driver+0xc8>)
   8106c:	f000 fb3f 	bl	816ee <fifo_write>
        fifo_write(&keys_fifo,(uint8_t*)"\n",1);
   81070:	2201      	movs	r2, #1
   81072:	4918      	ldr	r1, [pc, #96]	; (810d4 <dma_driver+0xd0>)
   81074:	4815      	ldr	r0, [pc, #84]	; (810cc <dma_driver+0xc8>)
   81076:	f000 fb3a 	bl	816ee <fifo_write>
        PDC_UART -> PERIPH_RPR = (uint32_t)memory0;
   8107a:	4b11      	ldr	r3, [pc, #68]	; (810c0 <dma_driver+0xbc>)
   8107c:	4a14      	ldr	r2, [pc, #80]	; (810d0 <dma_driver+0xcc>)
   8107e:	601a      	str	r2, [r3, #0]
        PDC_UART -> PERIPH_RCR = MEMORY_SIZE;
   81080:	4b0f      	ldr	r3, [pc, #60]	; (810c0 <dma_driver+0xbc>)
   81082:	2210      	movs	r2, #16
   81084:	605a      	str	r2, [r3, #4]
        PDC_UART -> PERIPH_RNCR = 0;
   81086:	4b0e      	ldr	r3, [pc, #56]	; (810c0 <dma_driver+0xbc>)
   81088:	2200      	movs	r2, #0
   8108a:	615a      	str	r2, [r3, #20]
}
   8108c:	e014      	b.n	810b8 <dma_driver+0xb4>
    else if(!(uint8_t*)PDC_UART->PERIPH_RCR){
   8108e:	4b0c      	ldr	r3, [pc, #48]	; (810c0 <dma_driver+0xbc>)
   81090:	685b      	ldr	r3, [r3, #4]
   81092:	2b00      	cmp	r3, #0
   81094:	d110      	bne.n	810b8 <dma_driver+0xb4>
        fifo_write(&keys_fifo,(uint8_t*)"\n\roverfllow\n\r",13);
   81096:	220d      	movs	r2, #13
   81098:	490f      	ldr	r1, [pc, #60]	; (810d8 <dma_driver+0xd4>)
   8109a:	480c      	ldr	r0, [pc, #48]	; (810cc <dma_driver+0xc8>)
   8109c:	f000 fb27 	bl	816ee <fifo_write>
        PDC_UART -> PERIPH_RPR = (uint32_t)memory0;
   810a0:	4b07      	ldr	r3, [pc, #28]	; (810c0 <dma_driver+0xbc>)
   810a2:	4a0b      	ldr	r2, [pc, #44]	; (810d0 <dma_driver+0xcc>)
   810a4:	601a      	str	r2, [r3, #0]
        PDC_UART -> PERIPH_RCR = MEMORY_SIZE;
   810a6:	4b06      	ldr	r3, [pc, #24]	; (810c0 <dma_driver+0xbc>)
   810a8:	2210      	movs	r2, #16
   810aa:	605a      	str	r2, [r3, #4]
        PDC_UART -> PERIPH_RNCR = 0;
   810ac:	4b04      	ldr	r3, [pc, #16]	; (810c0 <dma_driver+0xbc>)
   810ae:	2200      	movs	r2, #0
   810b0:	615a      	str	r2, [r3, #20]
        overflow = 1;
   810b2:	4b04      	ldr	r3, [pc, #16]	; (810c4 <dma_driver+0xc0>)
   810b4:	2201      	movs	r2, #1
   810b6:	701a      	strb	r2, [r3, #0]
}
   810b8:	bf00      	nop
   810ba:	3708      	adds	r7, #8
   810bc:	46bd      	mov	sp, r7
   810be:	bd80      	pop	{r7, pc}
   810c0:	400e0900 	.word	0x400e0900
   810c4:	20070c6e 	.word	0x20070c6e
   810c8:	0008769c 	.word	0x0008769c
   810cc:	20070288 	.word	0x20070288
   810d0:	20070cac 	.word	0x20070cac
   810d4:	000876a0 	.word	0x000876a0
   810d8:	000876a4 	.word	0x000876a4

000810dc <sysclk_enable_peripheral_clock>:
{
   810dc:	b580      	push	{r7, lr}
   810de:	b082      	sub	sp, #8
   810e0:	af00      	add	r7, sp, #0
   810e2:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   810e4:	6878      	ldr	r0, [r7, #4]
   810e6:	f000 ff31 	bl	81f4c <pmc_enable_periph_clk>
}
   810ea:	bf00      	nop
   810ec:	3708      	adds	r7, #8
   810ee:	46bd      	mov	sp, r7
   810f0:	bd80      	pop	{r7, pc}

000810f2 <ioport_init>:
{
   810f2:	b580      	push	{r7, lr}
   810f4:	af00      	add	r7, sp, #0
	sysclk_enable_peripheral_clock(ID_PIOA);
   810f6:	200b      	movs	r0, #11
   810f8:	f7ff fff0 	bl	810dc <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(ID_PIOB);
   810fc:	200c      	movs	r0, #12
   810fe:	f7ff ffed 	bl	810dc <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(ID_PIOC);
   81102:	200d      	movs	r0, #13
   81104:	f7ff ffea 	bl	810dc <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(ID_PIOD);
   81108:	200e      	movs	r0, #14
   8110a:	f7ff ffe7 	bl	810dc <sysclk_enable_peripheral_clock>
}
   8110e:	bf00      	nop
   81110:	bd80      	pop	{r7, pc}

00081112 <ioport_enable_pin>:
{
   81112:	b480      	push	{r7}
   81114:	b089      	sub	sp, #36	; 0x24
   81116:	af00      	add	r7, sp, #0
   81118:	6078      	str	r0, [r7, #4]
   8111a:	687b      	ldr	r3, [r7, #4]
   8111c:	61fb      	str	r3, [r7, #28]
   8111e:	69fb      	ldr	r3, [r7, #28]
   81120:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   81122:	69bb      	ldr	r3, [r7, #24]
   81124:	095a      	lsrs	r2, r3, #5
   81126:	69fb      	ldr	r3, [r7, #28]
   81128:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   8112a:	697b      	ldr	r3, [r7, #20]
   8112c:	f003 031f 	and.w	r3, r3, #31
   81130:	2101      	movs	r1, #1
   81132:	fa01 f303 	lsl.w	r3, r1, r3
   81136:	613a      	str	r2, [r7, #16]
   81138:	60fb      	str	r3, [r7, #12]
   8113a:	693b      	ldr	r3, [r7, #16]
   8113c:	60bb      	str	r3, [r7, #8]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8113e:	68bb      	ldr	r3, [r7, #8]
   81140:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81144:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81148:	025b      	lsls	r3, r3, #9
   8114a:	461a      	mov	r2, r3
	arch_ioport_port_to_base(port)->PIO_PER = mask;
   8114c:	68fb      	ldr	r3, [r7, #12]
   8114e:	6013      	str	r3, [r2, #0]
}
   81150:	bf00      	nop
   81152:	3724      	adds	r7, #36	; 0x24
   81154:	46bd      	mov	sp, r7
   81156:	bc80      	pop	{r7}
   81158:	4770      	bx	lr

0008115a <ioport_set_pin_mode>:
{
   8115a:	b480      	push	{r7}
   8115c:	b08d      	sub	sp, #52	; 0x34
   8115e:	af00      	add	r7, sp, #0
   81160:	6078      	str	r0, [r7, #4]
   81162:	6039      	str	r1, [r7, #0]
   81164:	687b      	ldr	r3, [r7, #4]
   81166:	62fb      	str	r3, [r7, #44]	; 0x2c
   81168:	683b      	ldr	r3, [r7, #0]
   8116a:	62bb      	str	r3, [r7, #40]	; 0x28
   8116c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8116e:	627b      	str	r3, [r7, #36]	; 0x24
	return pin >> 5;
   81170:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81172:	095a      	lsrs	r2, r3, #5
   81174:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   81176:	623b      	str	r3, [r7, #32]
	return 1U << (pin & 0x1F);
   81178:	6a3b      	ldr	r3, [r7, #32]
   8117a:	f003 031f 	and.w	r3, r3, #31
   8117e:	2101      	movs	r1, #1
   81180:	fa01 f303 	lsl.w	r3, r1, r3
   81184:	61fa      	str	r2, [r7, #28]
   81186:	61bb      	str	r3, [r7, #24]
   81188:	6abb      	ldr	r3, [r7, #40]	; 0x28
   8118a:	617b      	str	r3, [r7, #20]
   8118c:	69fb      	ldr	r3, [r7, #28]
   8118e:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   81190:	693b      	ldr	r3, [r7, #16]
   81192:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81196:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8119a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_port_to_base(port);
   8119c:	60fb      	str	r3, [r7, #12]
	if (mode & IOPORT_MODE_PULLUP) {
   8119e:	697b      	ldr	r3, [r7, #20]
   811a0:	f003 0308 	and.w	r3, r3, #8
   811a4:	2b00      	cmp	r3, #0
   811a6:	d003      	beq.n	811b0 <ioport_set_pin_mode+0x56>
		base->PIO_PUER = mask;
   811a8:	68fb      	ldr	r3, [r7, #12]
   811aa:	69ba      	ldr	r2, [r7, #24]
   811ac:	665a      	str	r2, [r3, #100]	; 0x64
   811ae:	e002      	b.n	811b6 <ioport_set_pin_mode+0x5c>
		base->PIO_PUDR = mask;
   811b0:	68fb      	ldr	r3, [r7, #12]
   811b2:	69ba      	ldr	r2, [r7, #24]
   811b4:	661a      	str	r2, [r3, #96]	; 0x60
	if (mode & IOPORT_MODE_OPEN_DRAIN) {
   811b6:	697b      	ldr	r3, [r7, #20]
   811b8:	f003 0320 	and.w	r3, r3, #32
   811bc:	2b00      	cmp	r3, #0
   811be:	d003      	beq.n	811c8 <ioport_set_pin_mode+0x6e>
		base->PIO_MDER = mask;
   811c0:	68fb      	ldr	r3, [r7, #12]
   811c2:	69ba      	ldr	r2, [r7, #24]
   811c4:	651a      	str	r2, [r3, #80]	; 0x50
   811c6:	e002      	b.n	811ce <ioport_set_pin_mode+0x74>
		base->PIO_MDDR = mask;
   811c8:	68fb      	ldr	r3, [r7, #12]
   811ca:	69ba      	ldr	r2, [r7, #24]
   811cc:	655a      	str	r2, [r3, #84]	; 0x54
	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
   811ce:	697b      	ldr	r3, [r7, #20]
   811d0:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   811d4:	2b00      	cmp	r3, #0
   811d6:	d003      	beq.n	811e0 <ioport_set_pin_mode+0x86>
		base->PIO_IFER = mask;
   811d8:	68fb      	ldr	r3, [r7, #12]
   811da:	69ba      	ldr	r2, [r7, #24]
   811dc:	621a      	str	r2, [r3, #32]
   811de:	e002      	b.n	811e6 <ioport_set_pin_mode+0x8c>
		base->PIO_IFDR = mask;
   811e0:	68fb      	ldr	r3, [r7, #12]
   811e2:	69ba      	ldr	r2, [r7, #24]
   811e4:	625a      	str	r2, [r3, #36]	; 0x24
	if (mode & IOPORT_MODE_DEBOUNCE) {
   811e6:	697b      	ldr	r3, [r7, #20]
   811e8:	f003 0380 	and.w	r3, r3, #128	; 0x80
   811ec:	2b00      	cmp	r3, #0
   811ee:	d004      	beq.n	811fa <ioport_set_pin_mode+0xa0>
		base->PIO_DIFSR = mask;
   811f0:	68fb      	ldr	r3, [r7, #12]
   811f2:	69ba      	ldr	r2, [r7, #24]
   811f4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
   811f8:	e003      	b.n	81202 <ioport_set_pin_mode+0xa8>
		base->PIO_SCIFSR = mask;
   811fa:	68fb      	ldr	r3, [r7, #12]
   811fc:	69ba      	ldr	r2, [r7, #24]
   811fe:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	if (mode & IOPORT_MODE_MUX_BIT0) {
   81202:	697b      	ldr	r3, [r7, #20]
   81204:	f003 0301 	and.w	r3, r3, #1
   81208:	2b00      	cmp	r3, #0
   8120a:	d006      	beq.n	8121a <ioport_set_pin_mode+0xc0>
		base->PIO_ABSR |= mask;
   8120c:	68fb      	ldr	r3, [r7, #12]
   8120e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   81210:	69bb      	ldr	r3, [r7, #24]
   81212:	431a      	orrs	r2, r3
   81214:	68fb      	ldr	r3, [r7, #12]
   81216:	671a      	str	r2, [r3, #112]	; 0x70
}
   81218:	e006      	b.n	81228 <ioport_set_pin_mode+0xce>
		base->PIO_ABSR &= ~mask;
   8121a:	68fb      	ldr	r3, [r7, #12]
   8121c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8121e:	69bb      	ldr	r3, [r7, #24]
   81220:	43db      	mvns	r3, r3
   81222:	401a      	ands	r2, r3
   81224:	68fb      	ldr	r3, [r7, #12]
   81226:	671a      	str	r2, [r3, #112]	; 0x70
   81228:	bf00      	nop
   8122a:	3734      	adds	r7, #52	; 0x34
   8122c:	46bd      	mov	sp, r7
   8122e:	bc80      	pop	{r7}
   81230:	4770      	bx	lr

00081232 <ioport_set_pin_dir>:
{
   81232:	b480      	push	{r7}
   81234:	b08d      	sub	sp, #52	; 0x34
   81236:	af00      	add	r7, sp, #0
   81238:	6078      	str	r0, [r7, #4]
   8123a:	460b      	mov	r3, r1
   8123c:	70fb      	strb	r3, [r7, #3]
   8123e:	687b      	ldr	r3, [r7, #4]
   81240:	62fb      	str	r3, [r7, #44]	; 0x2c
   81242:	78fb      	ldrb	r3, [r7, #3]
   81244:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
   81248:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8124a:	627b      	str	r3, [r7, #36]	; 0x24
   8124c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   8124e:	623b      	str	r3, [r7, #32]
	return pin >> 5;
   81250:	6a3b      	ldr	r3, [r7, #32]
   81252:	095b      	lsrs	r3, r3, #5
   81254:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   81256:	69fb      	ldr	r3, [r7, #28]
   81258:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8125c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81260:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   81262:	61bb      	str	r3, [r7, #24]
	if (dir == IOPORT_DIR_OUTPUT) {
   81264:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   81268:	2b01      	cmp	r3, #1
   8126a:	d109      	bne.n	81280 <ioport_set_pin_dir+0x4e>
   8126c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8126e:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   81270:	697b      	ldr	r3, [r7, #20]
   81272:	f003 031f 	and.w	r3, r3, #31
   81276:	2201      	movs	r2, #1
   81278:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   8127a:	69bb      	ldr	r3, [r7, #24]
   8127c:	611a      	str	r2, [r3, #16]
   8127e:	e00c      	b.n	8129a <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
   81280:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   81284:	2b00      	cmp	r3, #0
   81286:	d108      	bne.n	8129a <ioport_set_pin_dir+0x68>
   81288:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8128a:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   8128c:	693b      	ldr	r3, [r7, #16]
   8128e:	f003 031f 	and.w	r3, r3, #31
   81292:	2201      	movs	r2, #1
   81294:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   81296:	69bb      	ldr	r3, [r7, #24]
   81298:	615a      	str	r2, [r3, #20]
   8129a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8129c:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8129e:	68fb      	ldr	r3, [r7, #12]
   812a0:	f003 031f 	and.w	r3, r3, #31
   812a4:	2201      	movs	r2, #1
   812a6:	409a      	lsls	r2, r3
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   812a8:	69bb      	ldr	r3, [r7, #24]
   812aa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
}
   812ae:	bf00      	nop
   812b0:	3734      	adds	r7, #52	; 0x34
   812b2:	46bd      	mov	sp, r7
   812b4:	bc80      	pop	{r7}
   812b6:	4770      	bx	lr

000812b8 <ioport_set_pin_level>:
{
   812b8:	b480      	push	{r7}
   812ba:	b08b      	sub	sp, #44	; 0x2c
   812bc:	af00      	add	r7, sp, #0
   812be:	6078      	str	r0, [r7, #4]
   812c0:	460b      	mov	r3, r1
   812c2:	70fb      	strb	r3, [r7, #3]
   812c4:	687b      	ldr	r3, [r7, #4]
   812c6:	627b      	str	r3, [r7, #36]	; 0x24
   812c8:	78fb      	ldrb	r3, [r7, #3]
   812ca:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   812ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   812d0:	61fb      	str	r3, [r7, #28]
   812d2:	69fb      	ldr	r3, [r7, #28]
   812d4:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   812d6:	69bb      	ldr	r3, [r7, #24]
   812d8:	095b      	lsrs	r3, r3, #5
   812da:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   812dc:	697b      	ldr	r3, [r7, #20]
   812de:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   812e2:	f203 7307 	addw	r3, r3, #1799	; 0x707
   812e6:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   812e8:	613b      	str	r3, [r7, #16]
	if (level) {
   812ea:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   812ee:	2b00      	cmp	r3, #0
   812f0:	d009      	beq.n	81306 <ioport_set_pin_level+0x4e>
   812f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   812f4:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   812f6:	68fb      	ldr	r3, [r7, #12]
   812f8:	f003 031f 	and.w	r3, r3, #31
   812fc:	2201      	movs	r2, #1
   812fe:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   81300:	693b      	ldr	r3, [r7, #16]
   81302:	631a      	str	r2, [r3, #48]	; 0x30
}
   81304:	e008      	b.n	81318 <ioport_set_pin_level+0x60>
   81306:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81308:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   8130a:	68bb      	ldr	r3, [r7, #8]
   8130c:	f003 031f 	and.w	r3, r3, #31
   81310:	2201      	movs	r2, #1
   81312:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   81314:	693b      	ldr	r3, [r7, #16]
   81316:	635a      	str	r2, [r3, #52]	; 0x34
   81318:	bf00      	nop
   8131a:	372c      	adds	r7, #44	; 0x2c
   8131c:	46bd      	mov	sp, r7
   8131e:	bc80      	pop	{r7}
   81320:	4770      	bx	lr

00081322 <ioport_get_pin_level>:
{
   81322:	b480      	push	{r7}
   81324:	b089      	sub	sp, #36	; 0x24
   81326:	af00      	add	r7, sp, #0
   81328:	6078      	str	r0, [r7, #4]
   8132a:	687b      	ldr	r3, [r7, #4]
   8132c:	61fb      	str	r3, [r7, #28]
   8132e:	69fb      	ldr	r3, [r7, #28]
   81330:	61bb      	str	r3, [r7, #24]
   81332:	69bb      	ldr	r3, [r7, #24]
   81334:	617b      	str	r3, [r7, #20]
	return pin >> 5;
   81336:	697b      	ldr	r3, [r7, #20]
   81338:	095b      	lsrs	r3, r3, #5
   8133a:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8133c:	693b      	ldr	r3, [r7, #16]
   8133e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81342:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81346:	025b      	lsls	r3, r3, #9
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   81348:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   8134a:	69fb      	ldr	r3, [r7, #28]
   8134c:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8134e:	68fb      	ldr	r3, [r7, #12]
   81350:	f003 031f 	and.w	r3, r3, #31
   81354:	2101      	movs	r1, #1
   81356:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8135a:	4013      	ands	r3, r2
   8135c:	2b00      	cmp	r3, #0
   8135e:	bf14      	ite	ne
   81360:	2301      	movne	r3, #1
   81362:	2300      	moveq	r3, #0
   81364:	b2db      	uxtb	r3, r3
}
   81366:	4618      	mov	r0, r3
   81368:	3724      	adds	r7, #36	; 0x24
   8136a:	46bd      	mov	sp, r7
   8136c:	bc80      	pop	{r7}
   8136e:	4770      	bx	lr

00081370 <bord_init>:
#include"bord.h"




void bord_init(void){
   81370:	b580      	push	{r7, lr}
   81372:	af00      	add	r7, sp, #0
    delay_init();
    ioport_init();
   81374:	f7ff febd 	bl	810f2 <ioport_init>

    //ledice--------------------------------

    ioport_enable_pin(PIO_PC22_IDX);
   81378:	2056      	movs	r0, #86	; 0x56
   8137a:	f7ff feca 	bl	81112 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC21_IDX);
   8137e:	2055      	movs	r0, #85	; 0x55
   81380:	f7ff fec7 	bl	81112 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC29_IDX);
   81384:	205d      	movs	r0, #93	; 0x5d
   81386:	f7ff fec4 	bl	81112 <ioport_enable_pin>
    ioport_enable_pin(PIO_PD7_IDX);
   8138a:	2067      	movs	r0, #103	; 0x67
   8138c:	f7ff fec1 	bl	81112 <ioport_enable_pin>

    ioport_enable_pin(PIO_PB27_IDX);
   81390:	203b      	movs	r0, #59	; 0x3b
   81392:	f7ff febe 	bl	81112 <ioport_enable_pin>


    ioport_set_pin_dir(PIO_PC22_IDX, IOPORT_DIR_OUTPUT);
   81396:	2101      	movs	r1, #1
   81398:	2056      	movs	r0, #86	; 0x56
   8139a:	f7ff ff4a 	bl	81232 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC21_IDX, IOPORT_DIR_OUTPUT);
   8139e:	2101      	movs	r1, #1
   813a0:	2055      	movs	r0, #85	; 0x55
   813a2:	f7ff ff46 	bl	81232 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC29_IDX, IOPORT_DIR_OUTPUT);
   813a6:	2101      	movs	r1, #1
   813a8:	205d      	movs	r0, #93	; 0x5d
   813aa:	f7ff ff42 	bl	81232 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PD7_IDX, IOPORT_DIR_OUTPUT);
   813ae:	2101      	movs	r1, #1
   813b0:	2067      	movs	r0, #103	; 0x67
   813b2:	f7ff ff3e 	bl	81232 <ioport_set_pin_dir>

    ioport_set_pin_dir(PIO_PB27_IDX, IOPORT_DIR_OUTPUT);
   813b6:	2101      	movs	r1, #1
   813b8:	203b      	movs	r0, #59	; 0x3b
   813ba:	f7ff ff3a 	bl	81232 <ioport_set_pin_dir>

    ioport_set_pin_level(PIO_PC22_IDX, 0);
   813be:	2100      	movs	r1, #0
   813c0:	2056      	movs	r0, #86	; 0x56
   813c2:	f7ff ff79 	bl	812b8 <ioport_set_pin_level>
    ioport_set_pin_level(PIO_PC21_IDX, 0);
   813c6:	2100      	movs	r1, #0
   813c8:	2055      	movs	r0, #85	; 0x55
   813ca:	f7ff ff75 	bl	812b8 <ioport_set_pin_level>
    ioport_set_pin_level(PIO_PC29_IDX, 0);
   813ce:	2100      	movs	r1, #0
   813d0:	205d      	movs	r0, #93	; 0x5d
   813d2:	f7ff ff71 	bl	812b8 <ioport_set_pin_level>
    ioport_set_pin_level(PIO_PD7_IDX, 0);
   813d6:	2100      	movs	r1, #0
   813d8:	2067      	movs	r0, #103	; 0x67
   813da:	f7ff ff6d 	bl	812b8 <ioport_set_pin_level>

    pio_set_peripheral(PIOB, PIO_OUTPUT_0, PIO_ABSR_P27);
   813de:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   813e2:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   813e6:	4820      	ldr	r0, [pc, #128]	; (81468 <bord_init+0xf8>)
   813e8:	f000 fe03 	bl	81ff2 <pio_set_peripheral>


    //tipke-----------------------------------------------------------------------

    ioport_enable_pin(PIO_PC23_IDX);
   813ec:	2057      	movs	r0, #87	; 0x57
   813ee:	f7ff fe90 	bl	81112 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC24_IDX);
   813f2:	2058      	movs	r0, #88	; 0x58
   813f4:	f7ff fe8d 	bl	81112 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC25_IDX);
   813f8:	2059      	movs	r0, #89	; 0x59
   813fa:	f7ff fe8a 	bl	81112 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC26_IDX);
   813fe:	205a      	movs	r0, #90	; 0x5a
   81400:	f7ff fe87 	bl	81112 <ioport_enable_pin>


    ioport_set_pin_dir(PIO_PC23_IDX, IOPORT_DIR_INPUT);
   81404:	2100      	movs	r1, #0
   81406:	2057      	movs	r0, #87	; 0x57
   81408:	f7ff ff13 	bl	81232 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC24_IDX, IOPORT_DIR_INPUT);
   8140c:	2100      	movs	r1, #0
   8140e:	2058      	movs	r0, #88	; 0x58
   81410:	f7ff ff0f 	bl	81232 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC25_IDX, IOPORT_DIR_INPUT);
   81414:	2100      	movs	r1, #0
   81416:	2059      	movs	r0, #89	; 0x59
   81418:	f7ff ff0b 	bl	81232 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC26_IDX, IOPORT_DIR_INPUT);
   8141c:	2100      	movs	r1, #0
   8141e:	205a      	movs	r0, #90	; 0x5a
   81420:	f7ff ff07 	bl	81232 <ioport_set_pin_dir>



    ioport_set_pin_mode(PIO_PC23_IDX, IOPORT_MODE_DEBOUNCE);
   81424:	2180      	movs	r1, #128	; 0x80
   81426:	2057      	movs	r0, #87	; 0x57
   81428:	f7ff fe97 	bl	8115a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC24_IDX, IOPORT_MODE_DEBOUNCE);
   8142c:	2180      	movs	r1, #128	; 0x80
   8142e:	2058      	movs	r0, #88	; 0x58
   81430:	f7ff fe93 	bl	8115a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC25_IDX, IOPORT_MODE_DEBOUNCE);
   81434:	2180      	movs	r1, #128	; 0x80
   81436:	2059      	movs	r0, #89	; 0x59
   81438:	f7ff fe8f 	bl	8115a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC26_IDX, IOPORT_MODE_DEBOUNCE);
   8143c:	2180      	movs	r1, #128	; 0x80
   8143e:	205a      	movs	r0, #90	; 0x5a
   81440:	f7ff fe8b 	bl	8115a <ioport_set_pin_mode>

    ioport_set_pin_mode(PIO_PC23_IDX, IOPORT_MODE_PULLUP);
   81444:	2108      	movs	r1, #8
   81446:	2057      	movs	r0, #87	; 0x57
   81448:	f7ff fe87 	bl	8115a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC24_IDX, IOPORT_MODE_PULLUP);
   8144c:	2108      	movs	r1, #8
   8144e:	2058      	movs	r0, #88	; 0x58
   81450:	f7ff fe83 	bl	8115a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC25_IDX, IOPORT_MODE_PULLUP);
   81454:	2108      	movs	r1, #8
   81456:	2059      	movs	r0, #89	; 0x59
   81458:	f7ff fe7f 	bl	8115a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC26_IDX, IOPORT_MODE_PULLUP);
   8145c:	2108      	movs	r1, #8
   8145e:	205a      	movs	r0, #90	; 0x5a
   81460:	f7ff fe7b 	bl	8115a <ioport_set_pin_mode>





}
   81464:	bf00      	nop
   81466:	bd80      	pop	{r7, pc}
   81468:	400e1000 	.word	0x400e1000

0008146c <get_button_press>:


}


int get_button_press(void){
   8146c:	b580      	push	{r7, lr}
   8146e:	b08a      	sub	sp, #40	; 0x28
   81470:	af00      	add	r7, sp, #0

    static int old_state = 0;
    int state = 0;
   81472:	2300      	movs	r3, #0
   81474:	617b      	str	r3, [r7, #20]
    int state1 = 0, state2 = 0, state3 = 0, state4 = 0;
   81476:	2300      	movs	r3, #0
   81478:	613b      	str	r3, [r7, #16]
   8147a:	2300      	movs	r3, #0
   8147c:	60fb      	str	r3, [r7, #12]
   8147e:	2300      	movs	r3, #0
   81480:	60bb      	str	r3, [r7, #8]
   81482:	2300      	movs	r3, #0
   81484:	607b      	str	r3, [r7, #4]
    int leds = 0, leds1 = 0, leds2 = 0, leds3 = 0, leds4 = 0;
   81486:	2300      	movs	r3, #0
   81488:	603b      	str	r3, [r7, #0]
   8148a:	2300      	movs	r3, #0
   8148c:	627b      	str	r3, [r7, #36]	; 0x24
   8148e:	2300      	movs	r3, #0
   81490:	623b      	str	r3, [r7, #32]
   81492:	2300      	movs	r3, #0
   81494:	61fb      	str	r3, [r7, #28]
   81496:	2300      	movs	r3, #0
   81498:	61bb      	str	r3, [r7, #24]


    state1 = ioport_get_pin_level(PIO_PC23_IDX)<<0;
   8149a:	2057      	movs	r0, #87	; 0x57
   8149c:	f7ff ff41 	bl	81322 <ioport_get_pin_level>
   814a0:	4603      	mov	r3, r0
   814a2:	613b      	str	r3, [r7, #16]
    state2 = ioport_get_pin_level(PIO_PC24_IDX)<<1;
   814a4:	2058      	movs	r0, #88	; 0x58
   814a6:	f7ff ff3c 	bl	81322 <ioport_get_pin_level>
   814aa:	4603      	mov	r3, r0
   814ac:	005b      	lsls	r3, r3, #1
   814ae:	60fb      	str	r3, [r7, #12]
    state3 = ioport_get_pin_level(PIO_PC25_IDX)<<2;
   814b0:	2059      	movs	r0, #89	; 0x59
   814b2:	f7ff ff36 	bl	81322 <ioport_get_pin_level>
   814b6:	4603      	mov	r3, r0
   814b8:	009b      	lsls	r3, r3, #2
   814ba:	60bb      	str	r3, [r7, #8]
    state4 = ioport_get_pin_level(PIO_PC26_IDX)<<3;
   814bc:	205a      	movs	r0, #90	; 0x5a
   814be:	f7ff ff30 	bl	81322 <ioport_get_pin_level>
   814c2:	4603      	mov	r3, r0
   814c4:	00db      	lsls	r3, r3, #3
   814c6:	607b      	str	r3, [r7, #4]

    state = state1 | state2 | state3 | state4;
   814c8:	693a      	ldr	r2, [r7, #16]
   814ca:	68fb      	ldr	r3, [r7, #12]
   814cc:	431a      	orrs	r2, r3
   814ce:	68bb      	ldr	r3, [r7, #8]
   814d0:	4313      	orrs	r3, r2
   814d2:	687a      	ldr	r2, [r7, #4]
   814d4:	4313      	orrs	r3, r2
   814d6:	617b      	str	r3, [r7, #20]

    if((old_state & 1<<0) && (state1 == 0))leds1 = 1<<0;
   814d8:	4b1d      	ldr	r3, [pc, #116]	; (81550 <get_button_press+0xe4>)
   814da:	681b      	ldr	r3, [r3, #0]
   814dc:	f003 0301 	and.w	r3, r3, #1
   814e0:	2b00      	cmp	r3, #0
   814e2:	d004      	beq.n	814ee <get_button_press+0x82>
   814e4:	693b      	ldr	r3, [r7, #16]
   814e6:	2b00      	cmp	r3, #0
   814e8:	d101      	bne.n	814ee <get_button_press+0x82>
   814ea:	2301      	movs	r3, #1
   814ec:	627b      	str	r3, [r7, #36]	; 0x24
    if((old_state & 1<<1) && (state2 == 0))leds2 = 1<<1;
   814ee:	4b18      	ldr	r3, [pc, #96]	; (81550 <get_button_press+0xe4>)
   814f0:	681b      	ldr	r3, [r3, #0]
   814f2:	f003 0302 	and.w	r3, r3, #2
   814f6:	2b00      	cmp	r3, #0
   814f8:	d004      	beq.n	81504 <get_button_press+0x98>
   814fa:	68fb      	ldr	r3, [r7, #12]
   814fc:	2b00      	cmp	r3, #0
   814fe:	d101      	bne.n	81504 <get_button_press+0x98>
   81500:	2302      	movs	r3, #2
   81502:	623b      	str	r3, [r7, #32]
    if((old_state & 1<<2) && (state3 == 0))leds3 = 1<<2;
   81504:	4b12      	ldr	r3, [pc, #72]	; (81550 <get_button_press+0xe4>)
   81506:	681b      	ldr	r3, [r3, #0]
   81508:	f003 0304 	and.w	r3, r3, #4
   8150c:	2b00      	cmp	r3, #0
   8150e:	d004      	beq.n	8151a <get_button_press+0xae>
   81510:	68bb      	ldr	r3, [r7, #8]
   81512:	2b00      	cmp	r3, #0
   81514:	d101      	bne.n	8151a <get_button_press+0xae>
   81516:	2304      	movs	r3, #4
   81518:	61fb      	str	r3, [r7, #28]
    if((old_state & 1<<3) && (state4 == 0))leds4 = 1<<3;
   8151a:	4b0d      	ldr	r3, [pc, #52]	; (81550 <get_button_press+0xe4>)
   8151c:	681b      	ldr	r3, [r3, #0]
   8151e:	f003 0308 	and.w	r3, r3, #8
   81522:	2b00      	cmp	r3, #0
   81524:	d004      	beq.n	81530 <get_button_press+0xc4>
   81526:	687b      	ldr	r3, [r7, #4]
   81528:	2b00      	cmp	r3, #0
   8152a:	d101      	bne.n	81530 <get_button_press+0xc4>
   8152c:	2308      	movs	r3, #8
   8152e:	61bb      	str	r3, [r7, #24]

    leds = leds1 | leds2 | leds3 | leds4;
   81530:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   81532:	6a3b      	ldr	r3, [r7, #32]
   81534:	431a      	orrs	r2, r3
   81536:	69fb      	ldr	r3, [r7, #28]
   81538:	4313      	orrs	r3, r2
   8153a:	69ba      	ldr	r2, [r7, #24]
   8153c:	4313      	orrs	r3, r2
   8153e:	603b      	str	r3, [r7, #0]
    old_state = state;
   81540:	4a03      	ldr	r2, [pc, #12]	; (81550 <get_button_press+0xe4>)
   81542:	697b      	ldr	r3, [r7, #20]
   81544:	6013      	str	r3, [r2, #0]

    return leds;
   81546:	683b      	ldr	r3, [r7, #0]

}
   81548:	4618      	mov	r0, r3
   8154a:	3728      	adds	r7, #40	; 0x28
   8154c:	46bd      	mov	sp, r7
   8154e:	bd80      	pop	{r7, pc}
   81550:	20070c70 	.word	0x20070c70

00081554 <NVIC_EnableIRQ>:
{
   81554:	b480      	push	{r7}
   81556:	b083      	sub	sp, #12
   81558:	af00      	add	r7, sp, #0
   8155a:	4603      	mov	r3, r0
   8155c:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8155e:	79fb      	ldrb	r3, [r7, #7]
   81560:	f003 031f 	and.w	r3, r3, #31
   81564:	2201      	movs	r2, #1
   81566:	fa02 f103 	lsl.w	r1, r2, r3
   8156a:	4a05      	ldr	r2, [pc, #20]	; (81580 <NVIC_EnableIRQ+0x2c>)
   8156c:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81570:	095b      	lsrs	r3, r3, #5
   81572:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
   81576:	bf00      	nop
   81578:	370c      	adds	r7, #12
   8157a:	46bd      	mov	sp, r7
   8157c:	bc80      	pop	{r7}
   8157e:	4770      	bx	lr
   81580:	e000e100 	.word	0xe000e100

00081584 <main>:


//global variables
extern fifo_t keys_fifo;

int main (void){
   81584:	b580      	push	{r7, lr}
   81586:	af00      	add	r7, sp, #0
    /* sets the processor clock according to conf_clock.h definitions */
    sysclk_init();
   81588:	f000 fb72 	bl	81c70 <sysclk_init>

    /* disable wathcdog */
    WDT->WDT_MR = WDT_MR_WDDIS;
   8158c:	4b0c      	ldr	r3, [pc, #48]	; (815c0 <main+0x3c>)
   8158e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   81592:	605a      	str	r2, [r3, #4]

    /*********************   HW init   ***************************/
    bord_init();
   81594:	f7ff feec 	bl	81370 <bord_init>
    lcd_init();
   81598:	f7ff f9ca 	bl	80930 <lcd_init>
    uart_start();
   8159c:	f000 f81e 	bl	815dc <uart_start>


    NVIC_EnableIRQ(SysTick_IRQn);
   815a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   815a4:	f7ff ffd6 	bl	81554 <NVIC_EnableIRQ>
    //a prioritetaje za exception avtomatsko pred interupt in jih gleda ločeno ker za SysTick mam nastavljeno na 15 ?



    /***********************RTOS**************************************/
    if(rtos_init(20000) != 0){
   815a8:	f644 6020 	movw	r0, #20000	; 0x4e20
   815ac:	f7fe fe10 	bl	801d0 <rtos_init>
   815b0:	4603      	mov	r3, r0
   815b2:	2b00      	cmp	r3, #0
   815b4:	d000      	beq.n	815b8 <main+0x34>
        while(1);
   815b6:	e7fe      	b.n	815b6 <main+0x32>
    }//napaka rezina predolga za števec števec se bo obrnu napaka da operacija uzame preveč čase je drugje
    rtos_enable();
   815b8:	f7fe fe5c 	bl	80274 <rtos_enable>

/************************ test    *******************************/

    /********************* Main loop     ***************************/

    while(1){
   815bc:	e7fe      	b.n	815bc <main+0x38>
   815be:	bf00      	nop
   815c0:	400e1a50 	.word	0x400e1a50

000815c4 <sysclk_enable_peripheral_clock>:
{
   815c4:	b580      	push	{r7, lr}
   815c6:	b082      	sub	sp, #8
   815c8:	af00      	add	r7, sp, #0
   815ca:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   815cc:	6878      	ldr	r0, [r7, #4]
   815ce:	f000 fcbd 	bl	81f4c <pmc_enable_periph_clk>
}
   815d2:	bf00      	nop
   815d4:	3708      	adds	r7, #8
   815d6:	46bd      	mov	sp, r7
   815d8:	bd80      	pop	{r7, pc}
	...

000815dc <uart_start>:
uint8_t memory0[MEMORY_SIZE];
uint8_t memory1[MEMORY_SIZE];



void uart_start(void){
   815dc:	b580      	push	{r7, lr}
   815de:	b084      	sub	sp, #16
   815e0:	af00      	add	r7, sp, #0
    sam_uart_opt_t uart_setup = {
   815e2:	4b20      	ldr	r3, [pc, #128]	; (81664 <uart_start+0x88>)
   815e4:	681b      	ldr	r3, [r3, #0]
   815e6:	607b      	str	r3, [r7, #4]
   815e8:	f44f 5316 	mov.w	r3, #9600	; 0x2580
   815ec:	60bb      	str	r3, [r7, #8]
   815ee:	f44f 6300 	mov.w	r3, #2048	; 0x800
   815f2:	60fb      	str	r3, [r7, #12]
        .ul_mode =UART_MR_CHMODE_NORMAL | UART_MR_PAR_NO
    };



    sysclk_enable_peripheral_clock(ID_PIOA);
   815f4:	200b      	movs	r0, #11
   815f6:	f7ff ffe5 	bl	815c4 <sysclk_enable_peripheral_clock>
    sysclk_enable_peripheral_clock(ID_UART);
   815fa:	2008      	movs	r0, #8
   815fc:	f7ff ffe2 	bl	815c4 <sysclk_enable_peripheral_clock>
    sysclk_enable_peripheral_clock(ID_DMAC);
   81600:	2027      	movs	r0, #39	; 0x27
   81602:	f7ff ffdf 	bl	815c4 <sysclk_enable_peripheral_clock>


    pio_set_peripheral(PIOA,PIO_PERIPH_A,PIO_PA8A_URXD | PIO_PA9A_UTXD);
   81606:	f44f 7240 	mov.w	r2, #768	; 0x300
   8160a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8160e:	4816      	ldr	r0, [pc, #88]	; (81668 <uart_start+0x8c>)
   81610:	f000 fcef 	bl	81ff2 <pio_set_peripheral>
    pio_pull_up(PIOA,PIO_PA8A_URXD | PIO_PA9A_UTXD,PIO_PULLUP);
   81614:	2201      	movs	r2, #1
   81616:	f44f 7140 	mov.w	r1, #768	; 0x300
   8161a:	4813      	ldr	r0, [pc, #76]	; (81668 <uart_start+0x8c>)
   8161c:	f000 fcd4 	bl	81fc8 <pio_pull_up>

    uart_init(UART, &uart_setup);
   81620:	1d3b      	adds	r3, r7, #4
   81622:	4619      	mov	r1, r3
   81624:	4811      	ldr	r0, [pc, #68]	; (8166c <uart_start+0x90>)
   81626:	f000 fd23 	bl	82070 <uart_init>

    /***********DMAC ****************************/


    PDC_UART -> PERIPH_PTCR = PERIPH_PTCR_RXTEN;
   8162a:	4b11      	ldr	r3, [pc, #68]	; (81670 <uart_start+0x94>)
   8162c:	2201      	movs	r2, #1
   8162e:	621a      	str	r2, [r3, #32]
    PDC_UART -> PERIPH_PTCR = PERIPH_PTCR_TXTEN;
   81630:	4b0f      	ldr	r3, [pc, #60]	; (81670 <uart_start+0x94>)
   81632:	f44f 7280 	mov.w	r2, #256	; 0x100
   81636:	621a      	str	r2, [r3, #32]

    PDC_UART -> PERIPH_RPR = (uint32_t)memory0;
   81638:	4b0d      	ldr	r3, [pc, #52]	; (81670 <uart_start+0x94>)
   8163a:	4a0e      	ldr	r2, [pc, #56]	; (81674 <uart_start+0x98>)
   8163c:	601a      	str	r2, [r3, #0]
    PDC_UART -> PERIPH_RCR = MEMORY_SIZE;
   8163e:	4b0c      	ldr	r3, [pc, #48]	; (81670 <uart_start+0x94>)
   81640:	2210      	movs	r2, #16
   81642:	605a      	str	r2, [r3, #4]
    PDC_UART -> PERIPH_RNCR = 0;
   81644:	4b0a      	ldr	r3, [pc, #40]	; (81670 <uart_start+0x94>)
   81646:	2200      	movs	r2, #0
   81648:	615a      	str	r2, [r3, #20]

    PDC_UART -> PERIPH_TPR = (uint32_t)memory1;
   8164a:	4b09      	ldr	r3, [pc, #36]	; (81670 <uart_start+0x94>)
   8164c:	4a0a      	ldr	r2, [pc, #40]	; (81678 <uart_start+0x9c>)
   8164e:	609a      	str	r2, [r3, #8]
    PDC_UART -> PERIPH_TCR = 0;
   81650:	4b07      	ldr	r3, [pc, #28]	; (81670 <uart_start+0x94>)
   81652:	2200      	movs	r2, #0
   81654:	60da      	str	r2, [r3, #12]
    PDC_UART -> PERIPH_TNCR = 0;
   81656:	4b06      	ldr	r3, [pc, #24]	; (81670 <uart_start+0x94>)
   81658:	2200      	movs	r2, #0
   8165a:	61da      	str	r2, [r3, #28]





}
   8165c:	bf00      	nop
   8165e:	3710      	adds	r7, #16
   81660:	46bd      	mov	sp, r7
   81662:	bd80      	pop	{r7, pc}
   81664:	20070294 	.word	0x20070294
   81668:	400e0e00 	.word	0x400e0e00
   8166c:	400e0800 	.word	0x400e0800
   81670:	400e0900 	.word	0x400e0900
   81674:	20070cac 	.word	0x20070cac
   81678:	20070cbc 	.word	0x20070cbc

0008167c <fifo_read>:



/*****************FUNKCIJE*******************************************/

uint16_t fifo_read (fifo_t *fifo, uint8_t *write_addr, uint16_t n){
   8167c:	b480      	push	{r7}
   8167e:	b087      	sub	sp, #28
   81680:	af00      	add	r7, sp, #0
   81682:	60f8      	str	r0, [r7, #12]
   81684:	60b9      	str	r1, [r7, #8]
   81686:	4613      	mov	r3, r2
   81688:	80fb      	strh	r3, [r7, #6]
    uint16_t i;

    for(i = 0; (i<n && fifo->read_idx != fifo->write_idx); i++){
   8168a:	2300      	movs	r3, #0
   8168c:	82fb      	strh	r3, [r7, #22]
   8168e:	e01e      	b.n	816ce <fifo_read+0x52>

        write_addr[i] = fifo->buff[fifo->read_idx];
   81690:	68fb      	ldr	r3, [r7, #12]
   81692:	689b      	ldr	r3, [r3, #8]
   81694:	68fa      	ldr	r2, [r7, #12]
   81696:	8852      	ldrh	r2, [r2, #2]
   81698:	441a      	add	r2, r3
   8169a:	8afb      	ldrh	r3, [r7, #22]
   8169c:	68b9      	ldr	r1, [r7, #8]
   8169e:	440b      	add	r3, r1
   816a0:	7812      	ldrb	r2, [r2, #0]
   816a2:	701a      	strb	r2, [r3, #0]
        fifo->read_idx++;
   816a4:	68fb      	ldr	r3, [r7, #12]
   816a6:	885b      	ldrh	r3, [r3, #2]
   816a8:	3301      	adds	r3, #1
   816aa:	b29a      	uxth	r2, r3
   816ac:	68fb      	ldr	r3, [r7, #12]
   816ae:	805a      	strh	r2, [r3, #2]
        fifo->read_idx = fifo->read_idx%fifo->fifo_size;
   816b0:	68fb      	ldr	r3, [r7, #12]
   816b2:	885b      	ldrh	r3, [r3, #2]
   816b4:	68fa      	ldr	r2, [r7, #12]
   816b6:	8892      	ldrh	r2, [r2, #4]
   816b8:	fbb3 f1f2 	udiv	r1, r3, r2
   816bc:	fb02 f201 	mul.w	r2, r2, r1
   816c0:	1a9b      	subs	r3, r3, r2
   816c2:	b29a      	uxth	r2, r3
   816c4:	68fb      	ldr	r3, [r7, #12]
   816c6:	805a      	strh	r2, [r3, #2]
    for(i = 0; (i<n && fifo->read_idx != fifo->write_idx); i++){
   816c8:	8afb      	ldrh	r3, [r7, #22]
   816ca:	3301      	adds	r3, #1
   816cc:	82fb      	strh	r3, [r7, #22]
   816ce:	8afa      	ldrh	r2, [r7, #22]
   816d0:	88fb      	ldrh	r3, [r7, #6]
   816d2:	429a      	cmp	r2, r3
   816d4:	d205      	bcs.n	816e2 <fifo_read+0x66>
   816d6:	68fb      	ldr	r3, [r7, #12]
   816d8:	885a      	ldrh	r2, [r3, #2]
   816da:	68fb      	ldr	r3, [r7, #12]
   816dc:	881b      	ldrh	r3, [r3, #0]
   816de:	429a      	cmp	r2, r3
   816e0:	d1d6      	bne.n	81690 <fifo_read+0x14>


    }
    return i;
   816e2:	8afb      	ldrh	r3, [r7, #22]
}
   816e4:	4618      	mov	r0, r3
   816e6:	371c      	adds	r7, #28
   816e8:	46bd      	mov	sp, r7
   816ea:	bc80      	pop	{r7}
   816ec:	4770      	bx	lr

000816ee <fifo_write>:

/************************************************************************************************/

uint16_t fifo_write(fifo_t *fifo, const uint8_t *read_addr, uint16_t n){
   816ee:	b480      	push	{r7}
   816f0:	b087      	sub	sp, #28
   816f2:	af00      	add	r7, sp, #0
   816f4:	60f8      	str	r0, [r7, #12]
   816f6:	60b9      	str	r1, [r7, #8]
   816f8:	4613      	mov	r3, r2
   816fa:	80fb      	strh	r3, [r7, #6]
    uint16_t i;

    if(fifo->write_protect == 0){
   816fc:	68fb      	ldr	r3, [r7, #12]
   816fe:	799b      	ldrb	r3, [r3, #6]
   81700:	2b00      	cmp	r3, #0
   81702:	d13b      	bne.n	8177c <fifo_write+0x8e>
        fifo->write_protect = 1;
   81704:	68fb      	ldr	r3, [r7, #12]
   81706:	2201      	movs	r2, #1
   81708:	719a      	strb	r2, [r3, #6]
        for(i = 0; i<n; i++){
   8170a:	2300      	movs	r3, #0
   8170c:	82fb      	strh	r3, [r7, #22]
   8170e:	e02c      	b.n	8176a <fifo_write+0x7c>
            if((fifo->write_idx+1)%fifo->fifo_size == fifo->read_idx){
   81710:	68fb      	ldr	r3, [r7, #12]
   81712:	881b      	ldrh	r3, [r3, #0]
   81714:	3301      	adds	r3, #1
   81716:	68fa      	ldr	r2, [r7, #12]
   81718:	8892      	ldrh	r2, [r2, #4]
   8171a:	fb93 f1f2 	sdiv	r1, r3, r2
   8171e:	fb02 f201 	mul.w	r2, r2, r1
   81722:	1a9b      	subs	r3, r3, r2
   81724:	68fa      	ldr	r2, [r7, #12]
   81726:	8852      	ldrh	r2, [r2, #2]
   81728:	4293      	cmp	r3, r2
   8172a:	d023      	beq.n	81774 <fifo_write+0x86>
                break;
            }
            else{
                fifo->buff[fifo->write_idx] = read_addr[i] ;
   8172c:	8afb      	ldrh	r3, [r7, #22]
   8172e:	68ba      	ldr	r2, [r7, #8]
   81730:	441a      	add	r2, r3
   81732:	68fb      	ldr	r3, [r7, #12]
   81734:	689b      	ldr	r3, [r3, #8]
   81736:	68f9      	ldr	r1, [r7, #12]
   81738:	8809      	ldrh	r1, [r1, #0]
   8173a:	440b      	add	r3, r1
   8173c:	7812      	ldrb	r2, [r2, #0]
   8173e:	701a      	strb	r2, [r3, #0]
                fifo->write_idx++;
   81740:	68fb      	ldr	r3, [r7, #12]
   81742:	881b      	ldrh	r3, [r3, #0]
   81744:	3301      	adds	r3, #1
   81746:	b29a      	uxth	r2, r3
   81748:	68fb      	ldr	r3, [r7, #12]
   8174a:	801a      	strh	r2, [r3, #0]
                fifo->write_idx = fifo->write_idx%fifo->fifo_size;
   8174c:	68fb      	ldr	r3, [r7, #12]
   8174e:	881b      	ldrh	r3, [r3, #0]
   81750:	68fa      	ldr	r2, [r7, #12]
   81752:	8892      	ldrh	r2, [r2, #4]
   81754:	fbb3 f1f2 	udiv	r1, r3, r2
   81758:	fb02 f201 	mul.w	r2, r2, r1
   8175c:	1a9b      	subs	r3, r3, r2
   8175e:	b29a      	uxth	r2, r3
   81760:	68fb      	ldr	r3, [r7, #12]
   81762:	801a      	strh	r2, [r3, #0]
        for(i = 0; i<n; i++){
   81764:	8afb      	ldrh	r3, [r7, #22]
   81766:	3301      	adds	r3, #1
   81768:	82fb      	strh	r3, [r7, #22]
   8176a:	8afa      	ldrh	r2, [r7, #22]
   8176c:	88fb      	ldrh	r3, [r7, #6]
   8176e:	429a      	cmp	r2, r3
   81770:	d3ce      	bcc.n	81710 <fifo_write+0x22>
   81772:	e000      	b.n	81776 <fifo_write+0x88>
                break;
   81774:	bf00      	nop

            }

        }
        fifo->write_protect = 0;
   81776:	68fb      	ldr	r3, [r7, #12]
   81778:	2200      	movs	r2, #0
   8177a:	719a      	strb	r2, [r3, #6]
    }

    return i;
   8177c:	8afb      	ldrh	r3, [r7, #22]
}
   8177e:	4618      	mov	r0, r3
   81780:	371c      	adds	r7, #28
   81782:	46bd      	mov	sp, r7
   81784:	bc80      	pop	{r7}
   81786:	4770      	bx	lr

00081788 <SystemCoreClockUpdate>:

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
}

void SystemCoreClockUpdate(void)
{
   81788:	b480      	push	{r7}
   8178a:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   8178c:	4b57      	ldr	r3, [pc, #348]	; (818ec <SystemCoreClockUpdate+0x164>)
   8178e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81790:	f003 0303 	and.w	r3, r3, #3
   81794:	2b03      	cmp	r3, #3
   81796:	f200 808a 	bhi.w	818ae <SystemCoreClockUpdate+0x126>
   8179a:	a201      	add	r2, pc, #4	; (adr r2, 817a0 <SystemCoreClockUpdate+0x18>)
   8179c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   817a0:	000817b1 	.word	0x000817b1
   817a4:	000817d1 	.word	0x000817d1
   817a8:	00081821 	.word	0x00081821
   817ac:	00081821 	.word	0x00081821
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   817b0:	4b4f      	ldr	r3, [pc, #316]	; (818f0 <SystemCoreClockUpdate+0x168>)
   817b2:	695b      	ldr	r3, [r3, #20]
   817b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
   817b8:	2b00      	cmp	r3, #0
   817ba:	d004      	beq.n	817c6 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   817bc:	4b4d      	ldr	r3, [pc, #308]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   817be:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   817c2:	601a      	str	r2, [r3, #0]
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
		}
		break;
   817c4:	e073      	b.n	818ae <SystemCoreClockUpdate+0x126>
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   817c6:	4b4b      	ldr	r3, [pc, #300]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   817c8:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
   817cc:	601a      	str	r2, [r3, #0]
		break;
   817ce:	e06e      	b.n	818ae <SystemCoreClockUpdate+0x126>
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   817d0:	4b46      	ldr	r3, [pc, #280]	; (818ec <SystemCoreClockUpdate+0x164>)
   817d2:	6a1b      	ldr	r3, [r3, #32]
   817d4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   817d8:	2b00      	cmp	r3, #0
   817da:	d003      	beq.n	817e4 <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   817dc:	4b45      	ldr	r3, [pc, #276]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   817de:	4a46      	ldr	r2, [pc, #280]	; (818f8 <SystemCoreClockUpdate+0x170>)
   817e0:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		break;
   817e2:	e064      	b.n	818ae <SystemCoreClockUpdate+0x126>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   817e4:	4b43      	ldr	r3, [pc, #268]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   817e6:	4a45      	ldr	r2, [pc, #276]	; (818fc <SystemCoreClockUpdate+0x174>)
   817e8:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   817ea:	4b40      	ldr	r3, [pc, #256]	; (818ec <SystemCoreClockUpdate+0x164>)
   817ec:	6a1b      	ldr	r3, [r3, #32]
   817ee:	f003 0370 	and.w	r3, r3, #112	; 0x70
   817f2:	2b10      	cmp	r3, #16
   817f4:	d004      	beq.n	81800 <SystemCoreClockUpdate+0x78>
   817f6:	2b20      	cmp	r3, #32
   817f8:	d008      	beq.n	8180c <SystemCoreClockUpdate+0x84>
   817fa:	2b00      	cmp	r3, #0
   817fc:	d00e      	beq.n	8181c <SystemCoreClockUpdate+0x94>
				break;
   817fe:	e00e      	b.n	8181e <SystemCoreClockUpdate+0x96>
				SystemCoreClock *= 2U;
   81800:	4b3c      	ldr	r3, [pc, #240]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81802:	681b      	ldr	r3, [r3, #0]
   81804:	005b      	lsls	r3, r3, #1
   81806:	4a3b      	ldr	r2, [pc, #236]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81808:	6013      	str	r3, [r2, #0]
				break;
   8180a:	e008      	b.n	8181e <SystemCoreClockUpdate+0x96>
				SystemCoreClock *= 3U;
   8180c:	4b39      	ldr	r3, [pc, #228]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   8180e:	681a      	ldr	r2, [r3, #0]
   81810:	4613      	mov	r3, r2
   81812:	005b      	lsls	r3, r3, #1
   81814:	4413      	add	r3, r2
   81816:	4a37      	ldr	r2, [pc, #220]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81818:	6013      	str	r3, [r2, #0]
				break;
   8181a:	e000      	b.n	8181e <SystemCoreClockUpdate+0x96>
				break;
   8181c:	bf00      	nop
		break;
   8181e:	e046      	b.n	818ae <SystemCoreClockUpdate+0x126>
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81820:	4b32      	ldr	r3, [pc, #200]	; (818ec <SystemCoreClockUpdate+0x164>)
   81822:	6a1b      	ldr	r3, [r3, #32]
   81824:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   81828:	2b00      	cmp	r3, #0
   8182a:	d003      	beq.n	81834 <SystemCoreClockUpdate+0xac>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   8182c:	4b31      	ldr	r3, [pc, #196]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   8182e:	4a32      	ldr	r2, [pc, #200]	; (818f8 <SystemCoreClockUpdate+0x170>)
   81830:	601a      	str	r2, [r3, #0]
   81832:	e01c      	b.n	8186e <SystemCoreClockUpdate+0xe6>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81834:	4b2f      	ldr	r3, [pc, #188]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81836:	4a31      	ldr	r2, [pc, #196]	; (818fc <SystemCoreClockUpdate+0x174>)
   81838:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8183a:	4b2c      	ldr	r3, [pc, #176]	; (818ec <SystemCoreClockUpdate+0x164>)
   8183c:	6a1b      	ldr	r3, [r3, #32]
   8183e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81842:	2b10      	cmp	r3, #16
   81844:	d004      	beq.n	81850 <SystemCoreClockUpdate+0xc8>
   81846:	2b20      	cmp	r3, #32
   81848:	d008      	beq.n	8185c <SystemCoreClockUpdate+0xd4>
   8184a:	2b00      	cmp	r3, #0
   8184c:	d00e      	beq.n	8186c <SystemCoreClockUpdate+0xe4>
				break;
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
				break;
			default:
				break;
   8184e:	e00e      	b.n	8186e <SystemCoreClockUpdate+0xe6>
				SystemCoreClock *= 2U;
   81850:	4b28      	ldr	r3, [pc, #160]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81852:	681b      	ldr	r3, [r3, #0]
   81854:	005b      	lsls	r3, r3, #1
   81856:	4a27      	ldr	r2, [pc, #156]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81858:	6013      	str	r3, [r2, #0]
				break;
   8185a:	e008      	b.n	8186e <SystemCoreClockUpdate+0xe6>
				SystemCoreClock *= 3U;
   8185c:	4b25      	ldr	r3, [pc, #148]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   8185e:	681a      	ldr	r2, [r3, #0]
   81860:	4613      	mov	r3, r2
   81862:	005b      	lsls	r3, r3, #1
   81864:	4413      	add	r3, r2
   81866:	4a23      	ldr	r2, [pc, #140]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81868:	6013      	str	r3, [r2, #0]
				break;
   8186a:	e000      	b.n	8186e <SystemCoreClockUpdate+0xe6>
				break;
   8186c:	bf00      	nop
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   8186e:	4b1f      	ldr	r3, [pc, #124]	; (818ec <SystemCoreClockUpdate+0x164>)
   81870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81872:	f003 0303 	and.w	r3, r3, #3
   81876:	2b02      	cmp	r3, #2
   81878:	d115      	bne.n	818a6 <SystemCoreClockUpdate+0x11e>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8187a:	4b1c      	ldr	r3, [pc, #112]	; (818ec <SystemCoreClockUpdate+0x164>)
   8187c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   8187e:	0c1b      	lsrs	r3, r3, #16
   81880:	f3c3 030a 	ubfx	r3, r3, #0, #11
				                            CKGR_PLLAR_MULA_Pos) + 1U);
   81884:	3301      	adds	r3, #1
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81886:	4a1b      	ldr	r2, [pc, #108]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81888:	6812      	ldr	r2, [r2, #0]
   8188a:	fb02 f303 	mul.w	r3, r2, r3
   8188e:	4a19      	ldr	r2, [pc, #100]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   81890:	6013      	str	r3, [r2, #0]
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81892:	4b16      	ldr	r3, [pc, #88]	; (818ec <SystemCoreClockUpdate+0x164>)
   81894:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   81896:	b2db      	uxtb	r3, r3
   81898:	4a16      	ldr	r2, [pc, #88]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   8189a:	6812      	ldr	r2, [r2, #0]
   8189c:	fbb2 f3f3 	udiv	r3, r2, r3
   818a0:	4a14      	ldr	r2, [pc, #80]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   818a2:	6013      	str	r3, [r2, #0]
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
   818a4:	e002      	b.n	818ac <SystemCoreClockUpdate+0x124>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   818a6:	4b13      	ldr	r3, [pc, #76]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   818a8:	4a15      	ldr	r2, [pc, #84]	; (81900 <SystemCoreClockUpdate+0x178>)
   818aa:	601a      	str	r2, [r3, #0]
		break;
   818ac:	bf00      	nop
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   818ae:	4b0f      	ldr	r3, [pc, #60]	; (818ec <SystemCoreClockUpdate+0x164>)
   818b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   818b2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   818b6:	2b70      	cmp	r3, #112	; 0x70
   818b8:	d108      	bne.n	818cc <SystemCoreClockUpdate+0x144>
		SystemCoreClock /= 3U;
   818ba:	4b0e      	ldr	r3, [pc, #56]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   818bc:	681b      	ldr	r3, [r3, #0]
   818be:	4a11      	ldr	r2, [pc, #68]	; (81904 <SystemCoreClockUpdate+0x17c>)
   818c0:	fba2 2303 	umull	r2, r3, r2, r3
   818c4:	085b      	lsrs	r3, r3, #1
   818c6:	4a0b      	ldr	r2, [pc, #44]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   818c8:	6013      	str	r3, [r2, #0]
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
			                          PMC_MCKR_PRES_Pos);
	}
}
   818ca:	e00a      	b.n	818e2 <SystemCoreClockUpdate+0x15a>
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   818cc:	4b07      	ldr	r3, [pc, #28]	; (818ec <SystemCoreClockUpdate+0x164>)
   818ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   818d0:	091b      	lsrs	r3, r3, #4
   818d2:	f003 0307 	and.w	r3, r3, #7
   818d6:	4a07      	ldr	r2, [pc, #28]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   818d8:	6812      	ldr	r2, [r2, #0]
   818da:	fa22 f303 	lsr.w	r3, r2, r3
   818de:	4a05      	ldr	r2, [pc, #20]	; (818f4 <SystemCoreClockUpdate+0x16c>)
   818e0:	6013      	str	r3, [r2, #0]
}
   818e2:	bf00      	nop
   818e4:	46bd      	mov	sp, r7
   818e6:	bc80      	pop	{r7}
   818e8:	4770      	bx	lr
   818ea:	bf00      	nop
   818ec:	400e0600 	.word	0x400e0600
   818f0:	400e1a10 	.word	0x400e1a10
   818f4:	20070294 	.word	0x20070294
   818f8:	00b71b00 	.word	0x00b71b00
   818fc:	003d0900 	.word	0x003d0900
   81900:	0e4e1c00 	.word	0x0e4e1c00
   81904:	aaaaaaab 	.word	0xaaaaaaab

00081908 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   81908:	b480      	push	{r7}
   8190a:	af00      	add	r7, sp, #0
	while (1) {
   8190c:	e7fe      	b.n	8190c <Dummy_Handler+0x4>
	...

00081910 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   81910:	b580      	push	{r7, lr}
   81912:	b082      	sub	sp, #8
   81914:	af00      	add	r7, sp, #0
	uint32_t *pSrc, *pDest;

	/* Initialize the relocate segment */
	pSrc = &_etext;
   81916:	4b1e      	ldr	r3, [pc, #120]	; (81990 <Reset_Handler+0x80>)
   81918:	607b      	str	r3, [r7, #4]
	pDest = &_srelocate;
   8191a:	4b1e      	ldr	r3, [pc, #120]	; (81994 <Reset_Handler+0x84>)
   8191c:	603b      	str	r3, [r7, #0]

	if (pSrc != pDest) {
   8191e:	687a      	ldr	r2, [r7, #4]
   81920:	683b      	ldr	r3, [r7, #0]
   81922:	429a      	cmp	r2, r3
   81924:	d00c      	beq.n	81940 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
   81926:	e007      	b.n	81938 <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
   81928:	687a      	ldr	r2, [r7, #4]
   8192a:	1d13      	adds	r3, r2, #4
   8192c:	607b      	str	r3, [r7, #4]
   8192e:	683b      	ldr	r3, [r7, #0]
   81930:	1d19      	adds	r1, r3, #4
   81932:	6039      	str	r1, [r7, #0]
   81934:	6812      	ldr	r2, [r2, #0]
   81936:	601a      	str	r2, [r3, #0]
		for (; pDest < &_erelocate;) {
   81938:	683b      	ldr	r3, [r7, #0]
   8193a:	4a17      	ldr	r2, [pc, #92]	; (81998 <Reset_Handler+0x88>)
   8193c:	4293      	cmp	r3, r2
   8193e:	d3f3      	bcc.n	81928 <Reset_Handler+0x18>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   81940:	4b16      	ldr	r3, [pc, #88]	; (8199c <Reset_Handler+0x8c>)
   81942:	603b      	str	r3, [r7, #0]
   81944:	e004      	b.n	81950 <Reset_Handler+0x40>
		*pDest++ = 0;
   81946:	683b      	ldr	r3, [r7, #0]
   81948:	1d1a      	adds	r2, r3, #4
   8194a:	603a      	str	r2, [r7, #0]
   8194c:	2200      	movs	r2, #0
   8194e:	601a      	str	r2, [r3, #0]
	for (pDest = &_szero; pDest < &_ezero;) {
   81950:	683b      	ldr	r3, [r7, #0]
   81952:	4a13      	ldr	r2, [pc, #76]	; (819a0 <Reset_Handler+0x90>)
   81954:	4293      	cmp	r3, r2
   81956:	d3f6      	bcc.n	81946 <Reset_Handler+0x36>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
   81958:	4b12      	ldr	r3, [pc, #72]	; (819a4 <Reset_Handler+0x94>)
   8195a:	607b      	str	r3, [r7, #4]
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   8195c:	687b      	ldr	r3, [r7, #4]
   8195e:	4a12      	ldr	r2, [pc, #72]	; (819a8 <Reset_Handler+0x98>)
   81960:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   81964:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   81968:	6093      	str	r3, [r2, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   8196a:	687b      	ldr	r3, [r7, #4]
   8196c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   81970:	d309      	bcc.n	81986 <Reset_Handler+0x76>
   81972:	687b      	ldr	r3, [r7, #4]
   81974:	4a0d      	ldr	r2, [pc, #52]	; (819ac <Reset_Handler+0x9c>)
   81976:	4293      	cmp	r3, r2
   81978:	d805      	bhi.n	81986 <Reset_Handler+0x76>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   8197a:	4b0b      	ldr	r3, [pc, #44]	; (819a8 <Reset_Handler+0x98>)
   8197c:	689b      	ldr	r3, [r3, #8]
   8197e:	4a0a      	ldr	r2, [pc, #40]	; (819a8 <Reset_Handler+0x98>)
   81980:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81984:	6093      	str	r3, [r2, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   81986:	f000 fd45 	bl	82414 <__libc_init_array>

	/* Branch to main function */
	main();
   8198a:	f7ff fdfb 	bl	81584 <main>

	/* Infinite loop */
	while (1);
   8198e:	e7fe      	b.n	8198e <Reset_Handler+0x7e>
   81990:	000879cc 	.word	0x000879cc
   81994:	20070000 	.word	0x20070000
   81998:	20070c44 	.word	0x20070c44
   8199c:	20070c44 	.word	0x20070c44
   819a0:	20070d98 	.word	0x20070d98
   819a4:	00080000 	.word	0x00080000
   819a8:	e000ed00 	.word	0xe000ed00
   819ac:	200fffff 	.word	0x200fffff

000819b0 <osc_enable>:
{
   819b0:	b580      	push	{r7, lr}
   819b2:	b082      	sub	sp, #8
   819b4:	af00      	add	r7, sp, #0
   819b6:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   819b8:	687b      	ldr	r3, [r7, #4]
   819ba:	2b07      	cmp	r3, #7
   819bc:	d831      	bhi.n	81a22 <osc_enable+0x72>
   819be:	a201      	add	r2, pc, #4	; (adr r2, 819c4 <osc_enable+0x14>)
   819c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   819c4:	00081a21 	.word	0x00081a21
   819c8:	000819e5 	.word	0x000819e5
   819cc:	000819ed 	.word	0x000819ed
   819d0:	000819f5 	.word	0x000819f5
   819d4:	000819fd 	.word	0x000819fd
   819d8:	00081a05 	.word	0x00081a05
   819dc:	00081a0d 	.word	0x00081a0d
   819e0:	00081a17 	.word	0x00081a17
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
   819e4:	2000      	movs	r0, #0
   819e6:	f000 f9d7 	bl	81d98 <pmc_switch_sclk_to_32kxtal>
		break;
   819ea:	e01a      	b.n	81a22 <osc_enable+0x72>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
   819ec:	2001      	movs	r0, #1
   819ee:	f000 f9d3 	bl	81d98 <pmc_switch_sclk_to_32kxtal>
		break;
   819f2:	e016      	b.n	81a22 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
   819f4:	2000      	movs	r0, #0
   819f6:	f000 fa05 	bl	81e04 <pmc_switch_mainck_to_fastrc>
		break;
   819fa:	e012      	b.n	81a22 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
   819fc:	2010      	movs	r0, #16
   819fe:	f000 fa01 	bl	81e04 <pmc_switch_mainck_to_fastrc>
		break;
   81a02:	e00e      	b.n	81a22 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
   81a04:	2020      	movs	r0, #32
   81a06:	f000 f9fd 	bl	81e04 <pmc_switch_mainck_to_fastrc>
		break;
   81a0a:	e00a      	b.n	81a22 <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   81a0c:	213e      	movs	r1, #62	; 0x3e
   81a0e:	2000      	movs	r0, #0
   81a10:	f000 fa30 	bl	81e74 <pmc_switch_mainck_to_xtal>
		break;
   81a14:	e005      	b.n	81a22 <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
   81a16:	213e      	movs	r1, #62	; 0x3e
   81a18:	2001      	movs	r0, #1
   81a1a:	f000 fa2b 	bl	81e74 <pmc_switch_mainck_to_xtal>
		break;
   81a1e:	e000      	b.n	81a22 <osc_enable+0x72>
		break;
   81a20:	bf00      	nop
}
   81a22:	bf00      	nop
   81a24:	3708      	adds	r7, #8
   81a26:	46bd      	mov	sp, r7
   81a28:	bd80      	pop	{r7, pc}
   81a2a:	bf00      	nop

00081a2c <osc_is_ready>:
{
   81a2c:	b580      	push	{r7, lr}
   81a2e:	b082      	sub	sp, #8
   81a30:	af00      	add	r7, sp, #0
   81a32:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   81a34:	687b      	ldr	r3, [r7, #4]
   81a36:	2b07      	cmp	r3, #7
   81a38:	d826      	bhi.n	81a88 <osc_is_ready+0x5c>
   81a3a:	a201      	add	r2, pc, #4	; (adr r2, 81a40 <osc_is_ready+0x14>)
   81a3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   81a40:	00081a61 	.word	0x00081a61
   81a44:	00081a65 	.word	0x00081a65
   81a48:	00081a65 	.word	0x00081a65
   81a4c:	00081a77 	.word	0x00081a77
   81a50:	00081a77 	.word	0x00081a77
   81a54:	00081a77 	.word	0x00081a77
   81a58:	00081a77 	.word	0x00081a77
   81a5c:	00081a77 	.word	0x00081a77
		return 1;
   81a60:	2301      	movs	r3, #1
   81a62:	e012      	b.n	81a8a <osc_is_ready+0x5e>
		return pmc_osc_is_ready_32kxtal();
   81a64:	f000 f9b4 	bl	81dd0 <pmc_osc_is_ready_32kxtal>
   81a68:	4603      	mov	r3, r0
   81a6a:	2b00      	cmp	r3, #0
   81a6c:	bf14      	ite	ne
   81a6e:	2301      	movne	r3, #1
   81a70:	2300      	moveq	r3, #0
   81a72:	b2db      	uxtb	r3, r3
   81a74:	e009      	b.n	81a8a <osc_is_ready+0x5e>
		return pmc_osc_is_ready_mainck();
   81a76:	f000 fa39 	bl	81eec <pmc_osc_is_ready_mainck>
   81a7a:	4603      	mov	r3, r0
   81a7c:	2b00      	cmp	r3, #0
   81a7e:	bf14      	ite	ne
   81a80:	2301      	movne	r3, #1
   81a82:	2300      	moveq	r3, #0
   81a84:	b2db      	uxtb	r3, r3
   81a86:	e000      	b.n	81a8a <osc_is_ready+0x5e>
	return 0;
   81a88:	2300      	movs	r3, #0
}
   81a8a:	4618      	mov	r0, r3
   81a8c:	3708      	adds	r7, #8
   81a8e:	46bd      	mov	sp, r7
   81a90:	bd80      	pop	{r7, pc}
   81a92:	bf00      	nop

00081a94 <osc_get_rate>:
{
   81a94:	b480      	push	{r7}
   81a96:	b083      	sub	sp, #12
   81a98:	af00      	add	r7, sp, #0
   81a9a:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   81a9c:	687b      	ldr	r3, [r7, #4]
   81a9e:	2b07      	cmp	r3, #7
   81aa0:	d825      	bhi.n	81aee <osc_get_rate+0x5a>
   81aa2:	a201      	add	r2, pc, #4	; (adr r2, 81aa8 <osc_get_rate+0x14>)
   81aa4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   81aa8:	00081ac9 	.word	0x00081ac9
   81aac:	00081acf 	.word	0x00081acf
   81ab0:	00081ad5 	.word	0x00081ad5
   81ab4:	00081adb 	.word	0x00081adb
   81ab8:	00081adf 	.word	0x00081adf
   81abc:	00081ae3 	.word	0x00081ae3
   81ac0:	00081ae7 	.word	0x00081ae7
   81ac4:	00081aeb 	.word	0x00081aeb
		return OSC_SLCK_32K_RC_HZ;
   81ac8:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   81acc:	e010      	b.n	81af0 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
   81ace:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   81ad2:	e00d      	b.n	81af0 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
   81ad4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   81ad8:	e00a      	b.n	81af0 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
   81ada:	4b08      	ldr	r3, [pc, #32]	; (81afc <osc_get_rate+0x68>)
   81adc:	e008      	b.n	81af0 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
   81ade:	4b08      	ldr	r3, [pc, #32]	; (81b00 <osc_get_rate+0x6c>)
   81ae0:	e006      	b.n	81af0 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
   81ae2:	4b08      	ldr	r3, [pc, #32]	; (81b04 <osc_get_rate+0x70>)
   81ae4:	e004      	b.n	81af0 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
   81ae6:	4b07      	ldr	r3, [pc, #28]	; (81b04 <osc_get_rate+0x70>)
   81ae8:	e002      	b.n	81af0 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
   81aea:	4b06      	ldr	r3, [pc, #24]	; (81b04 <osc_get_rate+0x70>)
   81aec:	e000      	b.n	81af0 <osc_get_rate+0x5c>
	return 0;
   81aee:	2300      	movs	r3, #0
}
   81af0:	4618      	mov	r0, r3
   81af2:	370c      	adds	r7, #12
   81af4:	46bd      	mov	sp, r7
   81af6:	bc80      	pop	{r7}
   81af8:	4770      	bx	lr
   81afa:	bf00      	nop
   81afc:	003d0900 	.word	0x003d0900
   81b00:	007a1200 	.word	0x007a1200
   81b04:	00b71b00 	.word	0x00b71b00

00081b08 <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
   81b08:	b580      	push	{r7, lr}
   81b0a:	b082      	sub	sp, #8
   81b0c:	af00      	add	r7, sp, #0
   81b0e:	4603      	mov	r3, r0
   81b10:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
   81b12:	bf00      	nop
   81b14:	79fb      	ldrb	r3, [r7, #7]
   81b16:	4618      	mov	r0, r3
   81b18:	f7ff ff88 	bl	81a2c <osc_is_ready>
   81b1c:	4603      	mov	r3, r0
   81b1e:	f083 0301 	eor.w	r3, r3, #1
   81b22:	b2db      	uxtb	r3, r3
   81b24:	2b00      	cmp	r3, #0
   81b26:	d1f5      	bne.n	81b14 <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
   81b28:	bf00      	nop
   81b2a:	3708      	adds	r7, #8
   81b2c:	46bd      	mov	sp, r7
   81b2e:	bd80      	pop	{r7, pc}

00081b30 <pll_config_init>:
 * \note The SAM3X PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
   81b30:	b580      	push	{r7, lr}
   81b32:	b086      	sub	sp, #24
   81b34:	af00      	add	r7, sp, #0
   81b36:	60f8      	str	r0, [r7, #12]
   81b38:	607a      	str	r2, [r7, #4]
   81b3a:	603b      	str	r3, [r7, #0]
   81b3c:	460b      	mov	r3, r1
   81b3e:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	if (ul_div == 0 && ul_mul == 0) { /* Must only be true for UTMI PLL */
   81b40:	687b      	ldr	r3, [r7, #4]
   81b42:	2b00      	cmp	r3, #0
   81b44:	d107      	bne.n	81b56 <pll_config_init+0x26>
   81b46:	683b      	ldr	r3, [r7, #0]
   81b48:	2b00      	cmp	r3, #0
   81b4a:	d104      	bne.n	81b56 <pll_config_init+0x26>
		p_cfg->ctrl = CKGR_UCKR_UPLLCOUNT(PLL_COUNT);
   81b4c:	68fb      	ldr	r3, [r7, #12]
   81b4e:	f44f 0270 	mov.w	r2, #15728640	; 0xf00000
   81b52:	601a      	str	r2, [r3, #0]
   81b54:	e019      	b.n	81b8a <pll_config_init+0x5a>
	} else { /* PLLA */
		/* Calculate internal VCO frequency */
		vco_hz = osc_get_rate(e_src) / ul_div;
   81b56:	7afb      	ldrb	r3, [r7, #11]
   81b58:	4618      	mov	r0, r3
   81b5a:	f7ff ff9b 	bl	81a94 <osc_get_rate>
   81b5e:	4602      	mov	r2, r0
   81b60:	687b      	ldr	r3, [r7, #4]
   81b62:	fbb2 f3f3 	udiv	r3, r2, r3
   81b66:	617b      	str	r3, [r7, #20]
		Assert(vco_hz >= PLL_INPUT_MIN_HZ);
		Assert(vco_hz <= PLL_INPUT_MAX_HZ);

		vco_hz *= ul_mul;
   81b68:	697b      	ldr	r3, [r7, #20]
   81b6a:	683a      	ldr	r2, [r7, #0]
   81b6c:	fb02 f303 	mul.w	r3, r2, r3
   81b70:	617b      	str	r3, [r7, #20]
		Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
		Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

		/* PMC hardware will automatically make it mul+1 */
		p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
   81b72:	683b      	ldr	r3, [r7, #0]
   81b74:	3b01      	subs	r3, #1
   81b76:	041a      	lsls	r2, r3, #16
   81b78:	4b06      	ldr	r3, [pc, #24]	; (81b94 <pll_config_init+0x64>)
   81b7a:	4013      	ands	r3, r2
   81b7c:	687a      	ldr	r2, [r7, #4]
   81b7e:	b2d2      	uxtb	r2, r2
   81b80:	4313      	orrs	r3, r2
   81b82:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
   81b86:	68fb      	ldr	r3, [r7, #12]
   81b88:	601a      	str	r2, [r3, #0]
	}
}
   81b8a:	bf00      	nop
   81b8c:	3718      	adds	r7, #24
   81b8e:	46bd      	mov	sp, r7
   81b90:	bd80      	pop	{r7, pc}
   81b92:	bf00      	nop
   81b94:	07ff0000 	.word	0x07ff0000

00081b98 <pll_enable>:
		PMC->CKGR_UCKR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
   81b98:	b580      	push	{r7, lr}
   81b9a:	b082      	sub	sp, #8
   81b9c:	af00      	add	r7, sp, #0
   81b9e:	6078      	str	r0, [r7, #4]
   81ba0:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
   81ba2:	683b      	ldr	r3, [r7, #0]
   81ba4:	2b00      	cmp	r3, #0
   81ba6:	d108      	bne.n	81bba <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
   81ba8:	f000 f9ac 	bl	81f04 <pmc_disable_pllack>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   81bac:	687b      	ldr	r3, [r7, #4]
   81bae:	681b      	ldr	r3, [r3, #0]
   81bb0:	4a07      	ldr	r2, [pc, #28]	; (81bd0 <pll_enable+0x38>)
   81bb2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81bb6:	6293      	str	r3, [r2, #40]	; 0x28
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
	}
}
   81bb8:	e005      	b.n	81bc6 <pll_enable+0x2e>
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   81bba:	687b      	ldr	r3, [r7, #4]
   81bbc:	681b      	ldr	r3, [r3, #0]
   81bbe:	4a04      	ldr	r2, [pc, #16]	; (81bd0 <pll_enable+0x38>)
   81bc0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   81bc4:	61d3      	str	r3, [r2, #28]
}
   81bc6:	bf00      	nop
   81bc8:	3708      	adds	r7, #8
   81bca:	46bd      	mov	sp, r7
   81bcc:	bd80      	pop	{r7, pc}
   81bce:	bf00      	nop
   81bd0:	400e0600 	.word	0x400e0600

00081bd4 <pll_is_locked>:
		PMC->CKGR_UCKR &= ~CKGR_UCKR_UPLLEN;
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
   81bd4:	b580      	push	{r7, lr}
   81bd6:	b082      	sub	sp, #8
   81bd8:	af00      	add	r7, sp, #0
   81bda:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
   81bdc:	687b      	ldr	r3, [r7, #4]
   81bde:	2b00      	cmp	r3, #0
   81be0:	d103      	bne.n	81bea <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
   81be2:	f000 f99b 	bl	81f1c <pmc_is_locked_pllack>
   81be6:	4603      	mov	r3, r0
   81be8:	e002      	b.n	81bf0 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_upll();
   81bea:	f000 f9a3 	bl	81f34 <pmc_is_locked_upll>
   81bee:	4603      	mov	r3, r0
	}
}
   81bf0:	4618      	mov	r0, r3
   81bf2:	3708      	adds	r7, #8
   81bf4:	46bd      	mov	sp, r7
   81bf6:	bd80      	pop	{r7, pc}

00081bf8 <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
   81bf8:	b580      	push	{r7, lr}
   81bfa:	b082      	sub	sp, #8
   81bfc:	af00      	add	r7, sp, #0
   81bfe:	4603      	mov	r3, r0
   81c00:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
   81c02:	79fb      	ldrb	r3, [r7, #7]
   81c04:	3b03      	subs	r3, #3
   81c06:	2b04      	cmp	r3, #4
   81c08:	d808      	bhi.n	81c1c <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
   81c0a:	79fb      	ldrb	r3, [r7, #7]
   81c0c:	4618      	mov	r0, r3
   81c0e:	f7ff fecf 	bl	819b0 <osc_enable>
		osc_wait_ready(e_src);
   81c12:	79fb      	ldrb	r3, [r7, #7]
   81c14:	4618      	mov	r0, r3
   81c16:	f7ff ff77 	bl	81b08 <osc_wait_ready>
		break;
   81c1a:	e000      	b.n	81c1e <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
   81c1c:	bf00      	nop
	}
}
   81c1e:	bf00      	nop
   81c20:	3708      	adds	r7, #8
   81c22:	46bd      	mov	sp, r7
   81c24:	bd80      	pop	{r7, pc}

00081c26 <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
   81c26:	b580      	push	{r7, lr}
   81c28:	b082      	sub	sp, #8
   81c2a:	af00      	add	r7, sp, #0
   81c2c:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   81c2e:	bf00      	nop
   81c30:	6878      	ldr	r0, [r7, #4]
   81c32:	f7ff ffcf 	bl	81bd4 <pll_is_locked>
   81c36:	4603      	mov	r3, r0
   81c38:	2b00      	cmp	r3, #0
   81c3a:	d0f9      	beq.n	81c30 <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
   81c3c:	2300      	movs	r3, #0
}
   81c3e:	4618      	mov	r0, r3
   81c40:	3708      	adds	r7, #8
   81c42:	46bd      	mov	sp, r7
   81c44:	bd80      	pop	{r7, pc}

00081c46 <sysclk_get_main_hz>:
{
   81c46:	b580      	push	{r7, lr}
   81c48:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
   81c4a:	2006      	movs	r0, #6
   81c4c:	f7ff ff22 	bl	81a94 <osc_get_rate>
   81c50:	4602      	mov	r2, r0
   81c52:	4613      	mov	r3, r2
   81c54:	00db      	lsls	r3, r3, #3
   81c56:	1a9b      	subs	r3, r3, r2
   81c58:	005b      	lsls	r3, r3, #1
}
   81c5a:	4618      	mov	r0, r3
   81c5c:	bd80      	pop	{r7, pc}

00081c5e <sysclk_get_cpu_hz>:
{
   81c5e:	b580      	push	{r7, lr}
   81c60:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
   81c62:	f7ff fff0 	bl	81c46 <sysclk_get_main_hz>
   81c66:	4603      	mov	r3, r0
   81c68:	085b      	lsrs	r3, r3, #1
}
   81c6a:	4618      	mov	r0, r3
   81c6c:	bd80      	pop	{r7, pc}
	...

00081c70 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   81c70:	b580      	push	{r7, lr}
   81c72:	b082      	sub	sp, #8
   81c74:	af00      	add	r7, sp, #0
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   81c76:	4811      	ldr	r0, [pc, #68]	; (81cbc <sysclk_init+0x4c>)
   81c78:	f005 fe9e 	bl	879b8 <__system_init_flash_veneer>
		pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
	}

#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
   81c7c:	2006      	movs	r0, #6
   81c7e:	f7ff ffbb 	bl	81bf8 <pll_enable_source>
		pll_config_defaults(&pllcfg, 0);
   81c82:	1d38      	adds	r0, r7, #4
   81c84:	230e      	movs	r3, #14
   81c86:	2201      	movs	r2, #1
   81c88:	2106      	movs	r1, #6
   81c8a:	f7ff ff51 	bl	81b30 <pll_config_init>
		pll_enable(&pllcfg, 0);
   81c8e:	1d3b      	adds	r3, r7, #4
   81c90:	2100      	movs	r1, #0
   81c92:	4618      	mov	r0, r3
   81c94:	f7ff ff80 	bl	81b98 <pll_enable>
		pll_wait_for_lock(0);
   81c98:	2000      	movs	r0, #0
   81c9a:	f7ff ffc4 	bl	81c26 <pll_wait_for_lock>
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   81c9e:	2010      	movs	r0, #16
   81ca0:	f000 f83a 	bl	81d18 <pmc_switch_mck_to_pllack>
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   81ca4:	f7ff fd70 	bl	81788 <SystemCoreClockUpdate>

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   81ca8:	f7ff ffd9 	bl	81c5e <sysclk_get_cpu_hz>
   81cac:	4603      	mov	r3, r0
   81cae:	4618      	mov	r0, r3
   81cb0:	f005 fe82 	bl	879b8 <__system_init_flash_veneer>

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   81cb4:	bf00      	nop
   81cb6:	3708      	adds	r7, #8
   81cb8:	46bd      	mov	sp, r7
   81cba:	bd80      	pop	{r7, pc}
   81cbc:	0501bd00 	.word	0x0501bd00

00081cc0 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
   81cc0:	b480      	push	{r7}
   81cc2:	b085      	sub	sp, #20
   81cc4:	af00      	add	r7, sp, #0
   81cc6:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
   81cc8:	4b10      	ldr	r3, [pc, #64]	; (81d0c <_sbrk+0x4c>)
   81cca:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
   81ccc:	4b10      	ldr	r3, [pc, #64]	; (81d10 <_sbrk+0x50>)
   81cce:	681b      	ldr	r3, [r3, #0]
   81cd0:	2b00      	cmp	r3, #0
   81cd2:	d102      	bne.n	81cda <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
   81cd4:	4b0e      	ldr	r3, [pc, #56]	; (81d10 <_sbrk+0x50>)
   81cd6:	4a0f      	ldr	r2, [pc, #60]	; (81d14 <_sbrk+0x54>)
   81cd8:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   81cda:	4b0d      	ldr	r3, [pc, #52]	; (81d10 <_sbrk+0x50>)
   81cdc:	681b      	ldr	r3, [r3, #0]
   81cde:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
   81ce0:	68ba      	ldr	r2, [r7, #8]
   81ce2:	687b      	ldr	r3, [r7, #4]
   81ce4:	4413      	add	r3, r2
   81ce6:	68fa      	ldr	r2, [r7, #12]
   81ce8:	429a      	cmp	r2, r3
   81cea:	da02      	bge.n	81cf2 <_sbrk+0x32>
		return (caddr_t) -1;	
   81cec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   81cf0:	e006      	b.n	81d00 <_sbrk+0x40>
	}

	heap += incr;
   81cf2:	4b07      	ldr	r3, [pc, #28]	; (81d10 <_sbrk+0x50>)
   81cf4:	681a      	ldr	r2, [r3, #0]
   81cf6:	687b      	ldr	r3, [r7, #4]
   81cf8:	4413      	add	r3, r2
   81cfa:	4a05      	ldr	r2, [pc, #20]	; (81d10 <_sbrk+0x50>)
   81cfc:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
   81cfe:	68bb      	ldr	r3, [r7, #8]
}
   81d00:	4618      	mov	r0, r3
   81d02:	3714      	adds	r7, #20
   81d04:	46bd      	mov	sp, r7
   81d06:	bc80      	pop	{r7}
   81d08:	4770      	bx	lr
   81d0a:	bf00      	nop
   81d0c:	20087ffc 	.word	0x20087ffc
   81d10:	20070c74 	.word	0x20070c74
   81d14:	20072d98 	.word	0x20072d98

00081d18 <pmc_switch_mck_to_pllack>:
 *
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
   81d18:	b480      	push	{r7}
   81d1a:	b085      	sub	sp, #20
   81d1c:	af00      	add	r7, sp, #0
   81d1e:	6078      	str	r0, [r7, #4]
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   81d20:	4b1c      	ldr	r3, [pc, #112]	; (81d94 <pmc_switch_mck_to_pllack+0x7c>)
   81d22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81d24:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   81d28:	491a      	ldr	r1, [pc, #104]	; (81d94 <pmc_switch_mck_to_pllack+0x7c>)
   81d2a:	687b      	ldr	r3, [r7, #4]
   81d2c:	4313      	orrs	r3, r2
   81d2e:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81d30:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81d34:	60fb      	str	r3, [r7, #12]
   81d36:	e007      	b.n	81d48 <pmc_switch_mck_to_pllack+0x30>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81d38:	68fb      	ldr	r3, [r7, #12]
   81d3a:	2b00      	cmp	r3, #0
   81d3c:	d101      	bne.n	81d42 <pmc_switch_mck_to_pllack+0x2a>
			return 1;
   81d3e:	2301      	movs	r3, #1
   81d40:	e023      	b.n	81d8a <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
   81d42:	68fb      	ldr	r3, [r7, #12]
   81d44:	3b01      	subs	r3, #1
   81d46:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81d48:	4b12      	ldr	r3, [pc, #72]	; (81d94 <pmc_switch_mck_to_pllack+0x7c>)
   81d4a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81d4c:	f003 0308 	and.w	r3, r3, #8
   81d50:	2b00      	cmp	r3, #0
   81d52:	d0f1      	beq.n	81d38 <pmc_switch_mck_to_pllack+0x20>
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   81d54:	4b0f      	ldr	r3, [pc, #60]	; (81d94 <pmc_switch_mck_to_pllack+0x7c>)
   81d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   81d58:	f023 0303 	bic.w	r3, r3, #3
   81d5c:	4a0d      	ldr	r2, [pc, #52]	; (81d94 <pmc_switch_mck_to_pllack+0x7c>)
   81d5e:	f043 0302 	orr.w	r3, r3, #2
   81d62:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81d64:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81d68:	60fb      	str	r3, [r7, #12]
   81d6a:	e007      	b.n	81d7c <pmc_switch_mck_to_pllack+0x64>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81d6c:	68fb      	ldr	r3, [r7, #12]
   81d6e:	2b00      	cmp	r3, #0
   81d70:	d101      	bne.n	81d76 <pmc_switch_mck_to_pllack+0x5e>
			return 1;
   81d72:	2301      	movs	r3, #1
   81d74:	e009      	b.n	81d8a <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
   81d76:	68fb      	ldr	r3, [r7, #12]
   81d78:	3b01      	subs	r3, #1
   81d7a:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81d7c:	4b05      	ldr	r3, [pc, #20]	; (81d94 <pmc_switch_mck_to_pllack+0x7c>)
   81d7e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81d80:	f003 0308 	and.w	r3, r3, #8
   81d84:	2b00      	cmp	r3, #0
   81d86:	d0f1      	beq.n	81d6c <pmc_switch_mck_to_pllack+0x54>
		}
	}

	return 0;
   81d88:	2300      	movs	r3, #0
}
   81d8a:	4618      	mov	r0, r3
   81d8c:	3714      	adds	r7, #20
   81d8e:	46bd      	mov	sp, r7
   81d90:	bc80      	pop	{r7}
   81d92:	4770      	bx	lr
   81d94:	400e0600 	.word	0x400e0600

00081d98 <pmc_switch_sclk_to_32kxtal>:
 *       VDDIO power supply.
 *
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void pmc_switch_sclk_to_32kxtal(uint32_t ul_bypass)
{
   81d98:	b480      	push	{r7}
   81d9a:	b083      	sub	sp, #12
   81d9c:	af00      	add	r7, sp, #0
   81d9e:	6078      	str	r0, [r7, #4]
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
   81da0:	687b      	ldr	r3, [r7, #4]
   81da2:	2b01      	cmp	r3, #1
   81da4:	d107      	bne.n	81db6 <pmc_switch_sclk_to_32kxtal+0x1e>
		SUPC->SUPC_MR |= SUPC_MR_KEY_PASSWD |
   81da6:	4b08      	ldr	r3, [pc, #32]	; (81dc8 <pmc_switch_sclk_to_32kxtal+0x30>)
   81da8:	689b      	ldr	r3, [r3, #8]
   81daa:	4a07      	ldr	r2, [pc, #28]	; (81dc8 <pmc_switch_sclk_to_32kxtal+0x30>)
   81dac:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   81db0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   81db4:	6093      	str	r3, [r2, #8]
			SUPC_MR_OSCBYPASS;
	}

	SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
   81db6:	4b04      	ldr	r3, [pc, #16]	; (81dc8 <pmc_switch_sclk_to_32kxtal+0x30>)
   81db8:	4a04      	ldr	r2, [pc, #16]	; (81dcc <pmc_switch_sclk_to_32kxtal+0x34>)
   81dba:	601a      	str	r2, [r3, #0]
}
   81dbc:	bf00      	nop
   81dbe:	370c      	adds	r7, #12
   81dc0:	46bd      	mov	sp, r7
   81dc2:	bc80      	pop	{r7}
   81dc4:	4770      	bx	lr
   81dc6:	bf00      	nop
   81dc8:	400e1a10 	.word	0x400e1a10
   81dcc:	a5000008 	.word	0xa5000008

00081dd0 <pmc_osc_is_ready_32kxtal>:
 *
 * \retval 1 External 32k Xtal is ready.
 * \retval 0 External 32k Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_32kxtal(void)
{
   81dd0:	b480      	push	{r7}
   81dd2:	af00      	add	r7, sp, #0
	return ((SUPC->SUPC_SR & SUPC_SR_OSCSEL)
   81dd4:	4b09      	ldr	r3, [pc, #36]	; (81dfc <pmc_osc_is_ready_32kxtal+0x2c>)
   81dd6:	695b      	ldr	r3, [r3, #20]
   81dd8:	f003 0380 	and.w	r3, r3, #128	; 0x80
			&& (PMC->PMC_SR & PMC_SR_OSCSELS));
   81ddc:	2b00      	cmp	r3, #0
   81dde:	d007      	beq.n	81df0 <pmc_osc_is_ready_32kxtal+0x20>
   81de0:	4b07      	ldr	r3, [pc, #28]	; (81e00 <pmc_osc_is_ready_32kxtal+0x30>)
   81de2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81de4:	f003 0380 	and.w	r3, r3, #128	; 0x80
   81de8:	2b00      	cmp	r3, #0
   81dea:	d001      	beq.n	81df0 <pmc_osc_is_ready_32kxtal+0x20>
   81dec:	2301      	movs	r3, #1
   81dee:	e000      	b.n	81df2 <pmc_osc_is_ready_32kxtal+0x22>
   81df0:	2300      	movs	r3, #0
}
   81df2:	4618      	mov	r0, r3
   81df4:	46bd      	mov	sp, r7
   81df6:	bc80      	pop	{r7}
   81df8:	4770      	bx	lr
   81dfa:	bf00      	nop
   81dfc:	400e1a10 	.word	0x400e1a10
   81e00:	400e0600 	.word	0x400e0600

00081e04 <pmc_switch_mainck_to_fastrc>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
   81e04:	b480      	push	{r7}
   81e06:	b083      	sub	sp, #12
   81e08:	af00      	add	r7, sp, #0
   81e0a:	6078      	str	r0, [r7, #4]
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
   81e0c:	4b18      	ldr	r3, [pc, #96]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e0e:	6a1b      	ldr	r3, [r3, #32]
   81e10:	4a17      	ldr	r2, [pc, #92]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e12:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   81e16:	f043 0308 	orr.w	r3, r3, #8
   81e1a:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
   81e1c:	bf00      	nop
   81e1e:	4b14      	ldr	r3, [pc, #80]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e20:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81e22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   81e26:	2b00      	cmp	r3, #0
   81e28:	d0f9      	beq.n	81e1e <pmc_switch_mainck_to_fastrc+0x1a>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
   81e2a:	4b11      	ldr	r3, [pc, #68]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e2c:	6a1b      	ldr	r3, [r3, #32]
   81e2e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   81e32:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
   81e36:	687a      	ldr	r2, [r7, #4]
   81e38:	4313      	orrs	r3, r2
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
   81e3a:	4a0d      	ldr	r2, [pc, #52]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
   81e3c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
   81e40:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
   81e42:	bf00      	nop
   81e44:	4b0a      	ldr	r3, [pc, #40]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e46:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81e48:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   81e4c:	2b00      	cmp	r3, #0
   81e4e:	d0f9      	beq.n	81e44 <pmc_switch_mainck_to_fastrc+0x40>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
   81e50:	4b07      	ldr	r3, [pc, #28]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e52:	6a1b      	ldr	r3, [r3, #32]
   81e54:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
   81e58:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   81e5c:	4a04      	ldr	r2, [pc, #16]	; (81e70 <pmc_switch_mainck_to_fastrc+0x6c>)
   81e5e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   81e62:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
   81e64:	bf00      	nop
   81e66:	370c      	adds	r7, #12
   81e68:	46bd      	mov	sp, r7
   81e6a:	bc80      	pop	{r7}
   81e6c:	4770      	bx	lr
   81e6e:	bf00      	nop
   81e70:	400e0600 	.word	0x400e0600

00081e74 <pmc_switch_mainck_to_xtal>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
   81e74:	b480      	push	{r7}
   81e76:	b083      	sub	sp, #12
   81e78:	af00      	add	r7, sp, #0
   81e7a:	6078      	str	r0, [r7, #4]
   81e7c:	6039      	str	r1, [r7, #0]
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   81e7e:	687b      	ldr	r3, [r7, #4]
   81e80:	2b00      	cmp	r3, #0
   81e82:	d008      	beq.n	81e96 <pmc_switch_mainck_to_xtal+0x22>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81e84:	4b16      	ldr	r3, [pc, #88]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
   81e86:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   81e88:	4a16      	ldr	r2, [pc, #88]	; (81ee4 <pmc_switch_mainck_to_xtal+0x70>)
   81e8a:	401a      	ands	r2, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81e8c:	4914      	ldr	r1, [pc, #80]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   81e8e:	4b16      	ldr	r3, [pc, #88]	; (81ee8 <pmc_switch_mainck_to_xtal+0x74>)
   81e90:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81e92:	620b      	str	r3, [r1, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
	}
}
   81e94:	e01e      	b.n	81ed4 <pmc_switch_mainck_to_xtal+0x60>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81e96:	4b12      	ldr	r3, [pc, #72]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
   81e98:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   81e9a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   81e9e:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   81ea2:	683a      	ldr	r2, [r7, #0]
   81ea4:	0212      	lsls	r2, r2, #8
   81ea6:	b292      	uxth	r2, r2
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   81ea8:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81eaa:	4a0d      	ldr	r2, [pc, #52]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   81eac:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   81eb0:	f043 0301 	orr.w	r3, r3, #1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   81eb4:	6213      	str	r3, [r2, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   81eb6:	bf00      	nop
   81eb8:	4b09      	ldr	r3, [pc, #36]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
   81eba:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81ebc:	f003 0301 	and.w	r3, r3, #1
   81ec0:	2b00      	cmp	r3, #0
   81ec2:	d0f9      	beq.n	81eb8 <pmc_switch_mainck_to_xtal+0x44>
		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   81ec4:	4b06      	ldr	r3, [pc, #24]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
   81ec6:	6a1b      	ldr	r3, [r3, #32]
   81ec8:	4a05      	ldr	r2, [pc, #20]	; (81ee0 <pmc_switch_mainck_to_xtal+0x6c>)
   81eca:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   81ece:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   81ed2:	6213      	str	r3, [r2, #32]
}
   81ed4:	bf00      	nop
   81ed6:	370c      	adds	r7, #12
   81ed8:	46bd      	mov	sp, r7
   81eda:	bc80      	pop	{r7}
   81edc:	4770      	bx	lr
   81ede:	bf00      	nop
   81ee0:	400e0600 	.word	0x400e0600
   81ee4:	fec8fffc 	.word	0xfec8fffc
   81ee8:	01370002 	.word	0x01370002

00081eec <pmc_osc_is_ready_mainck>:
 *
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
   81eec:	b480      	push	{r7}
   81eee:	af00      	add	r7, sp, #0
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   81ef0:	4b03      	ldr	r3, [pc, #12]	; (81f00 <pmc_osc_is_ready_mainck+0x14>)
   81ef2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81ef4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
}
   81ef8:	4618      	mov	r0, r3
   81efa:	46bd      	mov	sp, r7
   81efc:	bc80      	pop	{r7}
   81efe:	4770      	bx	lr
   81f00:	400e0600 	.word	0x400e0600

00081f04 <pmc_disable_pllack>:

/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
   81f04:	b480      	push	{r7}
   81f06:	af00      	add	r7, sp, #0
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   81f08:	4b03      	ldr	r3, [pc, #12]	; (81f18 <pmc_disable_pllack+0x14>)
   81f0a:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   81f0e:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
   81f10:	bf00      	nop
   81f12:	46bd      	mov	sp, r7
   81f14:	bc80      	pop	{r7}
   81f16:	4770      	bx	lr
   81f18:	400e0600 	.word	0x400e0600

00081f1c <pmc_is_locked_pllack>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
   81f1c:	b480      	push	{r7}
   81f1e:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   81f20:	4b03      	ldr	r3, [pc, #12]	; (81f30 <pmc_is_locked_pllack+0x14>)
   81f22:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81f24:	f003 0302 	and.w	r3, r3, #2
}
   81f28:	4618      	mov	r0, r3
   81f2a:	46bd      	mov	sp, r7
   81f2c:	bc80      	pop	{r7}
   81f2e:	4770      	bx	lr
   81f30:	400e0600 	.word	0x400e0600

00081f34 <pmc_is_locked_upll>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_upll(void)
{
   81f34:	b480      	push	{r7}
   81f36:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKU);
   81f38:	4b03      	ldr	r3, [pc, #12]	; (81f48 <pmc_is_locked_upll+0x14>)
   81f3a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81f3c:	f003 0340 	and.w	r3, r3, #64	; 0x40
}
   81f40:	4618      	mov	r0, r3
   81f42:	46bd      	mov	sp, r7
   81f44:	bc80      	pop	{r7}
   81f46:	4770      	bx	lr
   81f48:	400e0600 	.word	0x400e0600

00081f4c <pmc_enable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
   81f4c:	b480      	push	{r7}
   81f4e:	b083      	sub	sp, #12
   81f50:	af00      	add	r7, sp, #0
   81f52:	6078      	str	r0, [r7, #4]
	if (ul_id > MAX_PERIPH_ID) {
   81f54:	687b      	ldr	r3, [r7, #4]
   81f56:	2b2c      	cmp	r3, #44	; 0x2c
   81f58:	d901      	bls.n	81f5e <pmc_enable_periph_clk+0x12>
		return 1;
   81f5a:	2301      	movs	r3, #1
   81f5c:	e02d      	b.n	81fba <pmc_enable_periph_clk+0x6e>
	}

	if (ul_id < 32) {
   81f5e:	687b      	ldr	r3, [r7, #4]
   81f60:	2b1f      	cmp	r3, #31
   81f62:	d812      	bhi.n	81f8a <pmc_enable_periph_clk+0x3e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   81f64:	4b17      	ldr	r3, [pc, #92]	; (81fc4 <pmc_enable_periph_clk+0x78>)
   81f66:	699a      	ldr	r2, [r3, #24]
   81f68:	2101      	movs	r1, #1
   81f6a:	687b      	ldr	r3, [r7, #4]
   81f6c:	fa01 f303 	lsl.w	r3, r1, r3
   81f70:	401a      	ands	r2, r3
   81f72:	2101      	movs	r1, #1
   81f74:	687b      	ldr	r3, [r7, #4]
   81f76:	fa01 f303 	lsl.w	r3, r1, r3
   81f7a:	429a      	cmp	r2, r3
   81f7c:	d01c      	beq.n	81fb8 <pmc_enable_periph_clk+0x6c>
			PMC->PMC_PCER0 = 1 << ul_id;
   81f7e:	2201      	movs	r2, #1
   81f80:	687b      	ldr	r3, [r7, #4]
   81f82:	409a      	lsls	r2, r3
   81f84:	4b0f      	ldr	r3, [pc, #60]	; (81fc4 <pmc_enable_periph_clk+0x78>)
   81f86:	611a      	str	r2, [r3, #16]
   81f88:	e016      	b.n	81fb8 <pmc_enable_periph_clk+0x6c>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
   81f8a:	687b      	ldr	r3, [r7, #4]
   81f8c:	3b20      	subs	r3, #32
   81f8e:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   81f90:	4b0c      	ldr	r3, [pc, #48]	; (81fc4 <pmc_enable_periph_clk+0x78>)
   81f92:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   81f96:	2101      	movs	r1, #1
   81f98:	687b      	ldr	r3, [r7, #4]
   81f9a:	fa01 f303 	lsl.w	r3, r1, r3
   81f9e:	401a      	ands	r2, r3
   81fa0:	2101      	movs	r1, #1
   81fa2:	687b      	ldr	r3, [r7, #4]
   81fa4:	fa01 f303 	lsl.w	r3, r1, r3
   81fa8:	429a      	cmp	r2, r3
   81faa:	d005      	beq.n	81fb8 <pmc_enable_periph_clk+0x6c>
			PMC->PMC_PCER1 = 1 << ul_id;
   81fac:	2201      	movs	r2, #1
   81fae:	687b      	ldr	r3, [r7, #4]
   81fb0:	409a      	lsls	r2, r3
   81fb2:	4b04      	ldr	r3, [pc, #16]	; (81fc4 <pmc_enable_periph_clk+0x78>)
   81fb4:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   81fb8:	2300      	movs	r3, #0
}
   81fba:	4618      	mov	r0, r3
   81fbc:	370c      	adds	r7, #12
   81fbe:	46bd      	mov	sp, r7
   81fc0:	bc80      	pop	{r7}
   81fc2:	4770      	bx	lr
   81fc4:	400e0600 	.word	0x400e0600

00081fc8 <pio_pull_up>:
 * \param ul_pull_up_enable Indicates if the pin(s) internal pull-up shall be
 * configured.
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
   81fc8:	b480      	push	{r7}
   81fca:	b085      	sub	sp, #20
   81fcc:	af00      	add	r7, sp, #0
   81fce:	60f8      	str	r0, [r7, #12]
   81fd0:	60b9      	str	r1, [r7, #8]
   81fd2:	607a      	str	r2, [r7, #4]
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   81fd4:	687b      	ldr	r3, [r7, #4]
   81fd6:	2b00      	cmp	r3, #0
   81fd8:	d003      	beq.n	81fe2 <pio_pull_up+0x1a>
		p_pio->PIO_PUER = ul_mask;
   81fda:	68fb      	ldr	r3, [r7, #12]
   81fdc:	68ba      	ldr	r2, [r7, #8]
   81fde:	665a      	str	r2, [r3, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
	}
}
   81fe0:	e002      	b.n	81fe8 <pio_pull_up+0x20>
		p_pio->PIO_PUDR = ul_mask;
   81fe2:	68fb      	ldr	r3, [r7, #12]
   81fe4:	68ba      	ldr	r2, [r7, #8]
   81fe6:	661a      	str	r2, [r3, #96]	; 0x60
}
   81fe8:	bf00      	nop
   81fea:	3714      	adds	r7, #20
   81fec:	46bd      	mov	sp, r7
   81fee:	bc80      	pop	{r7}
   81ff0:	4770      	bx	lr

00081ff2 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
   81ff2:	b480      	push	{r7}
   81ff4:	b087      	sub	sp, #28
   81ff6:	af00      	add	r7, sp, #0
   81ff8:	60f8      	str	r0, [r7, #12]
   81ffa:	60b9      	str	r1, [r7, #8]
   81ffc:	607a      	str	r2, [r7, #4]
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   81ffe:	68fb      	ldr	r3, [r7, #12]
   82000:	687a      	ldr	r2, [r7, #4]
   82002:	645a      	str	r2, [r3, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   82004:	68bb      	ldr	r3, [r7, #8]
   82006:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   8200a:	d01f      	beq.n	8204c <pio_set_peripheral+0x5a>
   8200c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82010:	d805      	bhi.n	8201e <pio_set_peripheral+0x2c>
   82012:	2b00      	cmp	r3, #0
   82014:	d027      	beq.n	82066 <pio_set_peripheral+0x74>
   82016:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8201a:	d00a      	beq.n	82032 <pio_set_peripheral+0x40>
   8201c:	e01f      	b.n	8205e <pio_set_peripheral+0x6c>
   8201e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   82022:	d020      	beq.n	82066 <pio_set_peripheral+0x74>
   82024:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   82028:	d01d      	beq.n	82066 <pio_set_peripheral+0x74>
   8202a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8202e:	d01a      	beq.n	82066 <pio_set_peripheral+0x74>
   82030:	e015      	b.n	8205e <pio_set_peripheral+0x6c>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   82032:	68fb      	ldr	r3, [r7, #12]
   82034:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   82036:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   82038:	68fb      	ldr	r3, [r7, #12]
   8203a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8203c:	687b      	ldr	r3, [r7, #4]
   8203e:	43d9      	mvns	r1, r3
   82040:	697b      	ldr	r3, [r7, #20]
   82042:	400b      	ands	r3, r1
   82044:	401a      	ands	r2, r3
   82046:	68fb      	ldr	r3, [r7, #12]
   82048:	671a      	str	r2, [r3, #112]	; 0x70
		break;
   8204a:	e008      	b.n	8205e <pio_set_peripheral+0x6c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   8204c:	68fb      	ldr	r3, [r7, #12]
   8204e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   82050:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   82052:	687a      	ldr	r2, [r7, #4]
   82054:	697b      	ldr	r3, [r7, #20]
   82056:	431a      	orrs	r2, r3
   82058:	68fb      	ldr	r3, [r7, #12]
   8205a:	671a      	str	r2, [r3, #112]	; 0x70
		break;
   8205c:	bf00      	nop
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   8205e:	68fb      	ldr	r3, [r7, #12]
   82060:	687a      	ldr	r2, [r7, #4]
   82062:	605a      	str	r2, [r3, #4]
   82064:	e000      	b.n	82068 <pio_set_peripheral+0x76>
		return;
   82066:	bf00      	nop
}
   82068:	371c      	adds	r7, #28
   8206a:	46bd      	mov	sp, r7
   8206c:	bc80      	pop	{r7}
   8206e:	4770      	bx	lr

00082070 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   82070:	b480      	push	{r7}
   82072:	b085      	sub	sp, #20
   82074:	af00      	add	r7, sp, #0
   82076:	6078      	str	r0, [r7, #4]
   82078:	6039      	str	r1, [r7, #0]
	uint32_t cd = 0;
   8207a:	2300      	movs	r3, #0
   8207c:	60fb      	str	r3, [r7, #12]

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   8207e:	687b      	ldr	r3, [r7, #4]
   82080:	22ac      	movs	r2, #172	; 0xac
   82082:	601a      	str	r2, [r3, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   82084:	683b      	ldr	r3, [r7, #0]
   82086:	681a      	ldr	r2, [r3, #0]
   82088:	683b      	ldr	r3, [r7, #0]
   8208a:	685b      	ldr	r3, [r3, #4]
   8208c:	fbb2 f3f3 	udiv	r3, r2, r3
   82090:	091b      	lsrs	r3, r3, #4
   82092:	60fb      	str	r3, [r7, #12]
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   82094:	68fb      	ldr	r3, [r7, #12]
   82096:	2b00      	cmp	r3, #0
   82098:	d003      	beq.n	820a2 <uart_init+0x32>
   8209a:	68fb      	ldr	r3, [r7, #12]
   8209c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   820a0:	d301      	bcc.n	820a6 <uart_init+0x36>
		return 1;
   820a2:	2301      	movs	r3, #1
   820a4:	e00f      	b.n	820c6 <uart_init+0x56>

	p_uart->UART_BRGR = cd;
   820a6:	687b      	ldr	r3, [r7, #4]
   820a8:	68fa      	ldr	r2, [r7, #12]
   820aa:	621a      	str	r2, [r3, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   820ac:	683b      	ldr	r3, [r7, #0]
   820ae:	689a      	ldr	r2, [r3, #8]
   820b0:	687b      	ldr	r3, [r7, #4]
   820b2:	605a      	str	r2, [r3, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   820b4:	687b      	ldr	r3, [r7, #4]
   820b6:	f240 2202 	movw	r2, #514	; 0x202
   820ba:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   820be:	687b      	ldr	r3, [r7, #4]
   820c0:	2250      	movs	r2, #80	; 0x50
   820c2:	601a      	str	r2, [r3, #0]

	return 0;
   820c4:	2300      	movs	r3, #0
}
   820c6:	4618      	mov	r0, r3
   820c8:	3714      	adds	r7, #20
   820ca:	46bd      	mov	sp, r7
   820cc:	bc80      	pop	{r7}
   820ce:	4770      	bx	lr

000820d0 <__aeabi_uldivmod>:
   820d0:	b953      	cbnz	r3, 820e8 <__aeabi_uldivmod+0x18>
   820d2:	b94a      	cbnz	r2, 820e8 <__aeabi_uldivmod+0x18>
   820d4:	2900      	cmp	r1, #0
   820d6:	bf08      	it	eq
   820d8:	2800      	cmpeq	r0, #0
   820da:	bf1c      	itt	ne
   820dc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   820e0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   820e4:	f000 b974 	b.w	823d0 <__aeabi_idiv0>
   820e8:	f1ad 0c08 	sub.w	ip, sp, #8
   820ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   820f0:	f000 f806 	bl	82100 <__udivmoddi4>
   820f4:	f8dd e004 	ldr.w	lr, [sp, #4]
   820f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   820fc:	b004      	add	sp, #16
   820fe:	4770      	bx	lr

00082100 <__udivmoddi4>:
   82100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   82104:	468c      	mov	ip, r1
   82106:	4604      	mov	r4, r0
   82108:	9e08      	ldr	r6, [sp, #32]
   8210a:	2b00      	cmp	r3, #0
   8210c:	d14b      	bne.n	821a6 <__udivmoddi4+0xa6>
   8210e:	428a      	cmp	r2, r1
   82110:	4615      	mov	r5, r2
   82112:	d967      	bls.n	821e4 <__udivmoddi4+0xe4>
   82114:	fab2 f282 	clz	r2, r2
   82118:	b14a      	cbz	r2, 8212e <__udivmoddi4+0x2e>
   8211a:	f1c2 0720 	rsb	r7, r2, #32
   8211e:	fa01 f302 	lsl.w	r3, r1, r2
   82122:	fa20 f707 	lsr.w	r7, r0, r7
   82126:	4095      	lsls	r5, r2
   82128:	ea47 0c03 	orr.w	ip, r7, r3
   8212c:	4094      	lsls	r4, r2
   8212e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   82132:	fbbc f7fe 	udiv	r7, ip, lr
   82136:	fa1f f885 	uxth.w	r8, r5
   8213a:	fb0e c317 	mls	r3, lr, r7, ip
   8213e:	fb07 f908 	mul.w	r9, r7, r8
   82142:	0c21      	lsrs	r1, r4, #16
   82144:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
   82148:	4599      	cmp	r9, r3
   8214a:	d909      	bls.n	82160 <__udivmoddi4+0x60>
   8214c:	18eb      	adds	r3, r5, r3
   8214e:	f107 31ff 	add.w	r1, r7, #4294967295	; 0xffffffff
   82152:	f080 811c 	bcs.w	8238e <__udivmoddi4+0x28e>
   82156:	4599      	cmp	r9, r3
   82158:	f240 8119 	bls.w	8238e <__udivmoddi4+0x28e>
   8215c:	3f02      	subs	r7, #2
   8215e:	442b      	add	r3, r5
   82160:	eba3 0309 	sub.w	r3, r3, r9
   82164:	fbb3 f0fe 	udiv	r0, r3, lr
   82168:	fb0e 3310 	mls	r3, lr, r0, r3
   8216c:	fb00 f108 	mul.w	r1, r0, r8
   82170:	b2a4      	uxth	r4, r4
   82172:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   82176:	42a1      	cmp	r1, r4
   82178:	d909      	bls.n	8218e <__udivmoddi4+0x8e>
   8217a:	192c      	adds	r4, r5, r4
   8217c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   82180:	f080 8107 	bcs.w	82392 <__udivmoddi4+0x292>
   82184:	42a1      	cmp	r1, r4
   82186:	f240 8104 	bls.w	82392 <__udivmoddi4+0x292>
   8218a:	3802      	subs	r0, #2
   8218c:	442c      	add	r4, r5
   8218e:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   82192:	2700      	movs	r7, #0
   82194:	1a64      	subs	r4, r4, r1
   82196:	b11e      	cbz	r6, 821a0 <__udivmoddi4+0xa0>
   82198:	2300      	movs	r3, #0
   8219a:	40d4      	lsrs	r4, r2
   8219c:	e9c6 4300 	strd	r4, r3, [r6]
   821a0:	4639      	mov	r1, r7
   821a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   821a6:	428b      	cmp	r3, r1
   821a8:	d909      	bls.n	821be <__udivmoddi4+0xbe>
   821aa:	2e00      	cmp	r6, #0
   821ac:	f000 80ec 	beq.w	82388 <__udivmoddi4+0x288>
   821b0:	2700      	movs	r7, #0
   821b2:	e9c6 0100 	strd	r0, r1, [r6]
   821b6:	4638      	mov	r0, r7
   821b8:	4639      	mov	r1, r7
   821ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   821be:	fab3 f783 	clz	r7, r3
   821c2:	2f00      	cmp	r7, #0
   821c4:	d148      	bne.n	82258 <__udivmoddi4+0x158>
   821c6:	428b      	cmp	r3, r1
   821c8:	d302      	bcc.n	821d0 <__udivmoddi4+0xd0>
   821ca:	4282      	cmp	r2, r0
   821cc:	f200 80fb 	bhi.w	823c6 <__udivmoddi4+0x2c6>
   821d0:	1a84      	subs	r4, r0, r2
   821d2:	eb61 0303 	sbc.w	r3, r1, r3
   821d6:	2001      	movs	r0, #1
   821d8:	469c      	mov	ip, r3
   821da:	2e00      	cmp	r6, #0
   821dc:	d0e0      	beq.n	821a0 <__udivmoddi4+0xa0>
   821de:	e9c6 4c00 	strd	r4, ip, [r6]
   821e2:	e7dd      	b.n	821a0 <__udivmoddi4+0xa0>
   821e4:	b902      	cbnz	r2, 821e8 <__udivmoddi4+0xe8>
   821e6:	deff      	udf	#255	; 0xff
   821e8:	fab2 f282 	clz	r2, r2
   821ec:	2a00      	cmp	r2, #0
   821ee:	f040 808f 	bne.w	82310 <__udivmoddi4+0x210>
   821f2:	2701      	movs	r7, #1
   821f4:	1b49      	subs	r1, r1, r5
   821f6:	ea4f 4815 	mov.w	r8, r5, lsr #16
   821fa:	fa1f f985 	uxth.w	r9, r5
   821fe:	fbb1 fef8 	udiv	lr, r1, r8
   82202:	fb08 111e 	mls	r1, r8, lr, r1
   82206:	fb09 f00e 	mul.w	r0, r9, lr
   8220a:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   8220e:	ea4c 4301 	orr.w	r3, ip, r1, lsl #16
   82212:	4298      	cmp	r0, r3
   82214:	d907      	bls.n	82226 <__udivmoddi4+0x126>
   82216:	18eb      	adds	r3, r5, r3
   82218:	f10e 31ff 	add.w	r1, lr, #4294967295	; 0xffffffff
   8221c:	d202      	bcs.n	82224 <__udivmoddi4+0x124>
   8221e:	4298      	cmp	r0, r3
   82220:	f200 80cd 	bhi.w	823be <__udivmoddi4+0x2be>
   82224:	468e      	mov	lr, r1
   82226:	1a1b      	subs	r3, r3, r0
   82228:	fbb3 f0f8 	udiv	r0, r3, r8
   8222c:	fb08 3310 	mls	r3, r8, r0, r3
   82230:	fb09 f900 	mul.w	r9, r9, r0
   82234:	b2a4      	uxth	r4, r4
   82236:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   8223a:	45a1      	cmp	r9, r4
   8223c:	d907      	bls.n	8224e <__udivmoddi4+0x14e>
   8223e:	192c      	adds	r4, r5, r4
   82240:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   82244:	d202      	bcs.n	8224c <__udivmoddi4+0x14c>
   82246:	45a1      	cmp	r9, r4
   82248:	f200 80b6 	bhi.w	823b8 <__udivmoddi4+0x2b8>
   8224c:	4618      	mov	r0, r3
   8224e:	eba4 0409 	sub.w	r4, r4, r9
   82252:	ea40 400e 	orr.w	r0, r0, lr, lsl #16
   82256:	e79e      	b.n	82196 <__udivmoddi4+0x96>
   82258:	f1c7 0520 	rsb	r5, r7, #32
   8225c:	40bb      	lsls	r3, r7
   8225e:	fa22 fc05 	lsr.w	ip, r2, r5
   82262:	ea4c 0c03 	orr.w	ip, ip, r3
   82266:	fa21 f405 	lsr.w	r4, r1, r5
   8226a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   8226e:	fbb4 f9fe 	udiv	r9, r4, lr
   82272:	fa1f f88c 	uxth.w	r8, ip
   82276:	fb0e 4419 	mls	r4, lr, r9, r4
   8227a:	fa20 f305 	lsr.w	r3, r0, r5
   8227e:	40b9      	lsls	r1, r7
   82280:	fb09 fa08 	mul.w	sl, r9, r8
   82284:	4319      	orrs	r1, r3
   82286:	0c0b      	lsrs	r3, r1, #16
   82288:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   8228c:	45a2      	cmp	sl, r4
   8228e:	fa02 f207 	lsl.w	r2, r2, r7
   82292:	fa00 f307 	lsl.w	r3, r0, r7
   82296:	d90b      	bls.n	822b0 <__udivmoddi4+0x1b0>
   82298:	eb1c 0404 	adds.w	r4, ip, r4
   8229c:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   822a0:	f080 8088 	bcs.w	823b4 <__udivmoddi4+0x2b4>
   822a4:	45a2      	cmp	sl, r4
   822a6:	f240 8085 	bls.w	823b4 <__udivmoddi4+0x2b4>
   822aa:	f1a9 0902 	sub.w	r9, r9, #2
   822ae:	4464      	add	r4, ip
   822b0:	eba4 040a 	sub.w	r4, r4, sl
   822b4:	fbb4 f0fe 	udiv	r0, r4, lr
   822b8:	fb0e 4410 	mls	r4, lr, r0, r4
   822bc:	fb00 fa08 	mul.w	sl, r0, r8
   822c0:	b289      	uxth	r1, r1
   822c2:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
   822c6:	45a2      	cmp	sl, r4
   822c8:	d908      	bls.n	822dc <__udivmoddi4+0x1dc>
   822ca:	eb1c 0404 	adds.w	r4, ip, r4
   822ce:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
   822d2:	d26b      	bcs.n	823ac <__udivmoddi4+0x2ac>
   822d4:	45a2      	cmp	sl, r4
   822d6:	d969      	bls.n	823ac <__udivmoddi4+0x2ac>
   822d8:	3802      	subs	r0, #2
   822da:	4464      	add	r4, ip
   822dc:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   822e0:	fba0 8902 	umull	r8, r9, r0, r2
   822e4:	eba4 040a 	sub.w	r4, r4, sl
   822e8:	454c      	cmp	r4, r9
   822ea:	4641      	mov	r1, r8
   822ec:	46ce      	mov	lr, r9
   822ee:	d354      	bcc.n	8239a <__udivmoddi4+0x29a>
   822f0:	d051      	beq.n	82396 <__udivmoddi4+0x296>
   822f2:	2e00      	cmp	r6, #0
   822f4:	d069      	beq.n	823ca <__udivmoddi4+0x2ca>
   822f6:	1a5a      	subs	r2, r3, r1
   822f8:	eb64 040e 	sbc.w	r4, r4, lr
   822fc:	fa04 f505 	lsl.w	r5, r4, r5
   82300:	fa22 f307 	lsr.w	r3, r2, r7
   82304:	40fc      	lsrs	r4, r7
   82306:	431d      	orrs	r5, r3
   82308:	e9c6 5400 	strd	r5, r4, [r6]
   8230c:	2700      	movs	r7, #0
   8230e:	e747      	b.n	821a0 <__udivmoddi4+0xa0>
   82310:	4095      	lsls	r5, r2
   82312:	f1c2 0320 	rsb	r3, r2, #32
   82316:	fa21 f003 	lsr.w	r0, r1, r3
   8231a:	ea4f 4815 	mov.w	r8, r5, lsr #16
   8231e:	fbb0 f7f8 	udiv	r7, r0, r8
   82322:	fa1f f985 	uxth.w	r9, r5
   82326:	fb08 0017 	mls	r0, r8, r7, r0
   8232a:	fa24 f303 	lsr.w	r3, r4, r3
   8232e:	4091      	lsls	r1, r2
   82330:	fb07 fc09 	mul.w	ip, r7, r9
   82334:	430b      	orrs	r3, r1
   82336:	0c19      	lsrs	r1, r3, #16
   82338:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
   8233c:	458c      	cmp	ip, r1
   8233e:	fa04 f402 	lsl.w	r4, r4, r2
   82342:	d907      	bls.n	82354 <__udivmoddi4+0x254>
   82344:	1869      	adds	r1, r5, r1
   82346:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
   8234a:	d231      	bcs.n	823b0 <__udivmoddi4+0x2b0>
   8234c:	458c      	cmp	ip, r1
   8234e:	d92f      	bls.n	823b0 <__udivmoddi4+0x2b0>
   82350:	3f02      	subs	r7, #2
   82352:	4429      	add	r1, r5
   82354:	eba1 010c 	sub.w	r1, r1, ip
   82358:	fbb1 f0f8 	udiv	r0, r1, r8
   8235c:	fb08 1c10 	mls	ip, r8, r0, r1
   82360:	fb00 fe09 	mul.w	lr, r0, r9
   82364:	b299      	uxth	r1, r3
   82366:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
   8236a:	458e      	cmp	lr, r1
   8236c:	d907      	bls.n	8237e <__udivmoddi4+0x27e>
   8236e:	1869      	adds	r1, r5, r1
   82370:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   82374:	d218      	bcs.n	823a8 <__udivmoddi4+0x2a8>
   82376:	458e      	cmp	lr, r1
   82378:	d916      	bls.n	823a8 <__udivmoddi4+0x2a8>
   8237a:	3802      	subs	r0, #2
   8237c:	4429      	add	r1, r5
   8237e:	eba1 010e 	sub.w	r1, r1, lr
   82382:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
   82386:	e73a      	b.n	821fe <__udivmoddi4+0xfe>
   82388:	4637      	mov	r7, r6
   8238a:	4630      	mov	r0, r6
   8238c:	e708      	b.n	821a0 <__udivmoddi4+0xa0>
   8238e:	460f      	mov	r7, r1
   82390:	e6e6      	b.n	82160 <__udivmoddi4+0x60>
   82392:	4618      	mov	r0, r3
   82394:	e6fb      	b.n	8218e <__udivmoddi4+0x8e>
   82396:	4543      	cmp	r3, r8
   82398:	d2ab      	bcs.n	822f2 <__udivmoddi4+0x1f2>
   8239a:	ebb8 0102 	subs.w	r1, r8, r2
   8239e:	eb69 020c 	sbc.w	r2, r9, ip
   823a2:	3801      	subs	r0, #1
   823a4:	4696      	mov	lr, r2
   823a6:	e7a4      	b.n	822f2 <__udivmoddi4+0x1f2>
   823a8:	4618      	mov	r0, r3
   823aa:	e7e8      	b.n	8237e <__udivmoddi4+0x27e>
   823ac:	4608      	mov	r0, r1
   823ae:	e795      	b.n	822dc <__udivmoddi4+0x1dc>
   823b0:	4607      	mov	r7, r0
   823b2:	e7cf      	b.n	82354 <__udivmoddi4+0x254>
   823b4:	4681      	mov	r9, r0
   823b6:	e77b      	b.n	822b0 <__udivmoddi4+0x1b0>
   823b8:	3802      	subs	r0, #2
   823ba:	442c      	add	r4, r5
   823bc:	e747      	b.n	8224e <__udivmoddi4+0x14e>
   823be:	f1ae 0e02 	sub.w	lr, lr, #2
   823c2:	442b      	add	r3, r5
   823c4:	e72f      	b.n	82226 <__udivmoddi4+0x126>
   823c6:	4638      	mov	r0, r7
   823c8:	e707      	b.n	821da <__udivmoddi4+0xda>
   823ca:	4637      	mov	r7, r6
   823cc:	e6e8      	b.n	821a0 <__udivmoddi4+0xa0>
   823ce:	bf00      	nop

000823d0 <__aeabi_idiv0>:
   823d0:	4770      	bx	lr
   823d2:	bf00      	nop

000823d4 <atexit>:
   823d4:	2300      	movs	r3, #0
   823d6:	4601      	mov	r1, r0
   823d8:	461a      	mov	r2, r3
   823da:	4618      	mov	r0, r3
   823dc:	f001 bb6a 	b.w	83ab4 <__register_exitproc>

000823e0 <__libc_fini_array>:
   823e0:	b538      	push	{r3, r4, r5, lr}
   823e2:	4c0a      	ldr	r4, [pc, #40]	; (8240c <__libc_fini_array+0x2c>)
   823e4:	4d0a      	ldr	r5, [pc, #40]	; (82410 <__libc_fini_array+0x30>)
   823e6:	1b64      	subs	r4, r4, r5
   823e8:	10a4      	asrs	r4, r4, #2
   823ea:	d00a      	beq.n	82402 <__libc_fini_array+0x22>
   823ec:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   823f0:	3b01      	subs	r3, #1
   823f2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   823f6:	3c01      	subs	r4, #1
   823f8:	f855 3904 	ldr.w	r3, [r5], #-4
   823fc:	4798      	blx	r3
   823fe:	2c00      	cmp	r4, #0
   82400:	d1f9      	bne.n	823f6 <__libc_fini_array+0x16>
   82402:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82406:	f005 bacb 	b.w	879a0 <_fini>
   8240a:	bf00      	nop
   8240c:	000879c4 	.word	0x000879c4
   82410:	000879c0 	.word	0x000879c0

00082414 <__libc_init_array>:
   82414:	b570      	push	{r4, r5, r6, lr}
   82416:	4e0d      	ldr	r6, [pc, #52]	; (8244c <__libc_init_array+0x38>)
   82418:	4d0d      	ldr	r5, [pc, #52]	; (82450 <__libc_init_array+0x3c>)
   8241a:	1b76      	subs	r6, r6, r5
   8241c:	10b6      	asrs	r6, r6, #2
   8241e:	d006      	beq.n	8242e <__libc_init_array+0x1a>
   82420:	2400      	movs	r4, #0
   82422:	3401      	adds	r4, #1
   82424:	f855 3b04 	ldr.w	r3, [r5], #4
   82428:	4798      	blx	r3
   8242a:	42a6      	cmp	r6, r4
   8242c:	d1f9      	bne.n	82422 <__libc_init_array+0xe>
   8242e:	4e09      	ldr	r6, [pc, #36]	; (82454 <__libc_init_array+0x40>)
   82430:	4d09      	ldr	r5, [pc, #36]	; (82458 <__libc_init_array+0x44>)
   82432:	f005 faab 	bl	8798c <_init>
   82436:	1b76      	subs	r6, r6, r5
   82438:	10b6      	asrs	r6, r6, #2
   8243a:	d006      	beq.n	8244a <__libc_init_array+0x36>
   8243c:	2400      	movs	r4, #0
   8243e:	3401      	adds	r4, #1
   82440:	f855 3b04 	ldr.w	r3, [r5], #4
   82444:	4798      	blx	r3
   82446:	42a6      	cmp	r6, r4
   82448:	d1f9      	bne.n	8243e <__libc_init_array+0x2a>
   8244a:	bd70      	pop	{r4, r5, r6, pc}
   8244c:	00087998 	.word	0x00087998
   82450:	00087998 	.word	0x00087998
   82454:	000879a0 	.word	0x000879a0
   82458:	00087998 	.word	0x00087998

0008245c <memset>:
   8245c:	b4f0      	push	{r4, r5, r6, r7}
   8245e:	0786      	lsls	r6, r0, #30
   82460:	d043      	beq.n	824ea <memset+0x8e>
   82462:	1e54      	subs	r4, r2, #1
   82464:	2a00      	cmp	r2, #0
   82466:	d03e      	beq.n	824e6 <memset+0x8a>
   82468:	b2ca      	uxtb	r2, r1
   8246a:	4603      	mov	r3, r0
   8246c:	e002      	b.n	82474 <memset+0x18>
   8246e:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
   82472:	d338      	bcc.n	824e6 <memset+0x8a>
   82474:	f803 2b01 	strb.w	r2, [r3], #1
   82478:	079d      	lsls	r5, r3, #30
   8247a:	d1f8      	bne.n	8246e <memset+0x12>
   8247c:	2c03      	cmp	r4, #3
   8247e:	d92b      	bls.n	824d8 <memset+0x7c>
   82480:	b2cd      	uxtb	r5, r1
   82482:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   82486:	2c0f      	cmp	r4, #15
   82488:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   8248c:	d916      	bls.n	824bc <memset+0x60>
   8248e:	f1a4 0710 	sub.w	r7, r4, #16
   82492:	093f      	lsrs	r7, r7, #4
   82494:	f103 0620 	add.w	r6, r3, #32
   82498:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   8249c:	f103 0210 	add.w	r2, r3, #16
   824a0:	e942 5504 	strd	r5, r5, [r2, #-16]
   824a4:	e942 5502 	strd	r5, r5, [r2, #-8]
   824a8:	3210      	adds	r2, #16
   824aa:	42b2      	cmp	r2, r6
   824ac:	d1f8      	bne.n	824a0 <memset+0x44>
   824ae:	f004 040f 	and.w	r4, r4, #15
   824b2:	3701      	adds	r7, #1
   824b4:	2c03      	cmp	r4, #3
   824b6:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   824ba:	d90d      	bls.n	824d8 <memset+0x7c>
   824bc:	461e      	mov	r6, r3
   824be:	4622      	mov	r2, r4
   824c0:	3a04      	subs	r2, #4
   824c2:	2a03      	cmp	r2, #3
   824c4:	f846 5b04 	str.w	r5, [r6], #4
   824c8:	d8fa      	bhi.n	824c0 <memset+0x64>
   824ca:	1f22      	subs	r2, r4, #4
   824cc:	f022 0203 	bic.w	r2, r2, #3
   824d0:	3204      	adds	r2, #4
   824d2:	4413      	add	r3, r2
   824d4:	f004 0403 	and.w	r4, r4, #3
   824d8:	b12c      	cbz	r4, 824e6 <memset+0x8a>
   824da:	b2c9      	uxtb	r1, r1
   824dc:	441c      	add	r4, r3
   824de:	f803 1b01 	strb.w	r1, [r3], #1
   824e2:	429c      	cmp	r4, r3
   824e4:	d1fb      	bne.n	824de <memset+0x82>
   824e6:	bcf0      	pop	{r4, r5, r6, r7}
   824e8:	4770      	bx	lr
   824ea:	4614      	mov	r4, r2
   824ec:	4603      	mov	r3, r0
   824ee:	e7c5      	b.n	8247c <memset+0x20>

000824f0 <_sprintf_r>:
   824f0:	b40c      	push	{r2, r3}
   824f2:	b570      	push	{r4, r5, r6, lr}
   824f4:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   824f8:	b09c      	sub	sp, #112	; 0x70
   824fa:	ac20      	add	r4, sp, #128	; 0x80
   824fc:	f854 2b04 	ldr.w	r2, [r4], #4
   82500:	4e09      	ldr	r6, [pc, #36]	; (82528 <_sprintf_r+0x38>)
   82502:	9102      	str	r1, [sp, #8]
   82504:	9106      	str	r1, [sp, #24]
   82506:	4623      	mov	r3, r4
   82508:	a902      	add	r1, sp, #8
   8250a:	9401      	str	r4, [sp, #4]
   8250c:	9507      	str	r5, [sp, #28]
   8250e:	e9cd 5604 	strd	r5, r6, [sp, #16]
   82512:	f000 f85b 	bl	825cc <_svfprintf_r>
   82516:	2200      	movs	r2, #0
   82518:	9b02      	ldr	r3, [sp, #8]
   8251a:	701a      	strb	r2, [r3, #0]
   8251c:	b01c      	add	sp, #112	; 0x70
   8251e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   82522:	b002      	add	sp, #8
   82524:	4770      	bx	lr
   82526:	bf00      	nop
   82528:	ffff0208 	.word	0xffff0208

0008252c <sprintf>:
   8252c:	b40e      	push	{r1, r2, r3}
   8252e:	4603      	mov	r3, r0
   82530:	b530      	push	{r4, r5, lr}
   82532:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
   82536:	b09c      	sub	sp, #112	; 0x70
   82538:	a91f      	add	r1, sp, #124	; 0x7c
   8253a:	f851 2b04 	ldr.w	r2, [r1], #4
   8253e:	480a      	ldr	r0, [pc, #40]	; (82568 <sprintf+0x3c>)
   82540:	4d0a      	ldr	r5, [pc, #40]	; (8256c <sprintf+0x40>)
   82542:	9302      	str	r3, [sp, #8]
   82544:	9306      	str	r3, [sp, #24]
   82546:	9101      	str	r1, [sp, #4]
   82548:	460b      	mov	r3, r1
   8254a:	6800      	ldr	r0, [r0, #0]
   8254c:	a902      	add	r1, sp, #8
   8254e:	9407      	str	r4, [sp, #28]
   82550:	e9cd 4504 	strd	r4, r5, [sp, #16]
   82554:	f000 f83a 	bl	825cc <_svfprintf_r>
   82558:	2200      	movs	r2, #0
   8255a:	9b02      	ldr	r3, [sp, #8]
   8255c:	701a      	strb	r2, [r3, #0]
   8255e:	b01c      	add	sp, #112	; 0x70
   82560:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   82564:	b003      	add	sp, #12
   82566:	4770      	bx	lr
   82568:	20070298 	.word	0x20070298
   8256c:	ffff0208 	.word	0xffff0208

00082570 <strlen>:
   82570:	f020 0103 	bic.w	r1, r0, #3
   82574:	f010 0003 	ands.w	r0, r0, #3
   82578:	f1c0 0000 	rsb	r0, r0, #0
   8257c:	f851 3b04 	ldr.w	r3, [r1], #4
   82580:	f100 0c04 	add.w	ip, r0, #4
   82584:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   82588:	f06f 0200 	mvn.w	r2, #0
   8258c:	bf1c      	itt	ne
   8258e:	fa22 f20c 	lsrne.w	r2, r2, ip
   82592:	4313      	orrne	r3, r2
   82594:	f04f 0c01 	mov.w	ip, #1
   82598:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   8259c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   825a0:	eba3 020c 	sub.w	r2, r3, ip
   825a4:	ea22 0203 	bic.w	r2, r2, r3
   825a8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   825ac:	bf04      	itt	eq
   825ae:	f851 3b04 	ldreq.w	r3, [r1], #4
   825b2:	3004      	addeq	r0, #4
   825b4:	d0f4      	beq.n	825a0 <strlen+0x30>
   825b6:	f1c2 0100 	rsb	r1, r2, #0
   825ba:	ea02 0201 	and.w	r2, r2, r1
   825be:	fab2 f282 	clz	r2, r2
   825c2:	f1c2 021f 	rsb	r2, r2, #31
   825c6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   825ca:	4770      	bx	lr

000825cc <_svfprintf_r>:
   825cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   825d0:	b0c3      	sub	sp, #268	; 0x10c
   825d2:	460c      	mov	r4, r1
   825d4:	910c      	str	r1, [sp, #48]	; 0x30
   825d6:	4690      	mov	r8, r2
   825d8:	930f      	str	r3, [sp, #60]	; 0x3c
   825da:	900d      	str	r0, [sp, #52]	; 0x34
   825dc:	f002 fb96 	bl	84d0c <_localeconv_r>
   825e0:	6803      	ldr	r3, [r0, #0]
   825e2:	4618      	mov	r0, r3
   825e4:	931a      	str	r3, [sp, #104]	; 0x68
   825e6:	f7ff ffc3 	bl	82570 <strlen>
   825ea:	89a3      	ldrh	r3, [r4, #12]
   825ec:	9019      	str	r0, [sp, #100]	; 0x64
   825ee:	061d      	lsls	r5, r3, #24
   825f0:	d503      	bpl.n	825fa <_svfprintf_r+0x2e>
   825f2:	6923      	ldr	r3, [r4, #16]
   825f4:	2b00      	cmp	r3, #0
   825f6:	f000 8736 	beq.w	83466 <_svfprintf_r+0xe9a>
   825fa:	2300      	movs	r3, #0
   825fc:	f10d 0ac8 	add.w	sl, sp, #200	; 0xc8
   82600:	46d1      	mov	r9, sl
   82602:	46c3      	mov	fp, r8
   82604:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
   82608:	e9cd 3326 	strd	r3, r3, [sp, #152]	; 0x98
   8260c:	9315      	str	r3, [sp, #84]	; 0x54
   8260e:	9313      	str	r3, [sp, #76]	; 0x4c
   82610:	9314      	str	r3, [sp, #80]	; 0x50
   82612:	9318      	str	r3, [sp, #96]	; 0x60
   82614:	931b      	str	r3, [sp, #108]	; 0x6c
   82616:	930a      	str	r3, [sp, #40]	; 0x28
   82618:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
   8261c:	f89b 3000 	ldrb.w	r3, [fp]
   82620:	2b00      	cmp	r3, #0
   82622:	f000 8097 	beq.w	82754 <_svfprintf_r+0x188>
   82626:	2b25      	cmp	r3, #37	; 0x25
   82628:	465c      	mov	r4, fp
   8262a:	d102      	bne.n	82632 <_svfprintf_r+0x66>
   8262c:	e01a      	b.n	82664 <_svfprintf_r+0x98>
   8262e:	2b25      	cmp	r3, #37	; 0x25
   82630:	d003      	beq.n	8263a <_svfprintf_r+0x6e>
   82632:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   82636:	2b00      	cmp	r3, #0
   82638:	d1f9      	bne.n	8262e <_svfprintf_r+0x62>
   8263a:	eba4 050b 	sub.w	r5, r4, fp
   8263e:	b175      	cbz	r5, 8265e <_svfprintf_r+0x92>
   82640:	e9dd 3226 	ldrd	r3, r2, [sp, #152]	; 0x98
   82644:	3301      	adds	r3, #1
   82646:	442a      	add	r2, r5
   82648:	2b07      	cmp	r3, #7
   8264a:	e9c9 b500 	strd	fp, r5, [r9]
   8264e:	e9cd 3226 	strd	r3, r2, [sp, #152]	; 0x98
   82652:	dc77      	bgt.n	82744 <_svfprintf_r+0x178>
   82654:	f109 0908 	add.w	r9, r9, #8
   82658:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8265a:	442b      	add	r3, r5
   8265c:	930a      	str	r3, [sp, #40]	; 0x28
   8265e:	7823      	ldrb	r3, [r4, #0]
   82660:	2b00      	cmp	r3, #0
   82662:	d077      	beq.n	82754 <_svfprintf_r+0x188>
   82664:	2300      	movs	r3, #0
   82666:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   8266a:	461a      	mov	r2, r3
   8266c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82670:	4619      	mov	r1, r3
   82672:	930b      	str	r3, [sp, #44]	; 0x2c
   82674:	4698      	mov	r8, r3
   82676:	7863      	ldrb	r3, [r4, #1]
   82678:	f104 0b01 	add.w	fp, r4, #1
   8267c:	9009      	str	r0, [sp, #36]	; 0x24
   8267e:	461f      	mov	r7, r3
   82680:	f10b 0b01 	add.w	fp, fp, #1
   82684:	f1a7 0320 	sub.w	r3, r7, #32
   82688:	2b58      	cmp	r3, #88	; 0x58
   8268a:	f200 8374 	bhi.w	82d76 <_svfprintf_r+0x7aa>
   8268e:	e8df f013 	tbh	[pc, r3, lsl #1]
   82692:	02d1      	.short	0x02d1
   82694:	03720372 	.word	0x03720372
   82698:	037202cc 	.word	0x037202cc
   8269c:	03720372 	.word	0x03720372
   826a0:	03720372 	.word	0x03720372
   826a4:	02bf0372 	.word	0x02bf0372
   826a8:	037202ba 	.word	0x037202ba
   826ac:	034c0366 	.word	0x034c0366
   826b0:	036b0372 	.word	0x036b0372
   826b4:	00b600b6 	.word	0x00b600b6
   826b8:	00b600b6 	.word	0x00b600b6
   826bc:	00b600b6 	.word	0x00b600b6
   826c0:	00b600b6 	.word	0x00b600b6
   826c4:	037200b6 	.word	0x037200b6
   826c8:	03720372 	.word	0x03720372
   826cc:	03720372 	.word	0x03720372
   826d0:	03720372 	.word	0x03720372
   826d4:	03720372 	.word	0x03720372
   826d8:	03340372 	.word	0x03340372
   826dc:	037202f5 	.word	0x037202f5
   826e0:	037202f5 	.word	0x037202f5
   826e4:	03720372 	.word	0x03720372
   826e8:	02f00372 	.word	0x02f00372
   826ec:	03720372 	.word	0x03720372
   826f0:	037200a5 	.word	0x037200a5
   826f4:	03720372 	.word	0x03720372
   826f8:	03720372 	.word	0x03720372
   826fc:	03720075 	.word	0x03720075
   82700:	02980372 	.word	0x02980372
   82704:	03720372 	.word	0x03720372
   82708:	03720372 	.word	0x03720372
   8270c:	03720372 	.word	0x03720372
   82710:	03720372 	.word	0x03720372
   82714:	03720372 	.word	0x03720372
   82718:	012b0179 	.word	0x012b0179
   8271c:	02f502f5 	.word	0x02f502f5
   82720:	012602f5 	.word	0x012602f5
   82724:	0372012b 	.word	0x0372012b
   82728:	01190372 	.word	0x01190372
   8272c:	01030372 	.word	0x01030372
   82730:	00ca00a7 	.word	0x00ca00a7
   82734:	037200c5 	.word	0x037200c5
   82738:	037200da 	.word	0x037200da
   8273c:	03720077 	.word	0x03720077
   82740:	02d90372 	.word	0x02d90372
   82744:	aa25      	add	r2, sp, #148	; 0x94
   82746:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8274a:	f003 fd0d 	bl	86168 <__ssprint_r>
   8274e:	b940      	cbnz	r0, 82762 <_svfprintf_r+0x196>
   82750:	46d1      	mov	r9, sl
   82752:	e781      	b.n	82658 <_svfprintf_r+0x8c>
   82754:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   82756:	b123      	cbz	r3, 82762 <_svfprintf_r+0x196>
   82758:	980d      	ldr	r0, [sp, #52]	; 0x34
   8275a:	aa25      	add	r2, sp, #148	; 0x94
   8275c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8275e:	f003 fd03 	bl	86168 <__ssprint_r>
   82762:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82764:	899b      	ldrh	r3, [r3, #12]
   82766:	f013 0f40 	tst.w	r3, #64	; 0x40
   8276a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8276c:	bf18      	it	ne
   8276e:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
   82772:	930a      	str	r3, [sp, #40]	; 0x28
   82774:	980a      	ldr	r0, [sp, #40]	; 0x28
   82776:	b043      	add	sp, #268	; 0x10c
   82778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8277c:	f048 0810 	orr.w	r8, r8, #16
   82780:	f018 0f20 	tst.w	r8, #32
   82784:	f000 8548 	beq.w	83218 <_svfprintf_r+0xc4c>
   82788:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8278a:	3407      	adds	r4, #7
   8278c:	f024 0307 	bic.w	r3, r4, #7
   82790:	f103 0208 	add.w	r2, r3, #8
   82794:	e9d3 4500 	ldrd	r4, r5, [r3]
   82798:	2301      	movs	r3, #1
   8279a:	920f      	str	r2, [sp, #60]	; 0x3c
   8279c:	2600      	movs	r6, #0
   8279e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   827a0:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
   827a4:	3201      	adds	r2, #1
   827a6:	f000 8409 	beq.w	82fbc <_svfprintf_r+0x9f0>
   827aa:	f028 0280 	bic.w	r2, r8, #128	; 0x80
   827ae:	9207      	str	r2, [sp, #28]
   827b0:	ea54 0205 	orrs.w	r2, r4, r5
   827b4:	f040 80bc 	bne.w	82930 <_svfprintf_r+0x364>
   827b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   827ba:	2a00      	cmp	r2, #0
   827bc:	f040 86cc 	bne.w	83558 <_svfprintf_r+0xf8c>
   827c0:	2b00      	cmp	r3, #0
   827c2:	f040 84ed 	bne.w	831a0 <_svfprintf_r+0xbd4>
   827c6:	f018 0301 	ands.w	r3, r8, #1
   827ca:	930e      	str	r3, [sp, #56]	; 0x38
   827cc:	f000 8560 	beq.w	83290 <_svfprintf_r+0xcc4>
   827d0:	2330      	movs	r3, #48	; 0x30
   827d2:	aa42      	add	r2, sp, #264	; 0x108
   827d4:	f802 3d41 	strb.w	r3, [r2, #-65]!
   827d8:	9211      	str	r2, [sp, #68]	; 0x44
   827da:	e0ca      	b.n	82972 <_svfprintf_r+0x3a6>
   827dc:	f048 0810 	orr.w	r8, r8, #16
   827e0:	f018 0320 	ands.w	r3, r8, #32
   827e4:	f000 850d 	beq.w	83202 <_svfprintf_r+0xc36>
   827e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   827ea:	3407      	adds	r4, #7
   827ec:	f024 0307 	bic.w	r3, r4, #7
   827f0:	f103 0208 	add.w	r2, r3, #8
   827f4:	e9d3 4500 	ldrd	r4, r5, [r3]
   827f8:	920f      	str	r2, [sp, #60]	; 0x3c
   827fa:	2300      	movs	r3, #0
   827fc:	e7ce      	b.n	8279c <_svfprintf_r+0x1d0>
   827fe:	2000      	movs	r0, #0
   82800:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   82804:	f81b 7b01 	ldrb.w	r7, [fp], #1
   82808:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   8280c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
   82810:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   82814:	2b09      	cmp	r3, #9
   82816:	d9f5      	bls.n	82804 <_svfprintf_r+0x238>
   82818:	900b      	str	r0, [sp, #44]	; 0x2c
   8281a:	e733      	b.n	82684 <_svfprintf_r+0xb8>
   8281c:	f048 0820 	orr.w	r8, r8, #32
   82820:	f89b 3000 	ldrb.w	r3, [fp]
   82824:	e72b      	b.n	8267e <_svfprintf_r+0xb2>
   82826:	f647 0330 	movw	r3, #30768	; 0x7830
   8282a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8282c:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
   82830:	1d13      	adds	r3, r2, #4
   82832:	930f      	str	r3, [sp, #60]	; 0x3c
   82834:	4b9f      	ldr	r3, [pc, #636]	; (82ab4 <_svfprintf_r+0x4e8>)
   82836:	6814      	ldr	r4, [r2, #0]
   82838:	9318      	str	r3, [sp, #96]	; 0x60
   8283a:	f048 0802 	orr.w	r8, r8, #2
   8283e:	2500      	movs	r5, #0
   82840:	2302      	movs	r3, #2
   82842:	2778      	movs	r7, #120	; 0x78
   82844:	e7aa      	b.n	8279c <_svfprintf_r+0x1d0>
   82846:	2500      	movs	r5, #0
   82848:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8284a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   8284e:	6813      	ldr	r3, [r2, #0]
   82850:	1d14      	adds	r4, r2, #4
   82852:	9311      	str	r3, [sp, #68]	; 0x44
   82854:	2b00      	cmp	r3, #0
   82856:	f000 8630 	beq.w	834ba <_svfprintf_r+0xeee>
   8285a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8285c:	1c53      	adds	r3, r2, #1
   8285e:	f000 86d8 	beq.w	83612 <_svfprintf_r+0x1046>
   82862:	4629      	mov	r1, r5
   82864:	9811      	ldr	r0, [sp, #68]	; 0x44
   82866:	f002 fd1d 	bl	852a4 <memchr>
   8286a:	2800      	cmp	r0, #0
   8286c:	f000 87ce 	beq.w	8380c <_svfprintf_r+0x1240>
   82870:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82872:	9509      	str	r5, [sp, #36]	; 0x24
   82874:	1ac3      	subs	r3, r0, r3
   82876:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
   8287a:	f8cd 801c 	str.w	r8, [sp, #28]
   8287e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82882:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   82886:	9308      	str	r3, [sp, #32]
   82888:	9512      	str	r5, [sp, #72]	; 0x48
   8288a:	2e00      	cmp	r6, #0
   8288c:	f000 808d 	beq.w	829aa <_svfprintf_r+0x3de>
   82890:	9b08      	ldr	r3, [sp, #32]
   82892:	3301      	adds	r3, #1
   82894:	9308      	str	r3, [sp, #32]
   82896:	e088      	b.n	829aa <_svfprintf_r+0x3de>
   82898:	2a00      	cmp	r2, #0
   8289a:	f041 80ef 	bne.w	83a7c <_svfprintf_r+0x14b0>
   8289e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   828a0:	f018 0f20 	tst.w	r8, #32
   828a4:	f852 3b04 	ldr.w	r3, [r2], #4
   828a8:	920f      	str	r2, [sp, #60]	; 0x3c
   828aa:	f040 852a 	bne.w	83302 <_svfprintf_r+0xd36>
   828ae:	f018 0f10 	tst.w	r8, #16
   828b2:	f040 8627 	bne.w	83504 <_svfprintf_r+0xf38>
   828b6:	f018 0f40 	tst.w	r8, #64	; 0x40
   828ba:	f000 8623 	beq.w	83504 <_svfprintf_r+0xf38>
   828be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   828c0:	801a      	strh	r2, [r3, #0]
   828c2:	e6ab      	b.n	8261c <_svfprintf_r+0x50>
   828c4:	f89b 3000 	ldrb.w	r3, [fp]
   828c8:	2b6c      	cmp	r3, #108	; 0x6c
   828ca:	bf03      	ittte	eq
   828cc:	f89b 3001 	ldrbeq.w	r3, [fp, #1]
   828d0:	f048 0820 	orreq.w	r8, r8, #32
   828d4:	f10b 0b01 	addeq.w	fp, fp, #1
   828d8:	f048 0810 	orrne.w	r8, r8, #16
   828dc:	e6cf      	b.n	8267e <_svfprintf_r+0xb2>
   828de:	f048 0840 	orr.w	r8, r8, #64	; 0x40
   828e2:	f89b 3000 	ldrb.w	r3, [fp]
   828e6:	e6ca      	b.n	8267e <_svfprintf_r+0xb2>
   828e8:	2a00      	cmp	r2, #0
   828ea:	f041 80c3 	bne.w	83a74 <_svfprintf_r+0x14a8>
   828ee:	f018 0f20 	tst.w	r8, #32
   828f2:	f000 820b 	beq.w	82d0c <_svfprintf_r+0x740>
   828f6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   828f8:	3407      	adds	r4, #7
   828fa:	f024 0307 	bic.w	r3, r4, #7
   828fe:	f103 0208 	add.w	r2, r3, #8
   82902:	920f      	str	r2, [sp, #60]	; 0x3c
   82904:	e9d3 4500 	ldrd	r4, r5, [r3]
   82908:	2c00      	cmp	r4, #0
   8290a:	f175 0300 	sbcs.w	r3, r5, #0
   8290e:	f2c0 84cb 	blt.w	832a8 <_svfprintf_r+0xcdc>
   82912:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82914:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   82918:	3301      	adds	r3, #1
   8291a:	f000 84cf 	beq.w	832bc <_svfprintf_r+0xcf0>
   8291e:	f028 0280 	bic.w	r2, r8, #128	; 0x80
   82922:	9207      	str	r2, [sp, #28]
   82924:	ea54 0205 	orrs.w	r2, r4, r5
   82928:	f04f 0301 	mov.w	r3, #1
   8292c:	f43f af44 	beq.w	827b8 <_svfprintf_r+0x1ec>
   82930:	2b01      	cmp	r3, #1
   82932:	f000 8348 	beq.w	82fc6 <_svfprintf_r+0x9fa>
   82936:	2b02      	cmp	r3, #2
   82938:	f000 839f 	beq.w	8307a <_svfprintf_r+0xaae>
   8293c:	4651      	mov	r1, sl
   8293e:	e000      	b.n	82942 <_svfprintf_r+0x376>
   82940:	4611      	mov	r1, r2
   82942:	08e2      	lsrs	r2, r4, #3
   82944:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   82948:	08e8      	lsrs	r0, r5, #3
   8294a:	f004 0307 	and.w	r3, r4, #7
   8294e:	4605      	mov	r5, r0
   82950:	4614      	mov	r4, r2
   82952:	3330      	adds	r3, #48	; 0x30
   82954:	ea54 0005 	orrs.w	r0, r4, r5
   82958:	f801 3c01 	strb.w	r3, [r1, #-1]
   8295c:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   82960:	d1ee      	bne.n	82940 <_svfprintf_r+0x374>
   82962:	9807      	ldr	r0, [sp, #28]
   82964:	9211      	str	r2, [sp, #68]	; 0x44
   82966:	07c0      	lsls	r0, r0, #31
   82968:	f100 8475 	bmi.w	83256 <_svfprintf_r+0xc8a>
   8296c:	ebaa 0302 	sub.w	r3, sl, r2
   82970:	930e      	str	r3, [sp, #56]	; 0x38
   82972:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82974:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82976:	4293      	cmp	r3, r2
   82978:	bfb8      	it	lt
   8297a:	4613      	movlt	r3, r2
   8297c:	9308      	str	r3, [sp, #32]
   8297e:	2300      	movs	r3, #0
   82980:	9312      	str	r3, [sp, #72]	; 0x48
   82982:	e782      	b.n	8288a <_svfprintf_r+0x2be>
   82984:	2300      	movs	r3, #0
   82986:	2101      	movs	r1, #1
   82988:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8298a:	461e      	mov	r6, r3
   8298c:	6802      	ldr	r2, [r0, #0]
   8298e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82992:	9309      	str	r3, [sp, #36]	; 0x24
   82994:	9312      	str	r3, [sp, #72]	; 0x48
   82996:	1d03      	adds	r3, r0, #4
   82998:	930f      	str	r3, [sp, #60]	; 0x3c
   8299a:	ab28      	add	r3, sp, #160	; 0xa0
   8299c:	9108      	str	r1, [sp, #32]
   8299e:	f8cd 801c 	str.w	r8, [sp, #28]
   829a2:	910e      	str	r1, [sp, #56]	; 0x38
   829a4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   829a8:	9311      	str	r3, [sp, #68]	; 0x44
   829aa:	9b07      	ldr	r3, [sp, #28]
   829ac:	f013 0302 	ands.w	r3, r3, #2
   829b0:	9310      	str	r3, [sp, #64]	; 0x40
   829b2:	d002      	beq.n	829ba <_svfprintf_r+0x3ee>
   829b4:	9b08      	ldr	r3, [sp, #32]
   829b6:	3302      	adds	r3, #2
   829b8:	9308      	str	r3, [sp, #32]
   829ba:	9b07      	ldr	r3, [sp, #28]
   829bc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   829be:	f013 0884 	ands.w	r8, r3, #132	; 0x84
   829c2:	d13f      	bne.n	82a44 <_svfprintf_r+0x478>
   829c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   829c6:	9a08      	ldr	r2, [sp, #32]
   829c8:	1a9d      	subs	r5, r3, r2
   829ca:	2d00      	cmp	r5, #0
   829cc:	dd3a      	ble.n	82a44 <_svfprintf_r+0x478>
   829ce:	2d10      	cmp	r5, #16
   829d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   829d2:	dd29      	ble.n	82a28 <_svfprintf_r+0x45c>
   829d4:	464a      	mov	r2, r9
   829d6:	4621      	mov	r1, r4
   829d8:	46a9      	mov	r9, r5
   829da:	e9dd 540c 	ldrd	r5, r4, [sp, #48]	; 0x30
   829de:	2610      	movs	r6, #16
   829e0:	e006      	b.n	829f0 <_svfprintf_r+0x424>
   829e2:	f1a9 0910 	sub.w	r9, r9, #16
   829e6:	f1b9 0f10 	cmp.w	r9, #16
   829ea:	f102 0208 	add.w	r2, r2, #8
   829ee:	dd18      	ble.n	82a22 <_svfprintf_r+0x456>
   829f0:	3301      	adds	r3, #1
   829f2:	4831      	ldr	r0, [pc, #196]	; (82ab8 <_svfprintf_r+0x4ec>)
   829f4:	3110      	adds	r1, #16
   829f6:	2b07      	cmp	r3, #7
   829f8:	e9cd 3126 	strd	r3, r1, [sp, #152]	; 0x98
   829fc:	e9c2 0600 	strd	r0, r6, [r2]
   82a00:	ddef      	ble.n	829e2 <_svfprintf_r+0x416>
   82a02:	aa25      	add	r2, sp, #148	; 0x94
   82a04:	4629      	mov	r1, r5
   82a06:	4620      	mov	r0, r4
   82a08:	f003 fbae 	bl	86168 <__ssprint_r>
   82a0c:	2800      	cmp	r0, #0
   82a0e:	f47f aea8 	bne.w	82762 <_svfprintf_r+0x196>
   82a12:	e9dd 3126 	ldrd	r3, r1, [sp, #152]	; 0x98
   82a16:	f1a9 0910 	sub.w	r9, r9, #16
   82a1a:	f1b9 0f10 	cmp.w	r9, #16
   82a1e:	4652      	mov	r2, sl
   82a20:	dce6      	bgt.n	829f0 <_svfprintf_r+0x424>
   82a22:	464d      	mov	r5, r9
   82a24:	460c      	mov	r4, r1
   82a26:	4691      	mov	r9, r2
   82a28:	3301      	adds	r3, #1
   82a2a:	4a23      	ldr	r2, [pc, #140]	; (82ab8 <_svfprintf_r+0x4ec>)
   82a2c:	442c      	add	r4, r5
   82a2e:	2b07      	cmp	r3, #7
   82a30:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   82a34:	e9c9 2500 	strd	r2, r5, [r9]
   82a38:	f300 8568 	bgt.w	8350c <_svfprintf_r+0xf40>
   82a3c:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   82a40:	f109 0908 	add.w	r9, r9, #8
   82a44:	b176      	cbz	r6, 82a64 <_svfprintf_r+0x498>
   82a46:	2101      	movs	r1, #1
   82a48:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a4a:	440c      	add	r4, r1
   82a4c:	440b      	add	r3, r1
   82a4e:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   82a52:	2b07      	cmp	r3, #7
   82a54:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   82a58:	e9c9 2100 	strd	r2, r1, [r9]
   82a5c:	f300 82f7 	bgt.w	8304e <_svfprintf_r+0xa82>
   82a60:	f109 0908 	add.w	r9, r9, #8
   82a64:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82a66:	b16b      	cbz	r3, 82a84 <_svfprintf_r+0x4b8>
   82a68:	2102      	movs	r1, #2
   82a6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a6c:	440c      	add	r4, r1
   82a6e:	3301      	adds	r3, #1
   82a70:	aa1e      	add	r2, sp, #120	; 0x78
   82a72:	2b07      	cmp	r3, #7
   82a74:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   82a78:	e9c9 2100 	strd	r2, r1, [r9]
   82a7c:	f300 82f2 	bgt.w	83064 <_svfprintf_r+0xa98>
   82a80:	f109 0908 	add.w	r9, r9, #8
   82a84:	f1b8 0f80 	cmp.w	r8, #128	; 0x80
   82a88:	f000 81e5 	beq.w	82e56 <_svfprintf_r+0x88a>
   82a8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82a8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82a90:	1a9d      	subs	r5, r3, r2
   82a92:	2d00      	cmp	r5, #0
   82a94:	dd3f      	ble.n	82b16 <_svfprintf_r+0x54a>
   82a96:	2d10      	cmp	r5, #16
   82a98:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82a9a:	f340 8592 	ble.w	835c2 <_svfprintf_r+0xff6>
   82a9e:	f8df 801c 	ldr.w	r8, [pc, #28]	; 82abc <_svfprintf_r+0x4f0>
   82aa2:	464b      	mov	r3, r9
   82aa4:	4640      	mov	r0, r8
   82aa6:	4621      	mov	r1, r4
   82aa8:	e9dd 940c 	ldrd	r9, r4, [sp, #48]	; 0x30
   82aac:	46b8      	mov	r8, r7
   82aae:	2610      	movs	r6, #16
   82ab0:	4607      	mov	r7, r0
   82ab2:	e00a      	b.n	82aca <_svfprintf_r+0x4fe>
   82ab4:	000876fc 	.word	0x000876fc
   82ab8:	000876b8 	.word	0x000876b8
   82abc:	000876c8 	.word	0x000876c8
   82ac0:	3d10      	subs	r5, #16
   82ac2:	2d10      	cmp	r5, #16
   82ac4:	f103 0308 	add.w	r3, r3, #8
   82ac8:	dd15      	ble.n	82af6 <_svfprintf_r+0x52a>
   82aca:	3201      	adds	r2, #1
   82acc:	3110      	adds	r1, #16
   82ace:	2a07      	cmp	r2, #7
   82ad0:	e9cd 2126 	strd	r2, r1, [sp, #152]	; 0x98
   82ad4:	e9c3 7600 	strd	r7, r6, [r3]
   82ad8:	ddf2      	ble.n	82ac0 <_svfprintf_r+0x4f4>
   82ada:	aa25      	add	r2, sp, #148	; 0x94
   82adc:	4649      	mov	r1, r9
   82ade:	4620      	mov	r0, r4
   82ae0:	f003 fb42 	bl	86168 <__ssprint_r>
   82ae4:	2800      	cmp	r0, #0
   82ae6:	f47f ae3c 	bne.w	82762 <_svfprintf_r+0x196>
   82aea:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
   82aee:	3d10      	subs	r5, #16
   82af0:	2d10      	cmp	r5, #16
   82af2:	4653      	mov	r3, sl
   82af4:	dce9      	bgt.n	82aca <_svfprintf_r+0x4fe>
   82af6:	4699      	mov	r9, r3
   82af8:	463b      	mov	r3, r7
   82afa:	460c      	mov	r4, r1
   82afc:	4647      	mov	r7, r8
   82afe:	4698      	mov	r8, r3
   82b00:	3201      	adds	r2, #1
   82b02:	442c      	add	r4, r5
   82b04:	2a07      	cmp	r2, #7
   82b06:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   82b0a:	e9c9 8500 	strd	r8, r5, [r9]
   82b0e:	f300 82cb 	bgt.w	830a8 <_svfprintf_r+0xadc>
   82b12:	f109 0908 	add.w	r9, r9, #8
   82b16:	9b07      	ldr	r3, [sp, #28]
   82b18:	05de      	lsls	r6, r3, #23
   82b1a:	f100 8142 	bmi.w	82da2 <_svfprintf_r+0x7d6>
   82b1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82b20:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82b22:	3301      	adds	r3, #1
   82b24:	9911      	ldr	r1, [sp, #68]	; 0x44
   82b26:	4414      	add	r4, r2
   82b28:	2b07      	cmp	r3, #7
   82b2a:	9427      	str	r4, [sp, #156]	; 0x9c
   82b2c:	e9c9 1200 	strd	r1, r2, [r9]
   82b30:	9326      	str	r3, [sp, #152]	; 0x98
   82b32:	f300 8281 	bgt.w	83038 <_svfprintf_r+0xa6c>
   82b36:	f109 0908 	add.w	r9, r9, #8
   82b3a:	9b07      	ldr	r3, [sp, #28]
   82b3c:	075b      	lsls	r3, r3, #29
   82b3e:	d531      	bpl.n	82ba4 <_svfprintf_r+0x5d8>
   82b40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82b42:	9a08      	ldr	r2, [sp, #32]
   82b44:	1a9d      	subs	r5, r3, r2
   82b46:	2d00      	cmp	r5, #0
   82b48:	dd2c      	ble.n	82ba4 <_svfprintf_r+0x5d8>
   82b4a:	2d10      	cmp	r5, #16
   82b4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82b4e:	dd1f      	ble.n	82b90 <_svfprintf_r+0x5c4>
   82b50:	e9dd 870c 	ldrd	r8, r7, [sp, #48]	; 0x30
   82b54:	2610      	movs	r6, #16
   82b56:	e004      	b.n	82b62 <_svfprintf_r+0x596>
   82b58:	3d10      	subs	r5, #16
   82b5a:	2d10      	cmp	r5, #16
   82b5c:	f109 0908 	add.w	r9, r9, #8
   82b60:	dd16      	ble.n	82b90 <_svfprintf_r+0x5c4>
   82b62:	3301      	adds	r3, #1
   82b64:	4ac6      	ldr	r2, [pc, #792]	; (82e80 <_svfprintf_r+0x8b4>)
   82b66:	3410      	adds	r4, #16
   82b68:	2b07      	cmp	r3, #7
   82b6a:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   82b6e:	e9c9 2600 	strd	r2, r6, [r9]
   82b72:	ddf1      	ble.n	82b58 <_svfprintf_r+0x58c>
   82b74:	aa25      	add	r2, sp, #148	; 0x94
   82b76:	4641      	mov	r1, r8
   82b78:	4638      	mov	r0, r7
   82b7a:	f003 faf5 	bl	86168 <__ssprint_r>
   82b7e:	2800      	cmp	r0, #0
   82b80:	f47f adef 	bne.w	82762 <_svfprintf_r+0x196>
   82b84:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
   82b88:	3d10      	subs	r5, #16
   82b8a:	2d10      	cmp	r5, #16
   82b8c:	46d1      	mov	r9, sl
   82b8e:	dce8      	bgt.n	82b62 <_svfprintf_r+0x596>
   82b90:	3301      	adds	r3, #1
   82b92:	4abb      	ldr	r2, [pc, #748]	; (82e80 <_svfprintf_r+0x8b4>)
   82b94:	442c      	add	r4, r5
   82b96:	2b07      	cmp	r3, #7
   82b98:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   82b9c:	e9c9 2500 	strd	r2, r5, [r9]
   82ba0:	f300 836c 	bgt.w	8327c <_svfprintf_r+0xcb0>
   82ba4:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	; 0x28
   82ba8:	9908      	ldr	r1, [sp, #32]
   82baa:	428a      	cmp	r2, r1
   82bac:	bfac      	ite	ge
   82bae:	189b      	addge	r3, r3, r2
   82bb0:	185b      	addlt	r3, r3, r1
   82bb2:	930a      	str	r3, [sp, #40]	; 0x28
   82bb4:	2c00      	cmp	r4, #0
   82bb6:	f040 819f 	bne.w	82ef8 <_svfprintf_r+0x92c>
   82bba:	2300      	movs	r3, #0
   82bbc:	46d1      	mov	r9, sl
   82bbe:	9326      	str	r3, [sp, #152]	; 0x98
   82bc0:	e52c      	b.n	8261c <_svfprintf_r+0x50>
   82bc2:	2a00      	cmp	r2, #0
   82bc4:	f040 876a 	bne.w	83a9c <_svfprintf_r+0x14d0>
   82bc8:	4bae      	ldr	r3, [pc, #696]	; (82e84 <_svfprintf_r+0x8b8>)
   82bca:	f018 0f20 	tst.w	r8, #32
   82bce:	9318      	str	r3, [sp, #96]	; 0x60
   82bd0:	d040      	beq.n	82c54 <_svfprintf_r+0x688>
   82bd2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82bd4:	3407      	adds	r4, #7
   82bd6:	f024 0307 	bic.w	r3, r4, #7
   82bda:	f103 0208 	add.w	r2, r3, #8
   82bde:	920f      	str	r2, [sp, #60]	; 0x3c
   82be0:	e9d3 4500 	ldrd	r4, r5, [r3]
   82be4:	f018 0f01 	tst.w	r8, #1
   82be8:	f000 80c3 	beq.w	82d72 <_svfprintf_r+0x7a6>
   82bec:	ea54 0305 	orrs.w	r3, r4, r5
   82bf0:	f000 80bf 	beq.w	82d72 <_svfprintf_r+0x7a6>
   82bf4:	2330      	movs	r3, #48	; 0x30
   82bf6:	f88d 7079 	strb.w	r7, [sp, #121]	; 0x79
   82bfa:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   82bfe:	f048 0802 	orr.w	r8, r8, #2
   82c02:	2302      	movs	r3, #2
   82c04:	e5ca      	b.n	8279c <_svfprintf_r+0x1d0>
   82c06:	f89b 3000 	ldrb.w	r3, [fp]
   82c0a:	2201      	movs	r2, #1
   82c0c:	212b      	movs	r1, #43	; 0x2b
   82c0e:	e536      	b.n	8267e <_svfprintf_r+0xb2>
   82c10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82c12:	681c      	ldr	r4, [r3, #0]
   82c14:	1d18      	adds	r0, r3, #4
   82c16:	2c00      	cmp	r4, #0
   82c18:	940b      	str	r4, [sp, #44]	; 0x2c
   82c1a:	f89b 3000 	ldrb.w	r3, [fp]
   82c1e:	900f      	str	r0, [sp, #60]	; 0x3c
   82c20:	f6bf ad2d 	bge.w	8267e <_svfprintf_r+0xb2>
   82c24:	4260      	negs	r0, r4
   82c26:	900b      	str	r0, [sp, #44]	; 0x2c
   82c28:	e09b      	b.n	82d62 <_svfprintf_r+0x796>
   82c2a:	f048 0801 	orr.w	r8, r8, #1
   82c2e:	f89b 3000 	ldrb.w	r3, [fp]
   82c32:	e524      	b.n	8267e <_svfprintf_r+0xb2>
   82c34:	f89b 3000 	ldrb.w	r3, [fp]
   82c38:	2900      	cmp	r1, #0
   82c3a:	f47f ad20 	bne.w	8267e <_svfprintf_r+0xb2>
   82c3e:	2201      	movs	r2, #1
   82c40:	2120      	movs	r1, #32
   82c42:	e51c      	b.n	8267e <_svfprintf_r+0xb2>
   82c44:	2a00      	cmp	r2, #0
   82c46:	f040 8721 	bne.w	83a8c <_svfprintf_r+0x14c0>
   82c4a:	4b8f      	ldr	r3, [pc, #572]	; (82e88 <_svfprintf_r+0x8bc>)
   82c4c:	f018 0f20 	tst.w	r8, #32
   82c50:	9318      	str	r3, [sp, #96]	; 0x60
   82c52:	d1be      	bne.n	82bd2 <_svfprintf_r+0x606>
   82c54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82c56:	f018 0f10 	tst.w	r8, #16
   82c5a:	f853 4b04 	ldr.w	r4, [r3], #4
   82c5e:	930f      	str	r3, [sp, #60]	; 0x3c
   82c60:	f040 831a 	bne.w	83298 <_svfprintf_r+0xccc>
   82c64:	f018 0f40 	tst.w	r8, #64	; 0x40
   82c68:	f000 8316 	beq.w	83298 <_svfprintf_r+0xccc>
   82c6c:	b2a4      	uxth	r4, r4
   82c6e:	2500      	movs	r5, #0
   82c70:	e7b8      	b.n	82be4 <_svfprintf_r+0x618>
   82c72:	f048 0808 	orr.w	r8, r8, #8
   82c76:	f89b 3000 	ldrb.w	r3, [fp]
   82c7a:	e500      	b.n	8267e <_svfprintf_r+0xb2>
   82c7c:	2a00      	cmp	r2, #0
   82c7e:	f040 86ed 	bne.w	83a5c <_svfprintf_r+0x1490>
   82c82:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82c84:	3407      	adds	r4, #7
   82c86:	f024 0607 	bic.w	r6, r4, #7
   82c8a:	e9d6 2300 	ldrd	r2, r3, [r6]
   82c8e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   82c92:	9215      	str	r2, [sp, #84]	; 0x54
   82c94:	4615      	mov	r5, r2
   82c96:	4610      	mov	r0, r2
   82c98:	9314      	str	r3, [sp, #80]	; 0x50
   82c9a:	3608      	adds	r6, #8
   82c9c:	4621      	mov	r1, r4
   82c9e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   82ca2:	4b7a      	ldr	r3, [pc, #488]	; (82e8c <_svfprintf_r+0x8c0>)
   82ca4:	960f      	str	r6, [sp, #60]	; 0x3c
   82ca6:	f004 fcb1 	bl	8760c <__aeabi_dcmpun>
   82caa:	2800      	cmp	r0, #0
   82cac:	f040 8340 	bne.w	83330 <_svfprintf_r+0xd64>
   82cb0:	4628      	mov	r0, r5
   82cb2:	4621      	mov	r1, r4
   82cb4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   82cb8:	4b74      	ldr	r3, [pc, #464]	; (82e8c <_svfprintf_r+0x8c0>)
   82cba:	f004 fc89 	bl	875d0 <__aeabi_dcmple>
   82cbe:	2800      	cmp	r0, #0
   82cc0:	f040 8336 	bne.w	83330 <_svfprintf_r+0xd64>
   82cc4:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
   82cc8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82cca:	9914      	ldr	r1, [sp, #80]	; 0x50
   82ccc:	f004 fc76 	bl	875bc <__aeabi_dcmplt>
   82cd0:	2800      	cmp	r0, #0
   82cd2:	f040 852f 	bne.w	83734 <_svfprintf_r+0x1168>
   82cd6:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   82cda:	2103      	movs	r1, #3
   82cdc:	2000      	movs	r0, #0
   82cde:	e9cd 1008 	strd	r1, r0, [sp, #32]
   82ce2:	4a6b      	ldr	r2, [pc, #428]	; (82e90 <_svfprintf_r+0x8c4>)
   82ce4:	4b6b      	ldr	r3, [pc, #428]	; (82e94 <_svfprintf_r+0x8c8>)
   82ce6:	2f47      	cmp	r7, #71	; 0x47
   82ce8:	bfd8      	it	le
   82cea:	461a      	movle	r2, r3
   82cec:	f028 0480 	bic.w	r4, r8, #128	; 0x80
   82cf0:	9407      	str	r4, [sp, #28]
   82cf2:	910e      	str	r1, [sp, #56]	; 0x38
   82cf4:	9012      	str	r0, [sp, #72]	; 0x48
   82cf6:	9211      	str	r2, [sp, #68]	; 0x44
   82cf8:	e5c7      	b.n	8288a <_svfprintf_r+0x2be>
   82cfa:	2a00      	cmp	r2, #0
   82cfc:	f040 86c2 	bne.w	83a84 <_svfprintf_r+0x14b8>
   82d00:	f048 0810 	orr.w	r8, r8, #16
   82d04:	f018 0f20 	tst.w	r8, #32
   82d08:	f47f adf5 	bne.w	828f6 <_svfprintf_r+0x32a>
   82d0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82d0e:	f018 0f10 	tst.w	r8, #16
   82d12:	f853 4b04 	ldr.w	r4, [r3], #4
   82d16:	930f      	str	r3, [sp, #60]	; 0x3c
   82d18:	f040 82c0 	bne.w	8329c <_svfprintf_r+0xcd0>
   82d1c:	f018 0f40 	tst.w	r8, #64	; 0x40
   82d20:	f000 82bc 	beq.w	8329c <_svfprintf_r+0xcd0>
   82d24:	b224      	sxth	r4, r4
   82d26:	17e5      	asrs	r5, r4, #31
   82d28:	e5ee      	b.n	82908 <_svfprintf_r+0x33c>
   82d2a:	f89b 7000 	ldrb.w	r7, [fp]
   82d2e:	f10b 0001 	add.w	r0, fp, #1
   82d32:	2f2a      	cmp	r7, #42	; 0x2a
   82d34:	f000 867d 	beq.w	83a32 <_svfprintf_r+0x1466>
   82d38:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   82d3c:	2b09      	cmp	r3, #9
   82d3e:	4683      	mov	fp, r0
   82d40:	f200 8560 	bhi.w	83804 <_svfprintf_r+0x1238>
   82d44:	2000      	movs	r0, #0
   82d46:	f81b 7b01 	ldrb.w	r7, [fp], #1
   82d4a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   82d4e:	eb03 0040 	add.w	r0, r3, r0, lsl #1
   82d52:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   82d56:	2b09      	cmp	r3, #9
   82d58:	d9f5      	bls.n	82d46 <_svfprintf_r+0x77a>
   82d5a:	9009      	str	r0, [sp, #36]	; 0x24
   82d5c:	e492      	b.n	82684 <_svfprintf_r+0xb8>
   82d5e:	f89b 3000 	ldrb.w	r3, [fp]
   82d62:	f048 0804 	orr.w	r8, r8, #4
   82d66:	e48a      	b.n	8267e <_svfprintf_r+0xb2>
   82d68:	f048 0880 	orr.w	r8, r8, #128	; 0x80
   82d6c:	f89b 3000 	ldrb.w	r3, [fp]
   82d70:	e485      	b.n	8267e <_svfprintf_r+0xb2>
   82d72:	2302      	movs	r3, #2
   82d74:	e512      	b.n	8279c <_svfprintf_r+0x1d0>
   82d76:	2a00      	cmp	r2, #0
   82d78:	f040 868c 	bne.w	83a94 <_svfprintf_r+0x14c8>
   82d7c:	2f00      	cmp	r7, #0
   82d7e:	f43f ace9 	beq.w	82754 <_svfprintf_r+0x188>
   82d82:	2300      	movs	r3, #0
   82d84:	2201      	movs	r2, #1
   82d86:	461e      	mov	r6, r3
   82d88:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82d8c:	9309      	str	r3, [sp, #36]	; 0x24
   82d8e:	9312      	str	r3, [sp, #72]	; 0x48
   82d90:	ab28      	add	r3, sp, #160	; 0xa0
   82d92:	9208      	str	r2, [sp, #32]
   82d94:	f88d 70a0 	strb.w	r7, [sp, #160]	; 0xa0
   82d98:	f8cd 801c 	str.w	r8, [sp, #28]
   82d9c:	920e      	str	r2, [sp, #56]	; 0x38
   82d9e:	9311      	str	r3, [sp, #68]	; 0x44
   82da0:	e603      	b.n	829aa <_svfprintf_r+0x3de>
   82da2:	2f65      	cmp	r7, #101	; 0x65
   82da4:	f340 80b1 	ble.w	82f0a <_svfprintf_r+0x93e>
   82da8:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
   82dac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82dae:	9914      	ldr	r1, [sp, #80]	; 0x50
   82db0:	f004 fbfa 	bl	875a8 <__aeabi_dcmpeq>
   82db4:	2800      	cmp	r0, #0
   82db6:	f000 8182 	beq.w	830be <_svfprintf_r+0xaf2>
   82dba:	2101      	movs	r1, #1
   82dbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82dbe:	4a36      	ldr	r2, [pc, #216]	; (82e98 <_svfprintf_r+0x8cc>)
   82dc0:	440b      	add	r3, r1
   82dc2:	440c      	add	r4, r1
   82dc4:	2b07      	cmp	r3, #7
   82dc6:	9427      	str	r4, [sp, #156]	; 0x9c
   82dc8:	9326      	str	r3, [sp, #152]	; 0x98
   82dca:	e9c9 2100 	strd	r2, r1, [r9]
   82dce:	f300 83ee 	bgt.w	835ae <_svfprintf_r+0xfe2>
   82dd2:	f109 0908 	add.w	r9, r9, #8
   82dd6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82dd8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82dda:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ddc:	4293      	cmp	r3, r2
   82dde:	f280 8248 	bge.w	83272 <_svfprintf_r+0xca6>
   82de2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82de4:	9a19      	ldr	r2, [sp, #100]	; 0x64
   82de6:	3301      	adds	r3, #1
   82de8:	991a      	ldr	r1, [sp, #104]	; 0x68
   82dea:	4414      	add	r4, r2
   82dec:	2b07      	cmp	r3, #7
   82dee:	e9c9 1200 	strd	r1, r2, [r9]
   82df2:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   82df6:	f300 8355 	bgt.w	834a4 <_svfprintf_r+0xed8>
   82dfa:	f109 0908 	add.w	r9, r9, #8
   82dfe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82e00:	1e5d      	subs	r5, r3, #1
   82e02:	2d00      	cmp	r5, #0
   82e04:	f77f ae99 	ble.w	82b3a <_svfprintf_r+0x56e>
   82e08:	2d10      	cmp	r5, #16
   82e0a:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82e0c:	f340 859f 	ble.w	8394e <_svfprintf_r+0x1382>
   82e10:	f8df 8088 	ldr.w	r8, [pc, #136]	; 82e9c <_svfprintf_r+0x8d0>
   82e14:	4623      	mov	r3, r4
   82e16:	2610      	movs	r6, #16
   82e18:	4644      	mov	r4, r8
   82e1a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   82e1c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   82e20:	e005      	b.n	82e2e <_svfprintf_r+0x862>
   82e22:	f109 0908 	add.w	r9, r9, #8
   82e26:	3d10      	subs	r5, #16
   82e28:	2d10      	cmp	r5, #16
   82e2a:	f340 8399 	ble.w	83560 <_svfprintf_r+0xf94>
   82e2e:	3201      	adds	r2, #1
   82e30:	3310      	adds	r3, #16
   82e32:	2a07      	cmp	r2, #7
   82e34:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   82e38:	e9c9 4600 	strd	r4, r6, [r9]
   82e3c:	ddf1      	ble.n	82e22 <_svfprintf_r+0x856>
   82e3e:	aa25      	add	r2, sp, #148	; 0x94
   82e40:	4641      	mov	r1, r8
   82e42:	4638      	mov	r0, r7
   82e44:	f003 f990 	bl	86168 <__ssprint_r>
   82e48:	2800      	cmp	r0, #0
   82e4a:	f47f ac8a 	bne.w	82762 <_svfprintf_r+0x196>
   82e4e:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   82e52:	46d1      	mov	r9, sl
   82e54:	e7e7      	b.n	82e26 <_svfprintf_r+0x85a>
   82e56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82e58:	9a08      	ldr	r2, [sp, #32]
   82e5a:	1a9d      	subs	r5, r3, r2
   82e5c:	2d00      	cmp	r5, #0
   82e5e:	f77f ae15 	ble.w	82a8c <_svfprintf_r+0x4c0>
   82e62:	2d10      	cmp	r5, #16
   82e64:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82e66:	f340 84b3 	ble.w	837d0 <_svfprintf_r+0x1204>
   82e6a:	f8df 8030 	ldr.w	r8, [pc, #48]	; 82e9c <_svfprintf_r+0x8d0>
   82e6e:	464b      	mov	r3, r9
   82e70:	4640      	mov	r0, r8
   82e72:	4621      	mov	r1, r4
   82e74:	e9dd 940c 	ldrd	r9, r4, [sp, #48]	; 0x30
   82e78:	46b8      	mov	r8, r7
   82e7a:	2610      	movs	r6, #16
   82e7c:	4607      	mov	r7, r0
   82e7e:	e014      	b.n	82eaa <_svfprintf_r+0x8de>
   82e80:	000876b8 	.word	0x000876b8
   82e84:	000876e8 	.word	0x000876e8
   82e88:	000876fc 	.word	0x000876fc
   82e8c:	7fefffff 	.word	0x7fefffff
   82e90:	000876dc 	.word	0x000876dc
   82e94:	000876d8 	.word	0x000876d8
   82e98:	00087718 	.word	0x00087718
   82e9c:	000876c8 	.word	0x000876c8
   82ea0:	3d10      	subs	r5, #16
   82ea2:	2d10      	cmp	r5, #16
   82ea4:	f103 0308 	add.w	r3, r3, #8
   82ea8:	dd15      	ble.n	82ed6 <_svfprintf_r+0x90a>
   82eaa:	3201      	adds	r2, #1
   82eac:	3110      	adds	r1, #16
   82eae:	2a07      	cmp	r2, #7
   82eb0:	e9cd 2126 	strd	r2, r1, [sp, #152]	; 0x98
   82eb4:	e9c3 7600 	strd	r7, r6, [r3]
   82eb8:	ddf2      	ble.n	82ea0 <_svfprintf_r+0x8d4>
   82eba:	aa25      	add	r2, sp, #148	; 0x94
   82ebc:	4649      	mov	r1, r9
   82ebe:	4620      	mov	r0, r4
   82ec0:	f003 f952 	bl	86168 <__ssprint_r>
   82ec4:	2800      	cmp	r0, #0
   82ec6:	f47f ac4c 	bne.w	82762 <_svfprintf_r+0x196>
   82eca:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
   82ece:	3d10      	subs	r5, #16
   82ed0:	2d10      	cmp	r5, #16
   82ed2:	4653      	mov	r3, sl
   82ed4:	dce9      	bgt.n	82eaa <_svfprintf_r+0x8de>
   82ed6:	4699      	mov	r9, r3
   82ed8:	463b      	mov	r3, r7
   82eda:	460c      	mov	r4, r1
   82edc:	4647      	mov	r7, r8
   82ede:	4698      	mov	r8, r3
   82ee0:	3201      	adds	r2, #1
   82ee2:	442c      	add	r4, r5
   82ee4:	2a07      	cmp	r2, #7
   82ee6:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   82eea:	e9c9 8500 	strd	r8, r5, [r9]
   82eee:	f300 8343 	bgt.w	83578 <_svfprintf_r+0xfac>
   82ef2:	f109 0908 	add.w	r9, r9, #8
   82ef6:	e5c9      	b.n	82a8c <_svfprintf_r+0x4c0>
   82ef8:	aa25      	add	r2, sp, #148	; 0x94
   82efa:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   82efe:	f003 f933 	bl	86168 <__ssprint_r>
   82f02:	2800      	cmp	r0, #0
   82f04:	f43f ae59 	beq.w	82bba <_svfprintf_r+0x5ee>
   82f08:	e42b      	b.n	82762 <_svfprintf_r+0x196>
   82f0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82f0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82f0e:	2a01      	cmp	r2, #1
   82f10:	f104 0401 	add.w	r4, r4, #1
   82f14:	f103 0501 	add.w	r5, r3, #1
   82f18:	f109 0608 	add.w	r6, r9, #8
   82f1c:	f340 8187 	ble.w	8322e <_svfprintf_r+0xc62>
   82f20:	2301      	movs	r3, #1
   82f22:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82f24:	2d07      	cmp	r5, #7
   82f26:	f8c9 2000 	str.w	r2, [r9]
   82f2a:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
   82f2e:	f8c9 3004 	str.w	r3, [r9, #4]
   82f32:	f300 82f9 	bgt.w	83528 <_svfprintf_r+0xf5c>
   82f36:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82f38:	3501      	adds	r5, #1
   82f3a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   82f3c:	441c      	add	r4, r3
   82f3e:	2d07      	cmp	r5, #7
   82f40:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
   82f44:	e9c6 2300 	strd	r2, r3, [r6]
   82f48:	f300 82fa 	bgt.w	83540 <_svfprintf_r+0xf74>
   82f4c:	3608      	adds	r6, #8
   82f4e:	1c6f      	adds	r7, r5, #1
   82f50:	970e      	str	r7, [sp, #56]	; 0x38
   82f52:	9709      	str	r7, [sp, #36]	; 0x24
   82f54:	9f13      	ldr	r7, [sp, #76]	; 0x4c
   82f56:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
   82f5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82f5c:	9914      	ldr	r1, [sp, #80]	; 0x50
   82f5e:	3f01      	subs	r7, #1
   82f60:	f106 0908 	add.w	r9, r6, #8
   82f64:	f004 fb20 	bl	875a8 <__aeabi_dcmpeq>
   82f68:	2800      	cmp	r0, #0
   82f6a:	f040 811f 	bne.w	831ac <_svfprintf_r+0xbe0>
   82f6e:	443c      	add	r4, r7
   82f70:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82f72:	6077      	str	r7, [r6, #4]
   82f74:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82f76:	3301      	adds	r3, #1
   82f78:	2f07      	cmp	r7, #7
   82f7a:	6033      	str	r3, [r6, #0]
   82f7c:	9427      	str	r4, [sp, #156]	; 0x9c
   82f7e:	9726      	str	r7, [sp, #152]	; 0x98
   82f80:	f300 8280 	bgt.w	83484 <_svfprintf_r+0xeb8>
   82f84:	f106 0310 	add.w	r3, r6, #16
   82f88:	464e      	mov	r6, r9
   82f8a:	4699      	mov	r9, r3
   82f8c:	1caa      	adds	r2, r5, #2
   82f8e:	9209      	str	r2, [sp, #36]	; 0x24
   82f90:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   82f92:	ab21      	add	r3, sp, #132	; 0x84
   82f94:	4414      	add	r4, r2
   82f96:	6072      	str	r2, [r6, #4]
   82f98:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82f9a:	9427      	str	r4, [sp, #156]	; 0x9c
   82f9c:	2a07      	cmp	r2, #7
   82f9e:	9226      	str	r2, [sp, #152]	; 0x98
   82fa0:	6033      	str	r3, [r6, #0]
   82fa2:	f77f adca 	ble.w	82b3a <_svfprintf_r+0x56e>
   82fa6:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   82faa:	aa25      	add	r2, sp, #148	; 0x94
   82fac:	f003 f8dc 	bl	86168 <__ssprint_r>
   82fb0:	2800      	cmp	r0, #0
   82fb2:	f47f abd6 	bne.w	82762 <_svfprintf_r+0x196>
   82fb6:	46d1      	mov	r9, sl
   82fb8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82fba:	e5be      	b.n	82b3a <_svfprintf_r+0x56e>
   82fbc:	2b01      	cmp	r3, #1
   82fbe:	f8cd 801c 	str.w	r8, [sp, #28]
   82fc2:	f47f acb8 	bne.w	82936 <_svfprintf_r+0x36a>
   82fc6:	2d00      	cmp	r5, #0
   82fc8:	bf08      	it	eq
   82fca:	2c0a      	cmpeq	r4, #10
   82fcc:	f080 817d 	bcs.w	832ca <_svfprintf_r+0xcfe>
   82fd0:	ab42      	add	r3, sp, #264	; 0x108
   82fd2:	3430      	adds	r4, #48	; 0x30
   82fd4:	f803 4d41 	strb.w	r4, [r3, #-65]!
   82fd8:	9311      	str	r3, [sp, #68]	; 0x44
   82fda:	2301      	movs	r3, #1
   82fdc:	930e      	str	r3, [sp, #56]	; 0x38
   82fde:	e4c8      	b.n	82972 <_svfprintf_r+0x3a6>
   82fe0:	aa25      	add	r2, sp, #148	; 0x94
   82fe2:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   82fe6:	f003 f8bf 	bl	86168 <__ssprint_r>
   82fea:	2800      	cmp	r0, #0
   82fec:	f47f abb9 	bne.w	82762 <_svfprintf_r+0x196>
   82ff0:	46d1      	mov	r9, sl
   82ff2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   82ff4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82ff6:	b91b      	cbnz	r3, 83000 <_svfprintf_r+0xa34>
   82ff8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82ffa:	2a00      	cmp	r2, #0
   82ffc:	f000 8314 	beq.w	83628 <_svfprintf_r+0x105c>
   83000:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83002:	9919      	ldr	r1, [sp, #100]	; 0x64
   83004:	3201      	adds	r2, #1
   83006:	981a      	ldr	r0, [sp, #104]	; 0x68
   83008:	440c      	add	r4, r1
   8300a:	2a07      	cmp	r2, #7
   8300c:	9427      	str	r4, [sp, #156]	; 0x9c
   8300e:	e9c9 0100 	strd	r0, r1, [r9]
   83012:	9226      	str	r2, [sp, #152]	; 0x98
   83014:	f300 8406 	bgt.w	83824 <_svfprintf_r+0x1258>
   83018:	f109 0908 	add.w	r9, r9, #8
   8301c:	2b00      	cmp	r3, #0
   8301e:	f2c0 843f 	blt.w	838a0 <_svfprintf_r+0x12d4>
   83022:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83024:	3201      	adds	r2, #1
   83026:	9911      	ldr	r1, [sp, #68]	; 0x44
   83028:	441c      	add	r4, r3
   8302a:	2a07      	cmp	r2, #7
   8302c:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   83030:	e9c9 1300 	strd	r1, r3, [r9]
   83034:	f77f ad7f 	ble.w	82b36 <_svfprintf_r+0x56a>
   83038:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8303c:	aa25      	add	r2, sp, #148	; 0x94
   8303e:	f003 f893 	bl	86168 <__ssprint_r>
   83042:	2800      	cmp	r0, #0
   83044:	f47f ab8d 	bne.w	82762 <_svfprintf_r+0x196>
   83048:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8304a:	46d1      	mov	r9, sl
   8304c:	e575      	b.n	82b3a <_svfprintf_r+0x56e>
   8304e:	aa25      	add	r2, sp, #148	; 0x94
   83050:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83054:	f003 f888 	bl	86168 <__ssprint_r>
   83058:	2800      	cmp	r0, #0
   8305a:	f47f ab82 	bne.w	82762 <_svfprintf_r+0x196>
   8305e:	46d1      	mov	r9, sl
   83060:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83062:	e4ff      	b.n	82a64 <_svfprintf_r+0x498>
   83064:	aa25      	add	r2, sp, #148	; 0x94
   83066:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8306a:	f003 f87d 	bl	86168 <__ssprint_r>
   8306e:	2800      	cmp	r0, #0
   83070:	f47f ab77 	bne.w	82762 <_svfprintf_r+0x196>
   83074:	46d1      	mov	r9, sl
   83076:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83078:	e504      	b.n	82a84 <_svfprintf_r+0x4b8>
   8307a:	4652      	mov	r2, sl
   8307c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
   83080:	0923      	lsrs	r3, r4, #4
   83082:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   83086:	0928      	lsrs	r0, r5, #4
   83088:	f004 010f 	and.w	r1, r4, #15
   8308c:	4605      	mov	r5, r0
   8308e:	461c      	mov	r4, r3
   83090:	f81c 3001 	ldrb.w	r3, [ip, r1]
   83094:	f802 3d01 	strb.w	r3, [r2, #-1]!
   83098:	ea54 0305 	orrs.w	r3, r4, r5
   8309c:	d1f0      	bne.n	83080 <_svfprintf_r+0xab4>
   8309e:	ebaa 0302 	sub.w	r3, sl, r2
   830a2:	9211      	str	r2, [sp, #68]	; 0x44
   830a4:	930e      	str	r3, [sp, #56]	; 0x38
   830a6:	e464      	b.n	82972 <_svfprintf_r+0x3a6>
   830a8:	aa25      	add	r2, sp, #148	; 0x94
   830aa:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   830ae:	f003 f85b 	bl	86168 <__ssprint_r>
   830b2:	2800      	cmp	r0, #0
   830b4:	f47f ab55 	bne.w	82762 <_svfprintf_r+0x196>
   830b8:	46d1      	mov	r9, sl
   830ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   830bc:	e52b      	b.n	82b16 <_svfprintf_r+0x54a>
   830be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   830c0:	2b00      	cmp	r3, #0
   830c2:	f340 8265 	ble.w	83590 <_svfprintf_r+0xfc4>
   830c6:	e9dd 3212 	ldrd	r3, r2, [sp, #72]	; 0x48
   830ca:	4293      	cmp	r3, r2
   830cc:	bfa8      	it	ge
   830ce:	4613      	movge	r3, r2
   830d0:	2b00      	cmp	r3, #0
   830d2:	461d      	mov	r5, r3
   830d4:	dd0c      	ble.n	830f0 <_svfprintf_r+0xb24>
   830d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   830d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   830da:	3301      	adds	r3, #1
   830dc:	442c      	add	r4, r5
   830de:	2b07      	cmp	r3, #7
   830e0:	9427      	str	r4, [sp, #156]	; 0x9c
   830e2:	e9c9 2500 	strd	r2, r5, [r9]
   830e6:	9326      	str	r3, [sp, #152]	; 0x98
   830e8:	f300 832a 	bgt.w	83740 <_svfprintf_r+0x1174>
   830ec:	f109 0908 	add.w	r9, r9, #8
   830f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   830f2:	2d00      	cmp	r5, #0
   830f4:	bfa8      	it	ge
   830f6:	1b5b      	subge	r3, r3, r5
   830f8:	2b00      	cmp	r3, #0
   830fa:	461d      	mov	r5, r3
   830fc:	f300 818c 	bgt.w	83418 <_svfprintf_r+0xe4c>
   83100:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83102:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   83104:	4293      	cmp	r3, r2
   83106:	f2c0 81ee 	blt.w	834e6 <_svfprintf_r+0xf1a>
   8310a:	9a07      	ldr	r2, [sp, #28]
   8310c:	07d1      	lsls	r1, r2, #31
   8310e:	f100 81ea 	bmi.w	834e6 <_svfprintf_r+0xf1a>
   83112:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   83114:	9812      	ldr	r0, [sp, #72]	; 0x48
   83116:	1ad3      	subs	r3, r2, r3
   83118:	1a15      	subs	r5, r2, r0
   8311a:	429d      	cmp	r5, r3
   8311c:	bfa8      	it	ge
   8311e:	461d      	movge	r5, r3
   83120:	2d00      	cmp	r5, #0
   83122:	dd0f      	ble.n	83144 <_svfprintf_r+0xb78>
   83124:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83126:	9911      	ldr	r1, [sp, #68]	; 0x44
   83128:	3201      	adds	r2, #1
   8312a:	4401      	add	r1, r0
   8312c:	442c      	add	r4, r5
   8312e:	2a07      	cmp	r2, #7
   83130:	f8c9 1000 	str.w	r1, [r9]
   83134:	9427      	str	r4, [sp, #156]	; 0x9c
   83136:	f8c9 5004 	str.w	r5, [r9, #4]
   8313a:	9226      	str	r2, [sp, #152]	; 0x98
   8313c:	f300 8334 	bgt.w	837a8 <_svfprintf_r+0x11dc>
   83140:	f109 0908 	add.w	r9, r9, #8
   83144:	2d00      	cmp	r5, #0
   83146:	bfb4      	ite	lt
   83148:	461d      	movlt	r5, r3
   8314a:	1b5d      	subge	r5, r3, r5
   8314c:	2d00      	cmp	r5, #0
   8314e:	f77f acf4 	ble.w	82b3a <_svfprintf_r+0x56e>
   83152:	2d10      	cmp	r5, #16
   83154:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83156:	f340 83fa 	ble.w	8394e <_svfprintf_r+0x1382>
   8315a:	f8df 8670 	ldr.w	r8, [pc, #1648]	; 837cc <_svfprintf_r+0x1200>
   8315e:	4623      	mov	r3, r4
   83160:	2610      	movs	r6, #16
   83162:	4644      	mov	r4, r8
   83164:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   83166:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   8316a:	e005      	b.n	83178 <_svfprintf_r+0xbac>
   8316c:	f109 0908 	add.w	r9, r9, #8
   83170:	3d10      	subs	r5, #16
   83172:	2d10      	cmp	r5, #16
   83174:	f340 81f4 	ble.w	83560 <_svfprintf_r+0xf94>
   83178:	3201      	adds	r2, #1
   8317a:	3310      	adds	r3, #16
   8317c:	2a07      	cmp	r2, #7
   8317e:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   83182:	e9c9 4600 	strd	r4, r6, [r9]
   83186:	ddf1      	ble.n	8316c <_svfprintf_r+0xba0>
   83188:	aa25      	add	r2, sp, #148	; 0x94
   8318a:	4641      	mov	r1, r8
   8318c:	4638      	mov	r0, r7
   8318e:	f002 ffeb 	bl	86168 <__ssprint_r>
   83192:	2800      	cmp	r0, #0
   83194:	f47f aae5 	bne.w	82762 <_svfprintf_r+0x196>
   83198:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   8319c:	46d1      	mov	r9, sl
   8319e:	e7e7      	b.n	83170 <_svfprintf_r+0xba4>
   831a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   831a2:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   831a6:	930e      	str	r3, [sp, #56]	; 0x38
   831a8:	f7ff bbe3 	b.w	82972 <_svfprintf_r+0x3a6>
   831ac:	2f00      	cmp	r7, #0
   831ae:	f77f aeef 	ble.w	82f90 <_svfprintf_r+0x9c4>
   831b2:	2f10      	cmp	r7, #16
   831b4:	f340 841a 	ble.w	839ec <_svfprintf_r+0x1420>
   831b8:	f8df 8610 	ldr.w	r8, [pc, #1552]	; 837cc <_svfprintf_r+0x1200>
   831bc:	4633      	mov	r3, r6
   831be:	4622      	mov	r2, r4
   831c0:	4646      	mov	r6, r8
   831c2:	f04f 0910 	mov.w	r9, #16
   831c6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   831c8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   831cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   831ce:	e005      	b.n	831dc <_svfprintf_r+0xc10>
   831d0:	3308      	adds	r3, #8
   831d2:	3f10      	subs	r7, #16
   831d4:	2f10      	cmp	r7, #16
   831d6:	f340 81f8 	ble.w	835ca <_svfprintf_r+0xffe>
   831da:	3501      	adds	r5, #1
   831dc:	3210      	adds	r2, #16
   831de:	2d07      	cmp	r5, #7
   831e0:	e9cd 5226 	strd	r5, r2, [sp, #152]	; 0x98
   831e4:	e9c3 6900 	strd	r6, r9, [r3]
   831e8:	ddf2      	ble.n	831d0 <_svfprintf_r+0xc04>
   831ea:	aa25      	add	r2, sp, #148	; 0x94
   831ec:	4641      	mov	r1, r8
   831ee:	4620      	mov	r0, r4
   831f0:	f002 ffba 	bl	86168 <__ssprint_r>
   831f4:	2800      	cmp	r0, #0
   831f6:	f47f aab4 	bne.w	82762 <_svfprintf_r+0x196>
   831fa:	e9dd 5226 	ldrd	r5, r2, [sp, #152]	; 0x98
   831fe:	4653      	mov	r3, sl
   83200:	e7e7      	b.n	831d2 <_svfprintf_r+0xc06>
   83202:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83204:	f852 4b04 	ldr.w	r4, [r2], #4
   83208:	920f      	str	r2, [sp, #60]	; 0x3c
   8320a:	f018 0210 	ands.w	r2, r8, #16
   8320e:	f000 8087 	beq.w	83320 <_svfprintf_r+0xd54>
   83212:	2500      	movs	r5, #0
   83214:	f7ff bac2 	b.w	8279c <_svfprintf_r+0x1d0>
   83218:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8321a:	f018 0f10 	tst.w	r8, #16
   8321e:	f853 4b04 	ldr.w	r4, [r3], #4
   83222:	930f      	str	r3, [sp, #60]	; 0x3c
   83224:	d074      	beq.n	83310 <_svfprintf_r+0xd44>
   83226:	2500      	movs	r5, #0
   83228:	2301      	movs	r3, #1
   8322a:	f7ff bab7 	b.w	8279c <_svfprintf_r+0x1d0>
   8322e:	9a07      	ldr	r2, [sp, #28]
   83230:	07d2      	lsls	r2, r2, #31
   83232:	f53f ae75 	bmi.w	82f20 <_svfprintf_r+0x954>
   83236:	2201      	movs	r2, #1
   83238:	9911      	ldr	r1, [sp, #68]	; 0x44
   8323a:	2d07      	cmp	r5, #7
   8323c:	f8c9 1000 	str.w	r1, [r9]
   83240:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
   83244:	f8c9 2004 	str.w	r2, [r9, #4]
   83248:	f300 829d 	bgt.w	83786 <_svfprintf_r+0x11ba>
   8324c:	3302      	adds	r3, #2
   8324e:	9309      	str	r3, [sp, #36]	; 0x24
   83250:	f109 0910 	add.w	r9, r9, #16
   83254:	e69c      	b.n	82f90 <_svfprintf_r+0x9c4>
   83256:	2b30      	cmp	r3, #48	; 0x30
   83258:	f000 813f 	beq.w	834da <_svfprintf_r+0xf0e>
   8325c:	2330      	movs	r3, #48	; 0x30
   8325e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   83260:	3902      	subs	r1, #2
   83262:	f802 3c01 	strb.w	r3, [r2, #-1]
   83266:	ebaa 0301 	sub.w	r3, sl, r1
   8326a:	930e      	str	r3, [sp, #56]	; 0x38
   8326c:	9111      	str	r1, [sp, #68]	; 0x44
   8326e:	f7ff bb80 	b.w	82972 <_svfprintf_r+0x3a6>
   83272:	9b07      	ldr	r3, [sp, #28]
   83274:	07dd      	lsls	r5, r3, #31
   83276:	f53f adb4 	bmi.w	82de2 <_svfprintf_r+0x816>
   8327a:	e45e      	b.n	82b3a <_svfprintf_r+0x56e>
   8327c:	aa25      	add	r2, sp, #148	; 0x94
   8327e:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83282:	f002 ff71 	bl	86168 <__ssprint_r>
   83286:	2800      	cmp	r0, #0
   83288:	f47f aa6b 	bne.w	82762 <_svfprintf_r+0x196>
   8328c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8328e:	e489      	b.n	82ba4 <_svfprintf_r+0x5d8>
   83290:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   83294:	f7ff bb6d 	b.w	82972 <_svfprintf_r+0x3a6>
   83298:	2500      	movs	r5, #0
   8329a:	e4a3      	b.n	82be4 <_svfprintf_r+0x618>
   8329c:	17e5      	asrs	r5, r4, #31
   8329e:	2c00      	cmp	r4, #0
   832a0:	f175 0300 	sbcs.w	r3, r5, #0
   832a4:	f6bf ab35 	bge.w	82912 <_svfprintf_r+0x346>
   832a8:	262d      	movs	r6, #45	; 0x2d
   832aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   832ac:	4264      	negs	r4, r4
   832ae:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   832b2:	3301      	adds	r3, #1
   832b4:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
   832b8:	f47f ab31 	bne.w	8291e <_svfprintf_r+0x352>
   832bc:	2d00      	cmp	r5, #0
   832be:	bf08      	it	eq
   832c0:	2c0a      	cmpeq	r4, #10
   832c2:	f8cd 801c 	str.w	r8, [sp, #28]
   832c6:	f4ff ae83 	bcc.w	82fd0 <_svfprintf_r+0xa04>
   832ca:	46d0      	mov	r8, sl
   832cc:	4620      	mov	r0, r4
   832ce:	4629      	mov	r1, r5
   832d0:	220a      	movs	r2, #10
   832d2:	2300      	movs	r3, #0
   832d4:	f7fe fefc 	bl	820d0 <__aeabi_uldivmod>
   832d8:	3230      	adds	r2, #48	; 0x30
   832da:	f808 2d01 	strb.w	r2, [r8, #-1]!
   832de:	4620      	mov	r0, r4
   832e0:	4629      	mov	r1, r5
   832e2:	2300      	movs	r3, #0
   832e4:	220a      	movs	r2, #10
   832e6:	f7fe fef3 	bl	820d0 <__aeabi_uldivmod>
   832ea:	4604      	mov	r4, r0
   832ec:	460d      	mov	r5, r1
   832ee:	ea54 0305 	orrs.w	r3, r4, r5
   832f2:	d1eb      	bne.n	832cc <_svfprintf_r+0xd00>
   832f4:	ebaa 0308 	sub.w	r3, sl, r8
   832f8:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
   832fc:	930e      	str	r3, [sp, #56]	; 0x38
   832fe:	f7ff bb38 	b.w	82972 <_svfprintf_r+0x3a6>
   83302:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83304:	4610      	mov	r0, r2
   83306:	17d1      	asrs	r1, r2, #31
   83308:	e9c3 0100 	strd	r0, r1, [r3]
   8330c:	f7ff b986 	b.w	8261c <_svfprintf_r+0x50>
   83310:	f018 0f40 	tst.w	r8, #64	; 0x40
   83314:	bf18      	it	ne
   83316:	b2a4      	uxthne	r4, r4
   83318:	2500      	movs	r5, #0
   8331a:	2301      	movs	r3, #1
   8331c:	f7ff ba3e 	b.w	8279c <_svfprintf_r+0x1d0>
   83320:	f018 0340 	ands.w	r3, r8, #64	; 0x40
   83324:	bf1c      	itt	ne
   83326:	4613      	movne	r3, r2
   83328:	b2a4      	uxthne	r4, r4
   8332a:	2500      	movs	r5, #0
   8332c:	f7ff ba36 	b.w	8279c <_svfprintf_r+0x1d0>
   83330:	9c15      	ldr	r4, [sp, #84]	; 0x54
   83332:	4622      	mov	r2, r4
   83334:	4620      	mov	r0, r4
   83336:	9c14      	ldr	r4, [sp, #80]	; 0x50
   83338:	4623      	mov	r3, r4
   8333a:	4621      	mov	r1, r4
   8333c:	f004 f966 	bl	8760c <__aeabi_dcmpun>
   83340:	2800      	cmp	r0, #0
   83342:	f040 832e 	bne.w	839a2 <_svfprintf_r+0x13d6>
   83346:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83348:	f027 0320 	bic.w	r3, r7, #32
   8334c:	1c54      	adds	r4, r2, #1
   8334e:	9308      	str	r3, [sp, #32]
   83350:	f000 8242 	beq.w	837d8 <_svfprintf_r+0x120c>
   83354:	2b47      	cmp	r3, #71	; 0x47
   83356:	f000 816c 	beq.w	83632 <_svfprintf_r+0x1066>
   8335a:	f448 7380 	orr.w	r3, r8, #256	; 0x100
   8335e:	9307      	str	r3, [sp, #28]
   83360:	e9dd 3614 	ldrd	r3, r6, [sp, #80]	; 0x50
   83364:	1e1d      	subs	r5, r3, #0
   83366:	bfb6      	itet	lt
   83368:	f103 4500 	addlt.w	r5, r3, #2147483648	; 0x80000000
   8336c:	2300      	movge	r3, #0
   8336e:	232d      	movlt	r3, #45	; 0x2d
   83370:	2f66      	cmp	r7, #102	; 0x66
   83372:	9310      	str	r3, [sp, #64]	; 0x40
   83374:	f000 8233 	beq.w	837de <_svfprintf_r+0x1212>
   83378:	2f46      	cmp	r7, #70	; 0x46
   8337a:	f000 8274 	beq.w	83866 <_svfprintf_r+0x129a>
   8337e:	9b08      	ldr	r3, [sp, #32]
   83380:	4632      	mov	r2, r6
   83382:	2b45      	cmp	r3, #69	; 0x45
   83384:	f04f 0002 	mov.w	r0, #2
   83388:	462b      	mov	r3, r5
   8338a:	f000 8158 	beq.w	8363e <_svfprintf_r+0x1072>
   8338e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83390:	a923      	add	r1, sp, #140	; 0x8c
   83392:	e9cd 0400 	strd	r0, r4, [sp]
   83396:	9104      	str	r1, [sp, #16]
   83398:	a820      	add	r0, sp, #128	; 0x80
   8339a:	a91f      	add	r1, sp, #124	; 0x7c
   8339c:	e9cd 1002 	strd	r1, r0, [sp, #8]
   833a0:	980d      	ldr	r0, [sp, #52]	; 0x34
   833a2:	f000 fc57 	bl	83c54 <_dtoa_r>
   833a6:	2f67      	cmp	r7, #103	; 0x67
   833a8:	9011      	str	r0, [sp, #68]	; 0x44
   833aa:	f040 8354 	bne.w	83a56 <_svfprintf_r+0x148a>
   833ae:	f018 0f01 	tst.w	r8, #1
   833b2:	f000 8169 	beq.w	83688 <_svfprintf_r+0x10bc>
   833b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   833b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   833ba:	189c      	adds	r4, r3, r2
   833bc:	9a16      	ldr	r2, [sp, #88]	; 0x58
   833be:	4630      	mov	r0, r6
   833c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   833c2:	4629      	mov	r1, r5
   833c4:	f004 f8f0 	bl	875a8 <__aeabi_dcmpeq>
   833c8:	2800      	cmp	r0, #0
   833ca:	f000 81d0 	beq.w	8376e <_svfprintf_r+0x11a2>
   833ce:	4623      	mov	r3, r4
   833d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   833d2:	1a9b      	subs	r3, r3, r2
   833d4:	9313      	str	r3, [sp, #76]	; 0x4c
   833d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   833d8:	9312      	str	r3, [sp, #72]	; 0x48
   833da:	9b08      	ldr	r3, [sp, #32]
   833dc:	2b47      	cmp	r3, #71	; 0x47
   833de:	f000 815c 	beq.w	8369a <_svfprintf_r+0x10ce>
   833e2:	2f66      	cmp	r7, #102	; 0x66
   833e4:	f040 8160 	bne.w	836a8 <_svfprintf_r+0x10dc>
   833e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   833ea:	2b00      	cmp	r3, #0
   833ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
   833ee:	f340 82f5 	ble.w	839dc <_svfprintf_r+0x1410>
   833f2:	2b00      	cmp	r3, #0
   833f4:	f040 82e8 	bne.w	839c8 <_svfprintf_r+0x13fc>
   833f8:	f018 0f01 	tst.w	r8, #1
   833fc:	f040 82e4 	bne.w	839c8 <_svfprintf_r+0x13fc>
   83400:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83402:	9308      	str	r3, [sp, #32]
   83404:	930e      	str	r3, [sp, #56]	; 0x38
   83406:	9b10      	ldr	r3, [sp, #64]	; 0x40
   83408:	2b00      	cmp	r3, #0
   8340a:	f040 817a 	bne.w	83702 <_svfprintf_r+0x1136>
   8340e:	9309      	str	r3, [sp, #36]	; 0x24
   83410:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   83414:	f7ff ba39 	b.w	8288a <_svfprintf_r+0x2be>
   83418:	2b10      	cmp	r3, #16
   8341a:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8341c:	f340 82ea 	ble.w	839f4 <_svfprintf_r+0x1428>
   83420:	f8df 83a8 	ldr.w	r8, [pc, #936]	; 837cc <_svfprintf_r+0x1200>
   83424:	4623      	mov	r3, r4
   83426:	2610      	movs	r6, #16
   83428:	4644      	mov	r4, r8
   8342a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   8342c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   83430:	e005      	b.n	8343e <_svfprintf_r+0xe72>
   83432:	f109 0908 	add.w	r9, r9, #8
   83436:	3d10      	subs	r5, #16
   83438:	2d10      	cmp	r5, #16
   8343a:	f340 80dc 	ble.w	835f6 <_svfprintf_r+0x102a>
   8343e:	3201      	adds	r2, #1
   83440:	3310      	adds	r3, #16
   83442:	2a07      	cmp	r2, #7
   83444:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   83448:	e9c9 4600 	strd	r4, r6, [r9]
   8344c:	ddf1      	ble.n	83432 <_svfprintf_r+0xe66>
   8344e:	aa25      	add	r2, sp, #148	; 0x94
   83450:	4641      	mov	r1, r8
   83452:	4638      	mov	r0, r7
   83454:	f002 fe88 	bl	86168 <__ssprint_r>
   83458:	2800      	cmp	r0, #0
   8345a:	f47f a982 	bne.w	82762 <_svfprintf_r+0x196>
   8345e:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   83462:	46d1      	mov	r9, sl
   83464:	e7e7      	b.n	83436 <_svfprintf_r+0xe6a>
   83466:	2140      	movs	r1, #64	; 0x40
   83468:	980d      	ldr	r0, [sp, #52]	; 0x34
   8346a:	f001 fc57 	bl	84d1c <_malloc_r>
   8346e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83470:	6018      	str	r0, [r3, #0]
   83472:	6118      	str	r0, [r3, #16]
   83474:	2800      	cmp	r0, #0
   83476:	f000 82f5 	beq.w	83a64 <_svfprintf_r+0x1498>
   8347a:	2340      	movs	r3, #64	; 0x40
   8347c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8347e:	6153      	str	r3, [r2, #20]
   83480:	f7ff b8bb 	b.w	825fa <_svfprintf_r+0x2e>
   83484:	aa25      	add	r2, sp, #148	; 0x94
   83486:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8348a:	f002 fe6d 	bl	86168 <__ssprint_r>
   8348e:	2800      	cmp	r0, #0
   83490:	f47f a967 	bne.w	82762 <_svfprintf_r+0x196>
   83494:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
   83498:	3301      	adds	r3, #1
   8349a:	9309      	str	r3, [sp, #36]	; 0x24
   8349c:	f10d 09d0 	add.w	r9, sp, #208	; 0xd0
   834a0:	4656      	mov	r6, sl
   834a2:	e575      	b.n	82f90 <_svfprintf_r+0x9c4>
   834a4:	aa25      	add	r2, sp, #148	; 0x94
   834a6:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   834aa:	f002 fe5d 	bl	86168 <__ssprint_r>
   834ae:	2800      	cmp	r0, #0
   834b0:	f47f a957 	bne.w	82762 <_svfprintf_r+0x196>
   834b4:	46d1      	mov	r9, sl
   834b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   834b8:	e4a1      	b.n	82dfe <_svfprintf_r+0x832>
   834ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
   834bc:	9e11      	ldr	r6, [sp, #68]	; 0x44
   834be:	2b06      	cmp	r3, #6
   834c0:	bf28      	it	cs
   834c2:	2306      	movcs	r3, #6
   834c4:	9308      	str	r3, [sp, #32]
   834c6:	930e      	str	r3, [sp, #56]	; 0x38
   834c8:	4bbe      	ldr	r3, [pc, #760]	; (837c4 <_svfprintf_r+0x11f8>)
   834ca:	9609      	str	r6, [sp, #36]	; 0x24
   834cc:	940f      	str	r4, [sp, #60]	; 0x3c
   834ce:	f8cd 801c 	str.w	r8, [sp, #28]
   834d2:	9612      	str	r6, [sp, #72]	; 0x48
   834d4:	9311      	str	r3, [sp, #68]	; 0x44
   834d6:	f7ff b9d8 	b.w	8288a <_svfprintf_r+0x2be>
   834da:	9b11      	ldr	r3, [sp, #68]	; 0x44
   834dc:	ebaa 0303 	sub.w	r3, sl, r3
   834e0:	930e      	str	r3, [sp, #56]	; 0x38
   834e2:	f7ff ba46 	b.w	82972 <_svfprintf_r+0x3a6>
   834e6:	9a26      	ldr	r2, [sp, #152]	; 0x98
   834e8:	9919      	ldr	r1, [sp, #100]	; 0x64
   834ea:	3201      	adds	r2, #1
   834ec:	981a      	ldr	r0, [sp, #104]	; 0x68
   834ee:	440c      	add	r4, r1
   834f0:	2a07      	cmp	r2, #7
   834f2:	9427      	str	r4, [sp, #156]	; 0x9c
   834f4:	e9c9 0100 	strd	r0, r1, [r9]
   834f8:	9226      	str	r2, [sp, #152]	; 0x98
   834fa:	f300 812c 	bgt.w	83756 <_svfprintf_r+0x118a>
   834fe:	f109 0908 	add.w	r9, r9, #8
   83502:	e606      	b.n	83112 <_svfprintf_r+0xb46>
   83504:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83506:	601a      	str	r2, [r3, #0]
   83508:	f7ff b888 	b.w	8261c <_svfprintf_r+0x50>
   8350c:	aa25      	add	r2, sp, #148	; 0x94
   8350e:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83512:	f002 fe29 	bl	86168 <__ssprint_r>
   83516:	2800      	cmp	r0, #0
   83518:	f47f a923 	bne.w	82762 <_svfprintf_r+0x196>
   8351c:	46d1      	mov	r9, sl
   8351e:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   83522:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83524:	f7ff ba8e 	b.w	82a44 <_svfprintf_r+0x478>
   83528:	aa25      	add	r2, sp, #148	; 0x94
   8352a:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8352e:	f002 fe1b 	bl	86168 <__ssprint_r>
   83532:	2800      	cmp	r0, #0
   83534:	f47f a915 	bne.w	82762 <_svfprintf_r+0x196>
   83538:	e9dd 5426 	ldrd	r5, r4, [sp, #152]	; 0x98
   8353c:	4656      	mov	r6, sl
   8353e:	e4fa      	b.n	82f36 <_svfprintf_r+0x96a>
   83540:	aa25      	add	r2, sp, #148	; 0x94
   83542:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83546:	f002 fe0f 	bl	86168 <__ssprint_r>
   8354a:	2800      	cmp	r0, #0
   8354c:	f47f a909 	bne.w	82762 <_svfprintf_r+0x196>
   83550:	e9dd 5426 	ldrd	r5, r4, [sp, #152]	; 0x98
   83554:	4656      	mov	r6, sl
   83556:	e4fa      	b.n	82f4e <_svfprintf_r+0x982>
   83558:	2b01      	cmp	r3, #1
   8355a:	f47f a9ec 	bne.w	82936 <_svfprintf_r+0x36a>
   8355e:	e537      	b.n	82fd0 <_svfprintf_r+0xa04>
   83560:	46a0      	mov	r8, r4
   83562:	461c      	mov	r4, r3
   83564:	3201      	adds	r2, #1
   83566:	442c      	add	r4, r5
   83568:	2a07      	cmp	r2, #7
   8356a:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   8356e:	e9c9 8500 	strd	r8, r5, [r9]
   83572:	f77f aae0 	ble.w	82b36 <_svfprintf_r+0x56a>
   83576:	e55f      	b.n	83038 <_svfprintf_r+0xa6c>
   83578:	aa25      	add	r2, sp, #148	; 0x94
   8357a:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8357e:	f002 fdf3 	bl	86168 <__ssprint_r>
   83582:	2800      	cmp	r0, #0
   83584:	f47f a8ed 	bne.w	82762 <_svfprintf_r+0x196>
   83588:	46d1      	mov	r9, sl
   8358a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8358c:	f7ff ba7e 	b.w	82a8c <_svfprintf_r+0x4c0>
   83590:	2001      	movs	r0, #1
   83592:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83594:	498c      	ldr	r1, [pc, #560]	; (837c8 <_svfprintf_r+0x11fc>)
   83596:	4402      	add	r2, r0
   83598:	4404      	add	r4, r0
   8359a:	2a07      	cmp	r2, #7
   8359c:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   835a0:	e9c9 1000 	strd	r1, r0, [r9]
   835a4:	f73f ad1c 	bgt.w	82fe0 <_svfprintf_r+0xa14>
   835a8:	f109 0908 	add.w	r9, r9, #8
   835ac:	e523      	b.n	82ff6 <_svfprintf_r+0xa2a>
   835ae:	aa25      	add	r2, sp, #148	; 0x94
   835b0:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   835b4:	f002 fdd8 	bl	86168 <__ssprint_r>
   835b8:	2800      	cmp	r0, #0
   835ba:	f47f a8d2 	bne.w	82762 <_svfprintf_r+0x196>
   835be:	46d1      	mov	r9, sl
   835c0:	e409      	b.n	82dd6 <_svfprintf_r+0x80a>
   835c2:	f8df 8208 	ldr.w	r8, [pc, #520]	; 837cc <_svfprintf_r+0x1200>
   835c6:	f7ff ba9b 	b.w	82b00 <_svfprintf_r+0x534>
   835ca:	46b0      	mov	r8, r6
   835cc:	461e      	mov	r6, r3
   835ce:	1c6b      	adds	r3, r5, #1
   835d0:	4614      	mov	r4, r2
   835d2:	9309      	str	r3, [sp, #36]	; 0x24
   835d4:	f106 0208 	add.w	r2, r6, #8
   835d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   835da:	443c      	add	r4, r7
   835dc:	2b07      	cmp	r3, #7
   835de:	9427      	str	r4, [sp, #156]	; 0x9c
   835e0:	e9c6 8700 	strd	r8, r7, [r6]
   835e4:	9326      	str	r3, [sp, #152]	; 0x98
   835e6:	f73f af4d 	bgt.w	83484 <_svfprintf_r+0xeb8>
   835ea:	3301      	adds	r3, #1
   835ec:	9309      	str	r3, [sp, #36]	; 0x24
   835ee:	f102 0908 	add.w	r9, r2, #8
   835f2:	4616      	mov	r6, r2
   835f4:	e4cc      	b.n	82f90 <_svfprintf_r+0x9c4>
   835f6:	46a0      	mov	r8, r4
   835f8:	461c      	mov	r4, r3
   835fa:	3201      	adds	r2, #1
   835fc:	442c      	add	r4, r5
   835fe:	2a07      	cmp	r2, #7
   83600:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   83604:	e9c9 8500 	strd	r8, r5, [r9]
   83608:	f300 813f 	bgt.w	8388a <_svfprintf_r+0x12be>
   8360c:	f109 0908 	add.w	r9, r9, #8
   83610:	e576      	b.n	83100 <_svfprintf_r+0xb34>
   83612:	9811      	ldr	r0, [sp, #68]	; 0x44
   83614:	9509      	str	r5, [sp, #36]	; 0x24
   83616:	f7fe ffab 	bl	82570 <strlen>
   8361a:	f8cd 801c 	str.w	r8, [sp, #28]
   8361e:	e9cd 040e 	strd	r0, r4, [sp, #56]	; 0x38
   83622:	4603      	mov	r3, r0
   83624:	f7ff b92b 	b.w	8287e <_svfprintf_r+0x2b2>
   83628:	9a07      	ldr	r2, [sp, #28]
   8362a:	07d0      	lsls	r0, r2, #31
   8362c:	f57f aa85 	bpl.w	82b3a <_svfprintf_r+0x56e>
   83630:	e4e6      	b.n	83000 <_svfprintf_r+0xa34>
   83632:	2a00      	cmp	r2, #0
   83634:	4613      	mov	r3, r2
   83636:	bf08      	it	eq
   83638:	2301      	moveq	r3, #1
   8363a:	9309      	str	r3, [sp, #36]	; 0x24
   8363c:	e68d      	b.n	8335a <_svfprintf_r+0xd8e>
   8363e:	9909      	ldr	r1, [sp, #36]	; 0x24
   83640:	9000      	str	r0, [sp, #0]
   83642:	1c4c      	adds	r4, r1, #1
   83644:	a923      	add	r1, sp, #140	; 0x8c
   83646:	a820      	add	r0, sp, #128	; 0x80
   83648:	9104      	str	r1, [sp, #16]
   8364a:	a91f      	add	r1, sp, #124	; 0x7c
   8364c:	e9cd 1002 	strd	r1, r0, [sp, #8]
   83650:	9401      	str	r4, [sp, #4]
   83652:	980d      	ldr	r0, [sp, #52]	; 0x34
   83654:	940e      	str	r4, [sp, #56]	; 0x38
   83656:	f000 fafd 	bl	83c54 <_dtoa_r>
   8365a:	9011      	str	r0, [sp, #68]	; 0x44
   8365c:	2f47      	cmp	r7, #71	; 0x47
   8365e:	f040 81e3 	bne.w	83a28 <_svfprintf_r+0x145c>
   83662:	f018 0f01 	tst.w	r8, #1
   83666:	f000 81d8 	beq.w	83a1a <_svfprintf_r+0x144e>
   8366a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8366c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   8366e:	2f46      	cmp	r7, #70	; 0x46
   83670:	eb03 0402 	add.w	r4, r3, r2
   83674:	f47f aea2 	bne.w	833bc <_svfprintf_r+0xdf0>
   83678:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8367a:	781b      	ldrb	r3, [r3, #0]
   8367c:	2b30      	cmp	r3, #48	; 0x30
   8367e:	f000 8169 	beq.w	83954 <_svfprintf_r+0x1388>
   83682:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83684:	441c      	add	r4, r3
   83686:	e699      	b.n	833bc <_svfprintf_r+0xdf0>
   83688:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8368a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8368c:	9212      	str	r2, [sp, #72]	; 0x48
   8368e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   83690:	1a9b      	subs	r3, r3, r2
   83692:	9313      	str	r3, [sp, #76]	; 0x4c
   83694:	9b08      	ldr	r3, [sp, #32]
   83696:	2b47      	cmp	r3, #71	; 0x47
   83698:	d106      	bne.n	836a8 <_svfprintf_r+0x10dc>
   8369a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8369c:	1cda      	adds	r2, r3, #3
   8369e:	db02      	blt.n	836a6 <_svfprintf_r+0x10da>
   836a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   836a2:	429a      	cmp	r2, r3
   836a4:	da34      	bge.n	83710 <_svfprintf_r+0x1144>
   836a6:	3f02      	subs	r7, #2
   836a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   836aa:	f88d 7084 	strb.w	r7, [sp, #132]	; 0x84
   836ae:	3b01      	subs	r3, #1
   836b0:	2b00      	cmp	r3, #0
   836b2:	bfb4      	ite	lt
   836b4:	222d      	movlt	r2, #45	; 0x2d
   836b6:	222b      	movge	r2, #43	; 0x2b
   836b8:	931f      	str	r3, [sp, #124]	; 0x7c
   836ba:	bfb8      	it	lt
   836bc:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   836be:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   836c2:	bfb8      	it	lt
   836c4:	f1c3 0301 	rsblt	r3, r3, #1
   836c8:	2b09      	cmp	r3, #9
   836ca:	f300 810d 	bgt.w	838e8 <_svfprintf_r+0x131c>
   836ce:	2230      	movs	r2, #48	; 0x30
   836d0:	4413      	add	r3, r2
   836d2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   836d6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   836da:	ab22      	add	r3, sp, #136	; 0x88
   836dc:	aa21      	add	r2, sp, #132	; 0x84
   836de:	1a9b      	subs	r3, r3, r2
   836e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   836e2:	931b      	str	r3, [sp, #108]	; 0x6c
   836e4:	2a01      	cmp	r2, #1
   836e6:	4413      	add	r3, r2
   836e8:	930e      	str	r3, [sp, #56]	; 0x38
   836ea:	f340 8150 	ble.w	8398e <_svfprintf_r+0x13c2>
   836ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   836f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   836f2:	4413      	add	r3, r2
   836f4:	930e      	str	r3, [sp, #56]	; 0x38
   836f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   836fa:	9308      	str	r3, [sp, #32]
   836fc:	2300      	movs	r3, #0
   836fe:	9312      	str	r3, [sp, #72]	; 0x48
   83700:	e681      	b.n	83406 <_svfprintf_r+0xe3a>
   83702:	262d      	movs	r6, #45	; 0x2d
   83704:	2300      	movs	r3, #0
   83706:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
   8370a:	9309      	str	r3, [sp, #36]	; 0x24
   8370c:	f7ff b8c0 	b.w	82890 <_svfprintf_r+0x2c4>
   83710:	e9dd 3112 	ldrd	r3, r1, [sp, #72]	; 0x48
   83714:	428b      	cmp	r3, r1
   83716:	f2c0 8093 	blt.w	83840 <_svfprintf_r+0x1274>
   8371a:	f018 0f01 	tst.w	r8, #1
   8371e:	f000 8110 	beq.w	83942 <_svfprintf_r+0x1376>
   83722:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83724:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83726:	2767      	movs	r7, #103	; 0x67
   83728:	4413      	add	r3, r2
   8372a:	930e      	str	r3, [sp, #56]	; 0x38
   8372c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83730:	9308      	str	r3, [sp, #32]
   83732:	e668      	b.n	83406 <_svfprintf_r+0xe3a>
   83734:	232d      	movs	r3, #45	; 0x2d
   83736:	461e      	mov	r6, r3
   83738:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8373c:	f7ff bacd 	b.w	82cda <_svfprintf_r+0x70e>
   83740:	aa25      	add	r2, sp, #148	; 0x94
   83742:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83746:	f002 fd0f 	bl	86168 <__ssprint_r>
   8374a:	2800      	cmp	r0, #0
   8374c:	f47f a809 	bne.w	82762 <_svfprintf_r+0x196>
   83750:	46d1      	mov	r9, sl
   83752:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83754:	e4cc      	b.n	830f0 <_svfprintf_r+0xb24>
   83756:	aa25      	add	r2, sp, #148	; 0x94
   83758:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8375c:	f002 fd04 	bl	86168 <__ssprint_r>
   83760:	2800      	cmp	r0, #0
   83762:	f47e affe 	bne.w	82762 <_svfprintf_r+0x196>
   83766:	46d1      	mov	r9, sl
   83768:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8376a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8376c:	e4d1      	b.n	83112 <_svfprintf_r+0xb46>
   8376e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83770:	42a3      	cmp	r3, r4
   83772:	f4bf ae2d 	bcs.w	833d0 <_svfprintf_r+0xe04>
   83776:	2130      	movs	r1, #48	; 0x30
   83778:	1c5a      	adds	r2, r3, #1
   8377a:	9223      	str	r2, [sp, #140]	; 0x8c
   8377c:	7019      	strb	r1, [r3, #0]
   8377e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83780:	429c      	cmp	r4, r3
   83782:	d8f9      	bhi.n	83778 <_svfprintf_r+0x11ac>
   83784:	e624      	b.n	833d0 <_svfprintf_r+0xe04>
   83786:	aa25      	add	r2, sp, #148	; 0x94
   83788:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8378c:	f002 fcec 	bl	86168 <__ssprint_r>
   83790:	2800      	cmp	r0, #0
   83792:	f47e afe6 	bne.w	82762 <_svfprintf_r+0x196>
   83796:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
   8379a:	3301      	adds	r3, #1
   8379c:	4656      	mov	r6, sl
   8379e:	9309      	str	r3, [sp, #36]	; 0x24
   837a0:	f10d 09d0 	add.w	r9, sp, #208	; 0xd0
   837a4:	f7ff bbf4 	b.w	82f90 <_svfprintf_r+0x9c4>
   837a8:	aa25      	add	r2, sp, #148	; 0x94
   837aa:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   837ae:	f002 fcdb 	bl	86168 <__ssprint_r>
   837b2:	2800      	cmp	r0, #0
   837b4:	f47e afd5 	bne.w	82762 <_svfprintf_r+0x196>
   837b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   837ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   837bc:	46d1      	mov	r9, sl
   837be:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   837c0:	1ad3      	subs	r3, r2, r3
   837c2:	e4bf      	b.n	83144 <_svfprintf_r+0xb78>
   837c4:	00087710 	.word	0x00087710
   837c8:	00087718 	.word	0x00087718
   837cc:	000876c8 	.word	0x000876c8
   837d0:	f8df 82dc 	ldr.w	r8, [pc, #732]	; 83ab0 <_svfprintf_r+0x14e4>
   837d4:	f7ff bb84 	b.w	82ee0 <_svfprintf_r+0x914>
   837d8:	2306      	movs	r3, #6
   837da:	9309      	str	r3, [sp, #36]	; 0x24
   837dc:	e5bd      	b.n	8335a <_svfprintf_r+0xd8e>
   837de:	2003      	movs	r0, #3
   837e0:	9c09      	ldr	r4, [sp, #36]	; 0x24
   837e2:	a923      	add	r1, sp, #140	; 0x8c
   837e4:	e9cd 0400 	strd	r0, r4, [sp]
   837e8:	9104      	str	r1, [sp, #16]
   837ea:	a820      	add	r0, sp, #128	; 0x80
   837ec:	a91f      	add	r1, sp, #124	; 0x7c
   837ee:	e9cd 1002 	strd	r1, r0, [sp, #8]
   837f2:	4632      	mov	r2, r6
   837f4:	462b      	mov	r3, r5
   837f6:	980d      	ldr	r0, [sp, #52]	; 0x34
   837f8:	f000 fa2c 	bl	83c54 <_dtoa_r>
   837fc:	940e      	str	r4, [sp, #56]	; 0x38
   837fe:	9011      	str	r0, [sp, #68]	; 0x44
   83800:	1904      	adds	r4, r0, r4
   83802:	e739      	b.n	83678 <_svfprintf_r+0x10ac>
   83804:	2300      	movs	r3, #0
   83806:	9309      	str	r3, [sp, #36]	; 0x24
   83808:	f7fe bf3c 	b.w	82684 <_svfprintf_r+0xb8>
   8380c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8380e:	940f      	str	r4, [sp, #60]	; 0x3c
   83810:	9308      	str	r3, [sp, #32]
   83812:	930e      	str	r3, [sp, #56]	; 0x38
   83814:	9009      	str	r0, [sp, #36]	; 0x24
   83816:	f8cd 801c 	str.w	r8, [sp, #28]
   8381a:	9012      	str	r0, [sp, #72]	; 0x48
   8381c:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   83820:	f7ff b833 	b.w	8288a <_svfprintf_r+0x2be>
   83824:	aa25      	add	r2, sp, #148	; 0x94
   83826:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8382a:	f002 fc9d 	bl	86168 <__ssprint_r>
   8382e:	2800      	cmp	r0, #0
   83830:	f47e af97 	bne.w	82762 <_svfprintf_r+0x196>
   83834:	e9dd 2426 	ldrd	r2, r4, [sp, #152]	; 0x98
   83838:	46d1      	mov	r9, sl
   8383a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8383c:	f7ff bbee 	b.w	8301c <_svfprintf_r+0xa50>
   83840:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83842:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83844:	4413      	add	r3, r2
   83846:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83848:	930e      	str	r3, [sp, #56]	; 0x38
   8384a:	2a00      	cmp	r2, #0
   8384c:	dc06      	bgt.n	8385c <_svfprintf_r+0x1290>
   8384e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83850:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83852:	f1c3 0301 	rsb	r3, r3, #1
   83856:	441a      	add	r2, r3
   83858:	4613      	mov	r3, r2
   8385a:	920e      	str	r2, [sp, #56]	; 0x38
   8385c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83860:	9308      	str	r3, [sp, #32]
   83862:	2767      	movs	r7, #103	; 0x67
   83864:	e5cf      	b.n	83406 <_svfprintf_r+0xe3a>
   83866:	2003      	movs	r0, #3
   83868:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8386a:	a923      	add	r1, sp, #140	; 0x8c
   8386c:	e9cd 0400 	strd	r0, r4, [sp]
   83870:	9104      	str	r1, [sp, #16]
   83872:	a820      	add	r0, sp, #128	; 0x80
   83874:	a91f      	add	r1, sp, #124	; 0x7c
   83876:	e9cd 1002 	strd	r1, r0, [sp, #8]
   8387a:	4632      	mov	r2, r6
   8387c:	462b      	mov	r3, r5
   8387e:	980d      	ldr	r0, [sp, #52]	; 0x34
   83880:	f000 f9e8 	bl	83c54 <_dtoa_r>
   83884:	940e      	str	r4, [sp, #56]	; 0x38
   83886:	9011      	str	r0, [sp, #68]	; 0x44
   83888:	e6ef      	b.n	8366a <_svfprintf_r+0x109e>
   8388a:	aa25      	add	r2, sp, #148	; 0x94
   8388c:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83890:	f002 fc6a 	bl	86168 <__ssprint_r>
   83894:	2800      	cmp	r0, #0
   83896:	f47e af64 	bne.w	82762 <_svfprintf_r+0x196>
   8389a:	46d1      	mov	r9, sl
   8389c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8389e:	e42f      	b.n	83100 <_svfprintf_r+0xb34>
   838a0:	425d      	negs	r5, r3
   838a2:	3310      	adds	r3, #16
   838a4:	f280 80d1 	bge.w	83a4a <_svfprintf_r+0x147e>
   838a8:	f8df 8204 	ldr.w	r8, [pc, #516]	; 83ab0 <_svfprintf_r+0x14e4>
   838ac:	4623      	mov	r3, r4
   838ae:	2610      	movs	r6, #16
   838b0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   838b2:	4644      	mov	r4, r8
   838b4:	e004      	b.n	838c0 <_svfprintf_r+0x12f4>
   838b6:	f109 0908 	add.w	r9, r9, #8
   838ba:	3d10      	subs	r5, #16
   838bc:	2d10      	cmp	r5, #16
   838be:	dd58      	ble.n	83972 <_svfprintf_r+0x13a6>
   838c0:	3201      	adds	r2, #1
   838c2:	3310      	adds	r3, #16
   838c4:	2a07      	cmp	r2, #7
   838c6:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   838ca:	e9c9 4600 	strd	r4, r6, [r9]
   838ce:	ddf2      	ble.n	838b6 <_svfprintf_r+0x12ea>
   838d0:	aa25      	add	r2, sp, #148	; 0x94
   838d2:	990c      	ldr	r1, [sp, #48]	; 0x30
   838d4:	4638      	mov	r0, r7
   838d6:	f002 fc47 	bl	86168 <__ssprint_r>
   838da:	2800      	cmp	r0, #0
   838dc:	f47e af41 	bne.w	82762 <_svfprintf_r+0x196>
   838e0:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   838e4:	46d1      	mov	r9, sl
   838e6:	e7e8      	b.n	838ba <_svfprintf_r+0x12ee>
   838e8:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   838ec:	4601      	mov	r1, r0
   838ee:	4c6d      	ldr	r4, [pc, #436]	; (83aa4 <_svfprintf_r+0x14d8>)
   838f0:	e000      	b.n	838f4 <_svfprintf_r+0x1328>
   838f2:	4611      	mov	r1, r2
   838f4:	fba4 2503 	umull	r2, r5, r4, r3
   838f8:	08ed      	lsrs	r5, r5, #3
   838fa:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   838fe:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   83902:	3230      	adds	r2, #48	; 0x30
   83904:	2d09      	cmp	r5, #9
   83906:	f801 2c01 	strb.w	r2, [r1, #-1]
   8390a:	462b      	mov	r3, r5
   8390c:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   83910:	dcef      	bgt.n	838f2 <_svfprintf_r+0x1326>
   83912:	3330      	adds	r3, #48	; 0x30
   83914:	3902      	subs	r1, #2
   83916:	b2dc      	uxtb	r4, r3
   83918:	4288      	cmp	r0, r1
   8391a:	f802 4c01 	strb.w	r4, [r2, #-1]
   8391e:	f240 8097 	bls.w	83a50 <_svfprintf_r+0x1484>
   83922:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   83926:	4613      	mov	r3, r2
   83928:	e001      	b.n	8392e <_svfprintf_r+0x1362>
   8392a:	f813 4b01 	ldrb.w	r4, [r3], #1
   8392e:	4298      	cmp	r0, r3
   83930:	f801 4b01 	strb.w	r4, [r1], #1
   83934:	d1f9      	bne.n	8392a <_svfprintf_r+0x135e>
   83936:	ab25      	add	r3, sp, #148	; 0x94
   83938:	1a9b      	subs	r3, r3, r2
   8393a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   8393e:	4413      	add	r3, r2
   83940:	e6cc      	b.n	836dc <_svfprintf_r+0x1110>
   83942:	ea23 72e3 	bic.w	r2, r3, r3, asr #31
   83946:	9208      	str	r2, [sp, #32]
   83948:	930e      	str	r3, [sp, #56]	; 0x38
   8394a:	2767      	movs	r7, #103	; 0x67
   8394c:	e55b      	b.n	83406 <_svfprintf_r+0xe3a>
   8394e:	f8df 8160 	ldr.w	r8, [pc, #352]	; 83ab0 <_svfprintf_r+0x14e4>
   83952:	e607      	b.n	83564 <_svfprintf_r+0xf98>
   83954:	9a16      	ldr	r2, [sp, #88]	; 0x58
   83956:	4630      	mov	r0, r6
   83958:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   8395a:	4629      	mov	r1, r5
   8395c:	f003 fe24 	bl	875a8 <__aeabi_dcmpeq>
   83960:	2800      	cmp	r0, #0
   83962:	f47f ae8e 	bne.w	83682 <_svfprintf_r+0x10b6>
   83966:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83968:	f1c3 0301 	rsb	r3, r3, #1
   8396c:	931f      	str	r3, [sp, #124]	; 0x7c
   8396e:	441c      	add	r4, r3
   83970:	e524      	b.n	833bc <_svfprintf_r+0xdf0>
   83972:	46a0      	mov	r8, r4
   83974:	461c      	mov	r4, r3
   83976:	3201      	adds	r2, #1
   83978:	442c      	add	r4, r5
   8397a:	2a07      	cmp	r2, #7
   8397c:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   83980:	e9c9 8500 	strd	r8, r5, [r9]
   83984:	dc3c      	bgt.n	83a00 <_svfprintf_r+0x1434>
   83986:	f109 0908 	add.w	r9, r9, #8
   8398a:	f7ff bb4a 	b.w	83022 <_svfprintf_r+0xa56>
   8398e:	f018 0301 	ands.w	r3, r8, #1
   83992:	9312      	str	r3, [sp, #72]	; 0x48
   83994:	f47f aeab 	bne.w	836ee <_svfprintf_r+0x1122>
   83998:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8399a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8399e:	9308      	str	r3, [sp, #32]
   839a0:	e531      	b.n	83406 <_svfprintf_r+0xe3a>
   839a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   839a4:	2103      	movs	r1, #3
   839a6:	2b00      	cmp	r3, #0
   839a8:	bfb8      	it	lt
   839aa:	232d      	movlt	r3, #45	; 0x2d
   839ac:	f04f 0000 	mov.w	r0, #0
   839b0:	bfba      	itte	lt
   839b2:	461e      	movlt	r6, r3
   839b4:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   839b8:	f89d 6077 	ldrbge.w	r6, [sp, #119]	; 0x77
   839bc:	e9cd 1008 	strd	r1, r0, [sp, #32]
   839c0:	4a39      	ldr	r2, [pc, #228]	; (83aa8 <_svfprintf_r+0x14dc>)
   839c2:	4b3a      	ldr	r3, [pc, #232]	; (83aac <_svfprintf_r+0x14e0>)
   839c4:	f7ff b98f 	b.w	82ce6 <_svfprintf_r+0x71a>
   839c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   839ca:	9a19      	ldr	r2, [sp, #100]	; 0x64
   839cc:	4413      	add	r3, r2
   839ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
   839d0:	441a      	add	r2, r3
   839d2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   839d6:	920e      	str	r2, [sp, #56]	; 0x38
   839d8:	9308      	str	r3, [sp, #32]
   839da:	e514      	b.n	83406 <_svfprintf_r+0xe3a>
   839dc:	b96b      	cbnz	r3, 839fa <_svfprintf_r+0x142e>
   839de:	f018 0f01 	tst.w	r8, #1
   839e2:	d10a      	bne.n	839fa <_svfprintf_r+0x142e>
   839e4:	2301      	movs	r3, #1
   839e6:	9308      	str	r3, [sp, #32]
   839e8:	930e      	str	r3, [sp, #56]	; 0x38
   839ea:	e50c      	b.n	83406 <_svfprintf_r+0xe3a>
   839ec:	464a      	mov	r2, r9
   839ee:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 83ab0 <_svfprintf_r+0x14e4>
   839f2:	e5f1      	b.n	835d8 <_svfprintf_r+0x100c>
   839f4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 83ab0 <_svfprintf_r+0x14e4>
   839f8:	e5ff      	b.n	835fa <_svfprintf_r+0x102e>
   839fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
   839fc:	3301      	adds	r3, #1
   839fe:	e7e6      	b.n	839ce <_svfprintf_r+0x1402>
   83a00:	aa25      	add	r2, sp, #148	; 0x94
   83a02:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   83a06:	f002 fbaf 	bl	86168 <__ssprint_r>
   83a0a:	2800      	cmp	r0, #0
   83a0c:	f47e aea9 	bne.w	82762 <_svfprintf_r+0x196>
   83a10:	e9dd 2426 	ldrd	r2, r4, [sp, #152]	; 0x98
   83a14:	46d1      	mov	r9, sl
   83a16:	f7ff bb04 	b.w	83022 <_svfprintf_r+0xa56>
   83a1a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83a1c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83a1e:	9212      	str	r2, [sp, #72]	; 0x48
   83a20:	9a11      	ldr	r2, [sp, #68]	; 0x44
   83a22:	1a9b      	subs	r3, r3, r2
   83a24:	9313      	str	r3, [sp, #76]	; 0x4c
   83a26:	e638      	b.n	8369a <_svfprintf_r+0x10ce>
   83a28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83a2a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   83a2c:	4413      	add	r3, r2
   83a2e:	461c      	mov	r4, r3
   83a30:	e4c4      	b.n	833bc <_svfprintf_r+0xdf0>
   83a32:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   83a34:	f89b 3001 	ldrb.w	r3, [fp, #1]
   83a38:	682c      	ldr	r4, [r5, #0]
   83a3a:	4683      	mov	fp, r0
   83a3c:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   83a40:	1d28      	adds	r0, r5, #4
   83a42:	9409      	str	r4, [sp, #36]	; 0x24
   83a44:	900f      	str	r0, [sp, #60]	; 0x3c
   83a46:	f7fe be1a 	b.w	8267e <_svfprintf_r+0xb2>
   83a4a:	f8df 8064 	ldr.w	r8, [pc, #100]	; 83ab0 <_svfprintf_r+0x14e4>
   83a4e:	e792      	b.n	83976 <_svfprintf_r+0x13aa>
   83a50:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   83a54:	e642      	b.n	836dc <_svfprintf_r+0x1110>
   83a56:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83a58:	930e      	str	r3, [sp, #56]	; 0x38
   83a5a:	e5ff      	b.n	8365c <_svfprintf_r+0x1090>
   83a5c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83a60:	f7ff b90f 	b.w	82c82 <_svfprintf_r+0x6b6>
   83a64:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   83a68:	230c      	movs	r3, #12
   83a6a:	920a      	str	r2, [sp, #40]	; 0x28
   83a6c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   83a6e:	6013      	str	r3, [r2, #0]
   83a70:	f7fe be80 	b.w	82774 <_svfprintf_r+0x1a8>
   83a74:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83a78:	f7fe bf39 	b.w	828ee <_svfprintf_r+0x322>
   83a7c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83a80:	f7fe bf0d 	b.w	8289e <_svfprintf_r+0x2d2>
   83a84:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83a88:	f7ff b93a 	b.w	82d00 <_svfprintf_r+0x734>
   83a8c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83a90:	f7ff b8db 	b.w	82c4a <_svfprintf_r+0x67e>
   83a94:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83a98:	f7ff b970 	b.w	82d7c <_svfprintf_r+0x7b0>
   83a9c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83aa0:	f7ff b892 	b.w	82bc8 <_svfprintf_r+0x5fc>
   83aa4:	cccccccd 	.word	0xcccccccd
   83aa8:	000876e4 	.word	0x000876e4
   83aac:	000876e0 	.word	0x000876e0
   83ab0:	000876c8 	.word	0x000876c8

00083ab4 <__register_exitproc>:
   83ab4:	b4f0      	push	{r4, r5, r6, r7}
   83ab6:	4c17      	ldr	r4, [pc, #92]	; (83b14 <__register_exitproc+0x60>)
   83ab8:	6825      	ldr	r5, [r4, #0]
   83aba:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   83abe:	b30c      	cbz	r4, 83b04 <__register_exitproc+0x50>
   83ac0:	6865      	ldr	r5, [r4, #4]
   83ac2:	2d1f      	cmp	r5, #31
   83ac4:	dc23      	bgt.n	83b0e <__register_exitproc+0x5a>
   83ac6:	b938      	cbnz	r0, 83ad8 <__register_exitproc+0x24>
   83ac8:	2000      	movs	r0, #0
   83aca:	1c6b      	adds	r3, r5, #1
   83acc:	3502      	adds	r5, #2
   83ace:	6063      	str	r3, [r4, #4]
   83ad0:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   83ad4:	bcf0      	pop	{r4, r5, r6, r7}
   83ad6:	4770      	bx	lr
   83ad8:	2601      	movs	r6, #1
   83ada:	eb04 0c85 	add.w	ip, r4, r5, lsl #2
   83ade:	f8cc 2088 	str.w	r2, [ip, #136]	; 0x88
   83ae2:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
   83ae6:	fa06 f205 	lsl.w	r2, r6, r5
   83aea:	4317      	orrs	r7, r2
   83aec:	2802      	cmp	r0, #2
   83aee:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
   83af2:	f8cc 3108 	str.w	r3, [ip, #264]	; 0x108
   83af6:	d1e7      	bne.n	83ac8 <__register_exitproc+0x14>
   83af8:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   83afc:	431a      	orrs	r2, r3
   83afe:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   83b02:	e7e1      	b.n	83ac8 <__register_exitproc+0x14>
   83b04:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
   83b08:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   83b0c:	e7d8      	b.n	83ac0 <__register_exitproc+0xc>
   83b0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   83b12:	e7df      	b.n	83ad4 <__register_exitproc+0x20>
   83b14:	000876b4 	.word	0x000876b4

00083b18 <register_fini>:
   83b18:	4b02      	ldr	r3, [pc, #8]	; (83b24 <register_fini+0xc>)
   83b1a:	b113      	cbz	r3, 83b22 <register_fini+0xa>
   83b1c:	4802      	ldr	r0, [pc, #8]	; (83b28 <register_fini+0x10>)
   83b1e:	f7fe bc59 	b.w	823d4 <atexit>
   83b22:	4770      	bx	lr
   83b24:	00000000 	.word	0x00000000
   83b28:	000823e1 	.word	0x000823e1
   83b2c:	00000000 	.word	0x00000000

00083b30 <quorem>:
   83b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b34:	6903      	ldr	r3, [r0, #16]
   83b36:	690e      	ldr	r6, [r1, #16]
   83b38:	b083      	sub	sp, #12
   83b3a:	42b3      	cmp	r3, r6
   83b3c:	f2c0 8086 	blt.w	83c4c <quorem+0x11c>
   83b40:	3e01      	subs	r6, #1
   83b42:	f101 0814 	add.w	r8, r1, #20
   83b46:	f100 0914 	add.w	r9, r0, #20
   83b4a:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
   83b4e:	f859 7026 	ldr.w	r7, [r9, r6, lsl #2]
   83b52:	3301      	adds	r3, #1
   83b54:	fbb7 f7f3 	udiv	r7, r7, r3
   83b58:	00b3      	lsls	r3, r6, #2
   83b5a:	9300      	str	r3, [sp, #0]
   83b5c:	eb08 0a03 	add.w	sl, r8, r3
   83b60:	444b      	add	r3, r9
   83b62:	9301      	str	r3, [sp, #4]
   83b64:	2f00      	cmp	r7, #0
   83b66:	d03b      	beq.n	83be0 <quorem+0xb0>
   83b68:	2300      	movs	r3, #0
   83b6a:	46c6      	mov	lr, r8
   83b6c:	461c      	mov	r4, r3
   83b6e:	46cc      	mov	ip, r9
   83b70:	f85e 2b04 	ldr.w	r2, [lr], #4
   83b74:	f8dc 5000 	ldr.w	r5, [ip]
   83b78:	fa1f fb82 	uxth.w	fp, r2
   83b7c:	fb07 330b 	mla	r3, r7, fp, r3
   83b80:	0c12      	lsrs	r2, r2, #16
   83b82:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   83b86:	fb07 bb02 	mla	fp, r7, r2, fp
   83b8a:	b29a      	uxth	r2, r3
   83b8c:	1aa2      	subs	r2, r4, r2
   83b8e:	b2ab      	uxth	r3, r5
   83b90:	fa1f f48b 	uxth.w	r4, fp
   83b94:	441a      	add	r2, r3
   83b96:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   83b9a:	eb04 4422 	add.w	r4, r4, r2, asr #16
   83b9e:	b292      	uxth	r2, r2
   83ba0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   83ba4:	45f2      	cmp	sl, lr
   83ba6:	f84c 2b04 	str.w	r2, [ip], #4
   83baa:	ea4f 4424 	mov.w	r4, r4, asr #16
   83bae:	ea4f 431b 	mov.w	r3, fp, lsr #16
   83bb2:	d2dd      	bcs.n	83b70 <quorem+0x40>
   83bb4:	9b00      	ldr	r3, [sp, #0]
   83bb6:	f859 3003 	ldr.w	r3, [r9, r3]
   83bba:	b98b      	cbnz	r3, 83be0 <quorem+0xb0>
   83bbc:	9a01      	ldr	r2, [sp, #4]
   83bbe:	1f13      	subs	r3, r2, #4
   83bc0:	4599      	cmp	r9, r3
   83bc2:	d20c      	bcs.n	83bde <quorem+0xae>
   83bc4:	f852 3c04 	ldr.w	r3, [r2, #-4]
   83bc8:	b94b      	cbnz	r3, 83bde <quorem+0xae>
   83bca:	f1a2 0308 	sub.w	r3, r2, #8
   83bce:	e002      	b.n	83bd6 <quorem+0xa6>
   83bd0:	681a      	ldr	r2, [r3, #0]
   83bd2:	3b04      	subs	r3, #4
   83bd4:	b91a      	cbnz	r2, 83bde <quorem+0xae>
   83bd6:	4599      	cmp	r9, r3
   83bd8:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
   83bdc:	d3f8      	bcc.n	83bd0 <quorem+0xa0>
   83bde:	6106      	str	r6, [r0, #16]
   83be0:	4604      	mov	r4, r0
   83be2:	f001 fee9 	bl	859b8 <__mcmp>
   83be6:	2800      	cmp	r0, #0
   83be8:	db2c      	blt.n	83c44 <quorem+0x114>
   83bea:	464d      	mov	r5, r9
   83bec:	2300      	movs	r3, #0
   83bee:	3701      	adds	r7, #1
   83bf0:	f858 1b04 	ldr.w	r1, [r8], #4
   83bf4:	6828      	ldr	r0, [r5, #0]
   83bf6:	b28a      	uxth	r2, r1
   83bf8:	1a9a      	subs	r2, r3, r2
   83bfa:	0c0b      	lsrs	r3, r1, #16
   83bfc:	b281      	uxth	r1, r0
   83bfe:	440a      	add	r2, r1
   83c00:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   83c04:	eb03 4322 	add.w	r3, r3, r2, asr #16
   83c08:	b292      	uxth	r2, r2
   83c0a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   83c0e:	45c2      	cmp	sl, r8
   83c10:	f845 2b04 	str.w	r2, [r5], #4
   83c14:	ea4f 4323 	mov.w	r3, r3, asr #16
   83c18:	d2ea      	bcs.n	83bf0 <quorem+0xc0>
   83c1a:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
   83c1e:	eb09 0386 	add.w	r3, r9, r6, lsl #2
   83c22:	b97a      	cbnz	r2, 83c44 <quorem+0x114>
   83c24:	1f1a      	subs	r2, r3, #4
   83c26:	4591      	cmp	r9, r2
   83c28:	d20b      	bcs.n	83c42 <quorem+0x112>
   83c2a:	f853 2c04 	ldr.w	r2, [r3, #-4]
   83c2e:	b942      	cbnz	r2, 83c42 <quorem+0x112>
   83c30:	3b08      	subs	r3, #8
   83c32:	e002      	b.n	83c3a <quorem+0x10a>
   83c34:	681a      	ldr	r2, [r3, #0]
   83c36:	3b04      	subs	r3, #4
   83c38:	b91a      	cbnz	r2, 83c42 <quorem+0x112>
   83c3a:	4599      	cmp	r9, r3
   83c3c:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
   83c40:	d3f8      	bcc.n	83c34 <quorem+0x104>
   83c42:	6126      	str	r6, [r4, #16]
   83c44:	4638      	mov	r0, r7
   83c46:	b003      	add	sp, #12
   83c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83c4c:	2000      	movs	r0, #0
   83c4e:	b003      	add	sp, #12
   83c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00083c54 <_dtoa_r>:
   83c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83c58:	461f      	mov	r7, r3
   83c5a:	4616      	mov	r6, r2
   83c5c:	6c03      	ldr	r3, [r0, #64]	; 0x40
   83c5e:	b099      	sub	sp, #100	; 0x64
   83c60:	4604      	mov	r4, r0
   83c62:	e9cd 6702 	strd	r6, r7, [sp, #8]
   83c66:	b14b      	cbz	r3, 83c7c <_dtoa_r+0x28>
   83c68:	2201      	movs	r2, #1
   83c6a:	6c45      	ldr	r5, [r0, #68]	; 0x44
   83c6c:	4619      	mov	r1, r3
   83c6e:	40aa      	lsls	r2, r5
   83c70:	e9c3 5201 	strd	r5, r2, [r3, #4]
   83c74:	f001 fc5e 	bl	85534 <_Bfree>
   83c78:	2300      	movs	r3, #0
   83c7a:	6423      	str	r3, [r4, #64]	; 0x40
   83c7c:	1e3e      	subs	r6, r7, #0
   83c7e:	bfb4      	ite	lt
   83c80:	2301      	movlt	r3, #1
   83c82:	2300      	movge	r3, #0
   83c84:	9a25      	ldr	r2, [sp, #148]	; 0x94
   83c86:	bfb8      	it	lt
   83c88:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
   83c8c:	6013      	str	r3, [r2, #0]
   83c8e:	4b74      	ldr	r3, [pc, #464]	; (83e60 <_dtoa_r+0x20c>)
   83c90:	bfb8      	it	lt
   83c92:	9603      	strlt	r6, [sp, #12]
   83c94:	43b3      	bics	r3, r6
   83c96:	f000 80a3 	beq.w	83de0 <_dtoa_r+0x18c>
   83c9a:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
   83c9e:	2200      	movs	r2, #0
   83ca0:	2300      	movs	r3, #0
   83ca2:	4640      	mov	r0, r8
   83ca4:	4649      	mov	r1, r9
   83ca6:	f003 fc7f 	bl	875a8 <__aeabi_dcmpeq>
   83caa:	4607      	mov	r7, r0
   83cac:	b178      	cbz	r0, 83cce <_dtoa_r+0x7a>
   83cae:	2301      	movs	r3, #1
   83cb0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83cb2:	6013      	str	r3, [r2, #0]
   83cb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83cb6:	2b00      	cmp	r3, #0
   83cb8:	f000 80bf 	beq.w	83e3a <_dtoa_r+0x1e6>
   83cbc:	4b69      	ldr	r3, [pc, #420]	; (83e64 <_dtoa_r+0x210>)
   83cbe:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83cc0:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
   83cc4:	6013      	str	r3, [r2, #0]
   83cc6:	4648      	mov	r0, r9
   83cc8:	b019      	add	sp, #100	; 0x64
   83cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83cce:	aa16      	add	r2, sp, #88	; 0x58
   83cd0:	ab17      	add	r3, sp, #92	; 0x5c
   83cd2:	e9cd 3200 	strd	r3, r2, [sp]
   83cd6:	4620      	mov	r0, r4
   83cd8:	4642      	mov	r2, r8
   83cda:	464b      	mov	r3, r9
   83cdc:	f001 ff8a 	bl	85bf4 <__d2b>
   83ce0:	0d35      	lsrs	r5, r6, #20
   83ce2:	4683      	mov	fp, r0
   83ce4:	f040 809c 	bne.w	83e20 <_dtoa_r+0x1cc>
   83ce8:	e9dd 8516 	ldrd	r8, r5, [sp, #88]	; 0x58
   83cec:	4445      	add	r5, r8
   83cee:	f205 4332 	addw	r3, r5, #1074	; 0x432
   83cf2:	2b20      	cmp	r3, #32
   83cf4:	f340 842f 	ble.w	84556 <_dtoa_r+0x902>
   83cf8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   83cfc:	409e      	lsls	r6, r3
   83cfe:	9b02      	ldr	r3, [sp, #8]
   83d00:	f205 4012 	addw	r0, r5, #1042	; 0x412
   83d04:	fa23 f000 	lsr.w	r0, r3, r0
   83d08:	4330      	orrs	r0, r6
   83d0a:	f003 f96b 	bl	86fe4 <__aeabi_ui2d>
   83d0e:	2201      	movs	r2, #1
   83d10:	3d01      	subs	r5, #1
   83d12:	920a      	str	r2, [sp, #40]	; 0x28
   83d14:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   83d18:	2200      	movs	r2, #0
   83d1a:	4b53      	ldr	r3, [pc, #332]	; (83e68 <_dtoa_r+0x214>)
   83d1c:	f003 f824 	bl	86d68 <__aeabi_dsub>
   83d20:	a349      	add	r3, pc, #292	; (adr r3, 83e48 <_dtoa_r+0x1f4>)
   83d22:	e9d3 2300 	ldrd	r2, r3, [r3]
   83d26:	f003 f9d7 	bl	870d8 <__aeabi_dmul>
   83d2a:	a349      	add	r3, pc, #292	; (adr r3, 83e50 <_dtoa_r+0x1fc>)
   83d2c:	e9d3 2300 	ldrd	r2, r3, [r3]
   83d30:	f003 f81c 	bl	86d6c <__adddf3>
   83d34:	4606      	mov	r6, r0
   83d36:	4628      	mov	r0, r5
   83d38:	460f      	mov	r7, r1
   83d3a:	f003 f963 	bl	87004 <__aeabi_i2d>
   83d3e:	a346      	add	r3, pc, #280	; (adr r3, 83e58 <_dtoa_r+0x204>)
   83d40:	e9d3 2300 	ldrd	r2, r3, [r3]
   83d44:	f003 f9c8 	bl	870d8 <__aeabi_dmul>
   83d48:	4602      	mov	r2, r0
   83d4a:	460b      	mov	r3, r1
   83d4c:	4630      	mov	r0, r6
   83d4e:	4639      	mov	r1, r7
   83d50:	f003 f80c 	bl	86d6c <__adddf3>
   83d54:	4606      	mov	r6, r0
   83d56:	460f      	mov	r7, r1
   83d58:	f003 fc6e 	bl	87638 <__aeabi_d2iz>
   83d5c:	2200      	movs	r2, #0
   83d5e:	9005      	str	r0, [sp, #20]
   83d60:	2300      	movs	r3, #0
   83d62:	4630      	mov	r0, r6
   83d64:	4639      	mov	r1, r7
   83d66:	f003 fc29 	bl	875bc <__aeabi_dcmplt>
   83d6a:	2800      	cmp	r0, #0
   83d6c:	f040 8275 	bne.w	8425a <_dtoa_r+0x606>
   83d70:	9e05      	ldr	r6, [sp, #20]
   83d72:	2e16      	cmp	r6, #22
   83d74:	f200 825f 	bhi.w	84236 <_dtoa_r+0x5e2>
   83d78:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83d7c:	493b      	ldr	r1, [pc, #236]	; (83e6c <_dtoa_r+0x218>)
   83d7e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   83d82:	e9d1 0100 	ldrd	r0, r1, [r1]
   83d86:	f003 fc37 	bl	875f8 <__aeabi_dcmpgt>
   83d8a:	2800      	cmp	r0, #0
   83d8c:	f000 83df 	beq.w	8454e <_dtoa_r+0x8fa>
   83d90:	1e73      	subs	r3, r6, #1
   83d92:	9305      	str	r3, [sp, #20]
   83d94:	2300      	movs	r3, #0
   83d96:	930d      	str	r3, [sp, #52]	; 0x34
   83d98:	eba8 0505 	sub.w	r5, r8, r5
   83d9c:	f1b5 0a01 	subs.w	sl, r5, #1
   83da0:	f100 8255 	bmi.w	8424e <_dtoa_r+0x5fa>
   83da4:	2300      	movs	r3, #0
   83da6:	9306      	str	r3, [sp, #24]
   83da8:	9b05      	ldr	r3, [sp, #20]
   83daa:	2b00      	cmp	r3, #0
   83dac:	f2c0 8246 	blt.w	8423c <_dtoa_r+0x5e8>
   83db0:	449a      	add	sl, r3
   83db2:	930c      	str	r3, [sp, #48]	; 0x30
   83db4:	2300      	movs	r3, #0
   83db6:	930b      	str	r3, [sp, #44]	; 0x2c
   83db8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83dba:	2b09      	cmp	r3, #9
   83dbc:	d85e      	bhi.n	83e7c <_dtoa_r+0x228>
   83dbe:	2b05      	cmp	r3, #5
   83dc0:	f340 83c7 	ble.w	84552 <_dtoa_r+0x8fe>
   83dc4:	2600      	movs	r6, #0
   83dc6:	3b04      	subs	r3, #4
   83dc8:	9322      	str	r3, [sp, #136]	; 0x88
   83dca:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83dcc:	3b02      	subs	r3, #2
   83dce:	2b03      	cmp	r3, #3
   83dd0:	f200 849f 	bhi.w	84712 <_dtoa_r+0xabe>
   83dd4:	e8df f013 	tbh	[pc, r3, lsl #1]
   83dd8:	03c603e4 	.word	0x03c603e4
   83ddc:	04fa03ee 	.word	0x04fa03ee
   83de0:	f242 730f 	movw	r3, #9999	; 0x270f
   83de4:	9a24      	ldr	r2, [sp, #144]	; 0x90
   83de6:	6013      	str	r3, [r2, #0]
   83de8:	9b02      	ldr	r3, [sp, #8]
   83dea:	b983      	cbnz	r3, 83e0e <_dtoa_r+0x1ba>
   83dec:	f3c6 0613 	ubfx	r6, r6, #0, #20
   83df0:	b96e      	cbnz	r6, 83e0e <_dtoa_r+0x1ba>
   83df2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83df4:	f8df 9078 	ldr.w	r9, [pc, #120]	; 83e70 <_dtoa_r+0x21c>
   83df8:	2b00      	cmp	r3, #0
   83dfa:	f43f af64 	beq.w	83cc6 <_dtoa_r+0x72>
   83dfe:	f109 0308 	add.w	r3, r9, #8
   83e02:	4648      	mov	r0, r9
   83e04:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83e06:	6013      	str	r3, [r2, #0]
   83e08:	b019      	add	sp, #100	; 0x64
   83e0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83e0e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83e10:	f8df 9060 	ldr.w	r9, [pc, #96]	; 83e74 <_dtoa_r+0x220>
   83e14:	2b00      	cmp	r3, #0
   83e16:	f43f af56 	beq.w	83cc6 <_dtoa_r+0x72>
   83e1a:	f109 0303 	add.w	r3, r9, #3
   83e1e:	e7f0      	b.n	83e02 <_dtoa_r+0x1ae>
   83e20:	f3c9 0313 	ubfx	r3, r9, #0, #20
   83e24:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   83e28:	4640      	mov	r0, r8
   83e2a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   83e2e:	970a      	str	r7, [sp, #40]	; 0x28
   83e30:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   83e34:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
   83e38:	e76e      	b.n	83d18 <_dtoa_r+0xc4>
   83e3a:	f8df 903c 	ldr.w	r9, [pc, #60]	; 83e78 <_dtoa_r+0x224>
   83e3e:	4648      	mov	r0, r9
   83e40:	b019      	add	sp, #100	; 0x64
   83e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83e46:	bf00      	nop
   83e48:	636f4361 	.word	0x636f4361
   83e4c:	3fd287a7 	.word	0x3fd287a7
   83e50:	8b60c8b3 	.word	0x8b60c8b3
   83e54:	3fc68a28 	.word	0x3fc68a28
   83e58:	509f79fb 	.word	0x509f79fb
   83e5c:	3fd34413 	.word	0x3fd34413
   83e60:	7ff00000 	.word	0x7ff00000
   83e64:	00087719 	.word	0x00087719
   83e68:	3ff80000 	.word	0x3ff80000
   83e6c:	00087750 	.word	0x00087750
   83e70:	0008771c 	.word	0x0008771c
   83e74:	00087728 	.word	0x00087728
   83e78:	00087718 	.word	0x00087718
   83e7c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   83e80:	2601      	movs	r6, #1
   83e82:	2300      	movs	r3, #0
   83e84:	e9cd 5608 	strd	r5, r6, [sp, #32]
   83e88:	9322      	str	r3, [sp, #136]	; 0x88
   83e8a:	9323      	str	r3, [sp, #140]	; 0x8c
   83e8c:	2100      	movs	r1, #0
   83e8e:	9514      	str	r5, [sp, #80]	; 0x50
   83e90:	6461      	str	r1, [r4, #68]	; 0x44
   83e92:	4620      	mov	r0, r4
   83e94:	f001 fb28 	bl	854e8 <_Balloc>
   83e98:	2d0e      	cmp	r5, #14
   83e9a:	4681      	mov	r9, r0
   83e9c:	6420      	str	r0, [r4, #64]	; 0x40
   83e9e:	f200 80fe 	bhi.w	8409e <_dtoa_r+0x44a>
   83ea2:	2e00      	cmp	r6, #0
   83ea4:	f000 80fb 	beq.w	8409e <_dtoa_r+0x44a>
   83ea8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83eac:	4616      	mov	r6, r2
   83eae:	461f      	mov	r7, r3
   83eb0:	9905      	ldr	r1, [sp, #20]
   83eb2:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
   83eb6:	2900      	cmp	r1, #0
   83eb8:	f340 83e9 	ble.w	8468e <_dtoa_r+0xa3a>
   83ebc:	4b9b      	ldr	r3, [pc, #620]	; (8412c <_dtoa_r+0x4d8>)
   83ebe:	f001 020f 	and.w	r2, r1, #15
   83ec2:	110d      	asrs	r5, r1, #4
   83ec4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83ec8:	e9d3 1200 	ldrd	r1, r2, [r3]
   83ecc:	e9cd 1202 	strd	r1, r2, [sp, #8]
   83ed0:	06ea      	lsls	r2, r5, #27
   83ed2:	f140 84a0 	bpl.w	84816 <_dtoa_r+0xbc2>
   83ed6:	4b96      	ldr	r3, [pc, #600]	; (84130 <_dtoa_r+0x4dc>)
   83ed8:	4639      	mov	r1, r7
   83eda:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   83ede:	4630      	mov	r0, r6
   83ee0:	f003 fa24 	bl	8732c <__aeabi_ddiv>
   83ee4:	2703      	movs	r7, #3
   83ee6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83eea:	f005 050f 	and.w	r5, r5, #15
   83eee:	b17d      	cbz	r5, 83f10 <_dtoa_r+0x2bc>
   83ef0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83ef4:	4e8e      	ldr	r6, [pc, #568]	; (84130 <_dtoa_r+0x4dc>)
   83ef6:	07eb      	lsls	r3, r5, #31
   83ef8:	d504      	bpl.n	83f04 <_dtoa_r+0x2b0>
   83efa:	e9d6 2300 	ldrd	r2, r3, [r6]
   83efe:	f003 f8eb 	bl	870d8 <__aeabi_dmul>
   83f02:	3701      	adds	r7, #1
   83f04:	106d      	asrs	r5, r5, #1
   83f06:	f106 0608 	add.w	r6, r6, #8
   83f0a:	d1f4      	bne.n	83ef6 <_dtoa_r+0x2a2>
   83f0c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83f10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83f14:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83f18:	f003 fa08 	bl	8732c <__aeabi_ddiv>
   83f1c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83f20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83f22:	b143      	cbz	r3, 83f36 <_dtoa_r+0x2e2>
   83f24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83f28:	2200      	movs	r2, #0
   83f2a:	4b82      	ldr	r3, [pc, #520]	; (84134 <_dtoa_r+0x4e0>)
   83f2c:	f003 fb46 	bl	875bc <__aeabi_dcmplt>
   83f30:	2800      	cmp	r0, #0
   83f32:	f040 8509 	bne.w	84948 <_dtoa_r+0xcf4>
   83f36:	4638      	mov	r0, r7
   83f38:	f003 f864 	bl	87004 <__aeabi_i2d>
   83f3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83f40:	f003 f8ca 	bl	870d8 <__aeabi_dmul>
   83f44:	4b7c      	ldr	r3, [pc, #496]	; (84138 <_dtoa_r+0x4e4>)
   83f46:	2200      	movs	r2, #0
   83f48:	f002 ff10 	bl	86d6c <__adddf3>
   83f4c:	9b08      	ldr	r3, [sp, #32]
   83f4e:	4605      	mov	r5, r0
   83f50:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83f54:	2b00      	cmp	r3, #0
   83f56:	f000 841e 	beq.w	84796 <_dtoa_r+0xb42>
   83f5a:	9b05      	ldr	r3, [sp, #20]
   83f5c:	9315      	str	r3, [sp, #84]	; 0x54
   83f5e:	9b08      	ldr	r3, [sp, #32]
   83f60:	9310      	str	r3, [sp, #64]	; 0x40
   83f62:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83f66:	f003 fb67 	bl	87638 <__aeabi_d2iz>
   83f6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
   83f6c:	4b6f      	ldr	r3, [pc, #444]	; (8412c <_dtoa_r+0x4d8>)
   83f6e:	f100 0830 	add.w	r8, r0, #48	; 0x30
   83f72:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83f76:	e953 1202 	ldrd	r1, r2, [r3, #-8]
   83f7a:	e9cd 1212 	strd	r1, r2, [sp, #72]	; 0x48
   83f7e:	f003 f841 	bl	87004 <__aeabi_i2d>
   83f82:	460b      	mov	r3, r1
   83f84:	4602      	mov	r2, r0
   83f86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83f8a:	e9cd 5602 	strd	r5, r6, [sp, #8]
   83f8e:	f002 feeb 	bl	86d68 <__aeabi_dsub>
   83f92:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83f94:	fa5f f888 	uxtb.w	r8, r8
   83f98:	4606      	mov	r6, r0
   83f9a:	460f      	mov	r7, r1
   83f9c:	f109 0501 	add.w	r5, r9, #1
   83fa0:	2b00      	cmp	r3, #0
   83fa2:	f000 8463 	beq.w	8486c <_dtoa_r+0xc18>
   83fa6:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   83faa:	2000      	movs	r0, #0
   83fac:	4963      	ldr	r1, [pc, #396]	; (8413c <_dtoa_r+0x4e8>)
   83fae:	f003 f9bd 	bl	8732c <__aeabi_ddiv>
   83fb2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83fb6:	f002 fed7 	bl	86d68 <__aeabi_dsub>
   83fba:	f889 8000 	strb.w	r8, [r9]
   83fbe:	4632      	mov	r2, r6
   83fc0:	463b      	mov	r3, r7
   83fc2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83fc6:	f003 fb17 	bl	875f8 <__aeabi_dcmpgt>
   83fca:	2800      	cmp	r0, #0
   83fcc:	f040 850e 	bne.w	849ec <_dtoa_r+0xd98>
   83fd0:	4632      	mov	r2, r6
   83fd2:	463b      	mov	r3, r7
   83fd4:	2000      	movs	r0, #0
   83fd6:	4957      	ldr	r1, [pc, #348]	; (84134 <_dtoa_r+0x4e0>)
   83fd8:	f002 fec6 	bl	86d68 <__aeabi_dsub>
   83fdc:	4602      	mov	r2, r0
   83fde:	460b      	mov	r3, r1
   83fe0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83fe4:	f003 fb08 	bl	875f8 <__aeabi_dcmpgt>
   83fe8:	2800      	cmp	r0, #0
   83fea:	f040 8509 	bne.w	84a00 <_dtoa_r+0xdac>
   83fee:	9a10      	ldr	r2, [sp, #64]	; 0x40
   83ff0:	2a01      	cmp	r2, #1
   83ff2:	d050      	beq.n	84096 <_dtoa_r+0x442>
   83ff4:	444a      	add	r2, r9
   83ff6:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
   83ffa:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   83ffe:	46a0      	mov	r8, r4
   84000:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
   84004:	f8cd 9008 	str.w	r9, [sp, #8]
   84008:	4691      	mov	r9, r2
   8400a:	e00e      	b.n	8402a <_dtoa_r+0x3d6>
   8400c:	4632      	mov	r2, r6
   8400e:	463b      	mov	r3, r7
   84010:	2000      	movs	r0, #0
   84012:	4948      	ldr	r1, [pc, #288]	; (84134 <_dtoa_r+0x4e0>)
   84014:	f002 fea8 	bl	86d68 <__aeabi_dsub>
   84018:	4652      	mov	r2, sl
   8401a:	465b      	mov	r3, fp
   8401c:	f003 face 	bl	875bc <__aeabi_dcmplt>
   84020:	2800      	cmp	r0, #0
   84022:	f040 84e6 	bne.w	849f2 <_dtoa_r+0xd9e>
   84026:	454d      	cmp	r5, r9
   84028:	d02e      	beq.n	84088 <_dtoa_r+0x434>
   8402a:	4650      	mov	r0, sl
   8402c:	4659      	mov	r1, fp
   8402e:	2200      	movs	r2, #0
   84030:	4b43      	ldr	r3, [pc, #268]	; (84140 <_dtoa_r+0x4ec>)
   84032:	f003 f851 	bl	870d8 <__aeabi_dmul>
   84036:	2200      	movs	r2, #0
   84038:	4b41      	ldr	r3, [pc, #260]	; (84140 <_dtoa_r+0x4ec>)
   8403a:	4682      	mov	sl, r0
   8403c:	468b      	mov	fp, r1
   8403e:	4630      	mov	r0, r6
   84040:	4639      	mov	r1, r7
   84042:	f003 f849 	bl	870d8 <__aeabi_dmul>
   84046:	460f      	mov	r7, r1
   84048:	4606      	mov	r6, r0
   8404a:	f003 faf5 	bl	87638 <__aeabi_d2iz>
   8404e:	4604      	mov	r4, r0
   84050:	f002 ffd8 	bl	87004 <__aeabi_i2d>
   84054:	4602      	mov	r2, r0
   84056:	460b      	mov	r3, r1
   84058:	4630      	mov	r0, r6
   8405a:	4639      	mov	r1, r7
   8405c:	f002 fe84 	bl	86d68 <__aeabi_dsub>
   84060:	3430      	adds	r4, #48	; 0x30
   84062:	b2e4      	uxtb	r4, r4
   84064:	f805 4b01 	strb.w	r4, [r5], #1
   84068:	4652      	mov	r2, sl
   8406a:	465b      	mov	r3, fp
   8406c:	4606      	mov	r6, r0
   8406e:	460f      	mov	r7, r1
   84070:	f003 faa4 	bl	875bc <__aeabi_dcmplt>
   84074:	2800      	cmp	r0, #0
   84076:	d0c9      	beq.n	8400c <_dtoa_r+0x3b8>
   84078:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8407a:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   8407e:	f8dd 9008 	ldr.w	r9, [sp, #8]
   84082:	4644      	mov	r4, r8
   84084:	9305      	str	r3, [sp, #20]
   84086:	e239      	b.n	844fc <_dtoa_r+0x8a8>
   84088:	4644      	mov	r4, r8
   8408a:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   8408e:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   84092:	f8dd 9008 	ldr.w	r9, [sp, #8]
   84096:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   8409a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   8409e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   840a0:	2b00      	cmp	r3, #0
   840a2:	f2c0 80a9 	blt.w	841f8 <_dtoa_r+0x5a4>
   840a6:	9a05      	ldr	r2, [sp, #20]
   840a8:	2a0e      	cmp	r2, #14
   840aa:	f300 80a5 	bgt.w	841f8 <_dtoa_r+0x5a4>
   840ae:	4b1f      	ldr	r3, [pc, #124]	; (8412c <_dtoa_r+0x4d8>)
   840b0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   840b4:	e9d3 2300 	ldrd	r2, r3, [r3]
   840b8:	e9cd 2306 	strd	r2, r3, [sp, #24]
   840bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   840be:	2b00      	cmp	r3, #0
   840c0:	f2c0 82c1 	blt.w	84646 <_dtoa_r+0x9f2>
   840c4:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   840c8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   840cc:	4630      	mov	r0, r6
   840ce:	4639      	mov	r1, r7
   840d0:	f003 f92c 	bl	8732c <__aeabi_ddiv>
   840d4:	f003 fab0 	bl	87638 <__aeabi_d2iz>
   840d8:	4680      	mov	r8, r0
   840da:	f002 ff93 	bl	87004 <__aeabi_i2d>
   840de:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   840e2:	f002 fff9 	bl	870d8 <__aeabi_dmul>
   840e6:	4602      	mov	r2, r0
   840e8:	460b      	mov	r3, r1
   840ea:	4630      	mov	r0, r6
   840ec:	4639      	mov	r1, r7
   840ee:	f002 fe3b 	bl	86d68 <__aeabi_dsub>
   840f2:	9e08      	ldr	r6, [sp, #32]
   840f4:	f108 0530 	add.w	r5, r8, #48	; 0x30
   840f8:	2e01      	cmp	r6, #1
   840fa:	f889 5000 	strb.w	r5, [r9]
   840fe:	4602      	mov	r2, r0
   84100:	460b      	mov	r3, r1
   84102:	f109 0501 	add.w	r5, r9, #1
   84106:	d04c      	beq.n	841a2 <_dtoa_r+0x54e>
   84108:	2200      	movs	r2, #0
   8410a:	4b0d      	ldr	r3, [pc, #52]	; (84140 <_dtoa_r+0x4ec>)
   8410c:	f002 ffe4 	bl	870d8 <__aeabi_dmul>
   84110:	2200      	movs	r2, #0
   84112:	2300      	movs	r3, #0
   84114:	4606      	mov	r6, r0
   84116:	460f      	mov	r7, r1
   84118:	f003 fa46 	bl	875a8 <__aeabi_dcmpeq>
   8411c:	2800      	cmp	r0, #0
   8411e:	f040 81ed 	bne.w	844fc <_dtoa_r+0x8a8>
   84122:	f8cd b008 	str.w	fp, [sp, #8]
   84126:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
   8412a:	e018      	b.n	8415e <_dtoa_r+0x50a>
   8412c:	00087750 	.word	0x00087750
   84130:	00087840 	.word	0x00087840
   84134:	3ff00000 	.word	0x3ff00000
   84138:	401c0000 	.word	0x401c0000
   8413c:	3fe00000 	.word	0x3fe00000
   84140:	40240000 	.word	0x40240000
   84144:	2200      	movs	r2, #0
   84146:	4bc6      	ldr	r3, [pc, #792]	; (84460 <_dtoa_r+0x80c>)
   84148:	f002 ffc6 	bl	870d8 <__aeabi_dmul>
   8414c:	2200      	movs	r2, #0
   8414e:	2300      	movs	r3, #0
   84150:	4606      	mov	r6, r0
   84152:	460f      	mov	r7, r1
   84154:	f003 fa28 	bl	875a8 <__aeabi_dcmpeq>
   84158:	2800      	cmp	r0, #0
   8415a:	f040 8341 	bne.w	847e0 <_dtoa_r+0xb8c>
   8415e:	4652      	mov	r2, sl
   84160:	465b      	mov	r3, fp
   84162:	4630      	mov	r0, r6
   84164:	4639      	mov	r1, r7
   84166:	f003 f8e1 	bl	8732c <__aeabi_ddiv>
   8416a:	f003 fa65 	bl	87638 <__aeabi_d2iz>
   8416e:	4680      	mov	r8, r0
   84170:	f002 ff48 	bl	87004 <__aeabi_i2d>
   84174:	4652      	mov	r2, sl
   84176:	465b      	mov	r3, fp
   84178:	f002 ffae 	bl	870d8 <__aeabi_dmul>
   8417c:	4602      	mov	r2, r0
   8417e:	460b      	mov	r3, r1
   84180:	4630      	mov	r0, r6
   84182:	4639      	mov	r1, r7
   84184:	f002 fdf0 	bl	86d68 <__aeabi_dsub>
   84188:	f108 0630 	add.w	r6, r8, #48	; 0x30
   8418c:	f805 6b01 	strb.w	r6, [r5], #1
   84190:	9f08      	ldr	r7, [sp, #32]
   84192:	eba5 0609 	sub.w	r6, r5, r9
   84196:	42b7      	cmp	r7, r6
   84198:	4602      	mov	r2, r0
   8419a:	460b      	mov	r3, r1
   8419c:	d1d2      	bne.n	84144 <_dtoa_r+0x4f0>
   8419e:	f8dd b008 	ldr.w	fp, [sp, #8]
   841a2:	4610      	mov	r0, r2
   841a4:	4619      	mov	r1, r3
   841a6:	f002 fde1 	bl	86d6c <__adddf3>
   841aa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   841ae:	4606      	mov	r6, r0
   841b0:	460f      	mov	r7, r1
   841b2:	f003 fa21 	bl	875f8 <__aeabi_dcmpgt>
   841b6:	b960      	cbnz	r0, 841d2 <_dtoa_r+0x57e>
   841b8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   841bc:	4630      	mov	r0, r6
   841be:	4639      	mov	r1, r7
   841c0:	f003 f9f2 	bl	875a8 <__aeabi_dcmpeq>
   841c4:	2800      	cmp	r0, #0
   841c6:	f000 8199 	beq.w	844fc <_dtoa_r+0x8a8>
   841ca:	f018 0f01 	tst.w	r8, #1
   841ce:	f000 8195 	beq.w	844fc <_dtoa_r+0x8a8>
   841d2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   841d6:	e005      	b.n	841e4 <_dtoa_r+0x590>
   841d8:	4599      	cmp	r9, r3
   841da:	f000 833a 	beq.w	84852 <_dtoa_r+0xbfe>
   841de:	461d      	mov	r5, r3
   841e0:	f813 8c01 	ldrb.w	r8, [r3, #-1]
   841e4:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   841e8:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
   841ec:	d0f4      	beq.n	841d8 <_dtoa_r+0x584>
   841ee:	f108 0801 	add.w	r8, r8, #1
   841f2:	f883 8000 	strb.w	r8, [r3]
   841f6:	e181      	b.n	844fc <_dtoa_r+0x8a8>
   841f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   841fa:	2a00      	cmp	r2, #0
   841fc:	d03d      	beq.n	8427a <_dtoa_r+0x626>
   841fe:	9a22      	ldr	r2, [sp, #136]	; 0x88
   84200:	2a01      	cmp	r2, #1
   84202:	f340 8212 	ble.w	8462a <_dtoa_r+0x9d6>
   84206:	9b08      	ldr	r3, [sp, #32]
   84208:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   8420c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8420e:	4543      	cmp	r3, r8
   84210:	f2c0 82e9 	blt.w	847e6 <_dtoa_r+0xb92>
   84214:	eba3 0808 	sub.w	r8, r3, r8
   84218:	9b08      	ldr	r3, [sp, #32]
   8421a:	2b00      	cmp	r3, #0
   8421c:	f2c0 830e 	blt.w	8483c <_dtoa_r+0xbe8>
   84220:	9a06      	ldr	r2, [sp, #24]
   84222:	449a      	add	sl, r3
   84224:	920a      	str	r2, [sp, #40]	; 0x28
   84226:	441a      	add	r2, r3
   84228:	9206      	str	r2, [sp, #24]
   8422a:	2101      	movs	r1, #1
   8422c:	4620      	mov	r0, r4
   8422e:	f001 fa69 	bl	85704 <__i2b>
   84232:	4606      	mov	r6, r0
   84234:	e026      	b.n	84284 <_dtoa_r+0x630>
   84236:	2301      	movs	r3, #1
   84238:	930d      	str	r3, [sp, #52]	; 0x34
   8423a:	e5ad      	b.n	83d98 <_dtoa_r+0x144>
   8423c:	2300      	movs	r3, #0
   8423e:	930c      	str	r3, [sp, #48]	; 0x30
   84240:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
   84244:	1ad2      	subs	r2, r2, r3
   84246:	425b      	negs	r3, r3
   84248:	9206      	str	r2, [sp, #24]
   8424a:	930b      	str	r3, [sp, #44]	; 0x2c
   8424c:	e5b4      	b.n	83db8 <_dtoa_r+0x164>
   8424e:	f1c5 0301 	rsb	r3, r5, #1
   84252:	9306      	str	r3, [sp, #24]
   84254:	f04f 0a00 	mov.w	sl, #0
   84258:	e5a6      	b.n	83da8 <_dtoa_r+0x154>
   8425a:	f8dd 9014 	ldr.w	r9, [sp, #20]
   8425e:	4648      	mov	r0, r9
   84260:	f002 fed0 	bl	87004 <__aeabi_i2d>
   84264:	4632      	mov	r2, r6
   84266:	463b      	mov	r3, r7
   84268:	f003 f99e 	bl	875a8 <__aeabi_dcmpeq>
   8426c:	2800      	cmp	r0, #0
   8426e:	f47f ad7f 	bne.w	83d70 <_dtoa_r+0x11c>
   84272:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
   84276:	9305      	str	r3, [sp, #20]
   84278:	e57a      	b.n	83d70 <_dtoa_r+0x11c>
   8427a:	9b06      	ldr	r3, [sp, #24]
   8427c:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   84280:	9e09      	ldr	r6, [sp, #36]	; 0x24
   84282:	930a      	str	r3, [sp, #40]	; 0x28
   84284:	990a      	ldr	r1, [sp, #40]	; 0x28
   84286:	2900      	cmp	r1, #0
   84288:	460b      	mov	r3, r1
   8428a:	dd0c      	ble.n	842a6 <_dtoa_r+0x652>
   8428c:	f1ba 0f00 	cmp.w	sl, #0
   84290:	dd09      	ble.n	842a6 <_dtoa_r+0x652>
   84292:	4551      	cmp	r1, sl
   84294:	bfa8      	it	ge
   84296:	4653      	movge	r3, sl
   84298:	9a06      	ldr	r2, [sp, #24]
   8429a:	ebaa 0a03 	sub.w	sl, sl, r3
   8429e:	1ad2      	subs	r2, r2, r3
   842a0:	9206      	str	r2, [sp, #24]
   842a2:	1aca      	subs	r2, r1, r3
   842a4:	920a      	str	r2, [sp, #40]	; 0x28
   842a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   842a8:	b17b      	cbz	r3, 842ca <_dtoa_r+0x676>
   842aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
   842ac:	2a00      	cmp	r2, #0
   842ae:	f000 8290 	beq.w	847d2 <_dtoa_r+0xb7e>
   842b2:	eba3 0708 	sub.w	r7, r3, r8
   842b6:	f1b8 0f00 	cmp.w	r8, #0
   842ba:	f040 819a 	bne.w	845f2 <_dtoa_r+0x99e>
   842be:	4659      	mov	r1, fp
   842c0:	463a      	mov	r2, r7
   842c2:	4620      	mov	r0, r4
   842c4:	f001 face 	bl	85864 <__pow5mult>
   842c8:	4683      	mov	fp, r0
   842ca:	2101      	movs	r1, #1
   842cc:	4620      	mov	r0, r4
   842ce:	f001 fa19 	bl	85704 <__i2b>
   842d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   842d4:	4607      	mov	r7, r0
   842d6:	2a00      	cmp	r2, #0
   842d8:	f040 8125 	bne.w	84526 <_dtoa_r+0x8d2>
   842dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   842de:	2b01      	cmp	r3, #1
   842e0:	f340 816b 	ble.w	845ba <_dtoa_r+0x966>
   842e4:	2001      	movs	r0, #1
   842e6:	4450      	add	r0, sl
   842e8:	f010 001f 	ands.w	r0, r0, #31
   842ec:	f000 8119 	beq.w	84522 <_dtoa_r+0x8ce>
   842f0:	f1c0 0320 	rsb	r3, r0, #32
   842f4:	2b04      	cmp	r3, #4
   842f6:	f340 83b4 	ble.w	84a62 <_dtoa_r+0xe0e>
   842fa:	f1c0 001c 	rsb	r0, r0, #28
   842fe:	9b06      	ldr	r3, [sp, #24]
   84300:	4482      	add	sl, r0
   84302:	4403      	add	r3, r0
   84304:	9306      	str	r3, [sp, #24]
   84306:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84308:	4403      	add	r3, r0
   8430a:	930a      	str	r3, [sp, #40]	; 0x28
   8430c:	9b06      	ldr	r3, [sp, #24]
   8430e:	2b00      	cmp	r3, #0
   84310:	dd05      	ble.n	8431e <_dtoa_r+0x6ca>
   84312:	4659      	mov	r1, fp
   84314:	461a      	mov	r2, r3
   84316:	4620      	mov	r0, r4
   84318:	f001 faf4 	bl	85904 <__lshift>
   8431c:	4683      	mov	fp, r0
   8431e:	f1ba 0f00 	cmp.w	sl, #0
   84322:	dd05      	ble.n	84330 <_dtoa_r+0x6dc>
   84324:	4639      	mov	r1, r7
   84326:	4652      	mov	r2, sl
   84328:	4620      	mov	r0, r4
   8432a:	f001 faeb 	bl	85904 <__lshift>
   8432e:	4607      	mov	r7, r0
   84330:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   84332:	2b00      	cmp	r3, #0
   84334:	d177      	bne.n	84426 <_dtoa_r+0x7d2>
   84336:	9b08      	ldr	r3, [sp, #32]
   84338:	2b00      	cmp	r3, #0
   8433a:	f340 8205 	ble.w	84748 <_dtoa_r+0xaf4>
   8433e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84340:	2b00      	cmp	r3, #0
   84342:	f000 8089 	beq.w	84458 <_dtoa_r+0x804>
   84346:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84348:	2b00      	cmp	r3, #0
   8434a:	f300 8167 	bgt.w	8461c <_dtoa_r+0x9c8>
   8434e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84350:	2b00      	cmp	r3, #0
   84352:	f040 81ca 	bne.w	846ea <_dtoa_r+0xa96>
   84356:	46b2      	mov	sl, r6
   84358:	46c8      	mov	r8, r9
   8435a:	9b02      	ldr	r3, [sp, #8]
   8435c:	9a08      	ldr	r2, [sp, #32]
   8435e:	f003 0301 	and.w	r3, r3, #1
   84362:	930a      	str	r3, [sp, #40]	; 0x28
   84364:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
   84368:	441a      	add	r2, r3
   8436a:	9206      	str	r2, [sp, #24]
   8436c:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
   84370:	4639      	mov	r1, r7
   84372:	4658      	mov	r0, fp
   84374:	f7ff fbdc 	bl	83b30 <quorem>
   84378:	4631      	mov	r1, r6
   8437a:	4681      	mov	r9, r0
   8437c:	9009      	str	r0, [sp, #36]	; 0x24
   8437e:	4658      	mov	r0, fp
   84380:	f001 fb1a 	bl	859b8 <__mcmp>
   84384:	4652      	mov	r2, sl
   84386:	9002      	str	r0, [sp, #8]
   84388:	4639      	mov	r1, r7
   8438a:	4620      	mov	r0, r4
   8438c:	f001 fb30 	bl	859f0 <__mdiff>
   84390:	68c2      	ldr	r2, [r0, #12]
   84392:	4605      	mov	r5, r0
   84394:	f109 0930 	add.w	r9, r9, #48	; 0x30
   84398:	4601      	mov	r1, r0
   8439a:	2a00      	cmp	r2, #0
   8439c:	f040 81cf 	bne.w	8473e <_dtoa_r+0xaea>
   843a0:	4658      	mov	r0, fp
   843a2:	f001 fb09 	bl	859b8 <__mcmp>
   843a6:	4629      	mov	r1, r5
   843a8:	9008      	str	r0, [sp, #32]
   843aa:	4620      	mov	r0, r4
   843ac:	f001 f8c2 	bl	85534 <_Bfree>
   843b0:	9a08      	ldr	r2, [sp, #32]
   843b2:	b932      	cbnz	r2, 843c2 <_dtoa_r+0x76e>
   843b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
   843b6:	b923      	cbnz	r3, 843c2 <_dtoa_r+0x76e>
   843b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   843ba:	2b00      	cmp	r3, #0
   843bc:	f000 8324 	beq.w	84a08 <_dtoa_r+0xdb4>
   843c0:	9a22      	ldr	r2, [sp, #136]	; 0x88
   843c2:	9b02      	ldr	r3, [sp, #8]
   843c4:	2b00      	cmp	r3, #0
   843c6:	f2c0 8219 	blt.w	847fc <_dtoa_r+0xba8>
   843ca:	d105      	bne.n	843d8 <_dtoa_r+0x784>
   843cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   843ce:	b91b      	cbnz	r3, 843d8 <_dtoa_r+0x784>
   843d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   843d2:	2b00      	cmp	r3, #0
   843d4:	f000 8212 	beq.w	847fc <_dtoa_r+0xba8>
   843d8:	2a00      	cmp	r2, #0
   843da:	f108 0501 	add.w	r5, r8, #1
   843de:	f300 8221 	bgt.w	84824 <_dtoa_r+0xbd0>
   843e2:	9b06      	ldr	r3, [sp, #24]
   843e4:	f888 9000 	strb.w	r9, [r8]
   843e8:	4543      	cmp	r3, r8
   843ea:	f000 822c 	beq.w	84846 <_dtoa_r+0xbf2>
   843ee:	4659      	mov	r1, fp
   843f0:	2300      	movs	r3, #0
   843f2:	220a      	movs	r2, #10
   843f4:	4620      	mov	r0, r4
   843f6:	f001 f8a7 	bl	85548 <__multadd>
   843fa:	4556      	cmp	r6, sl
   843fc:	4683      	mov	fp, r0
   843fe:	4631      	mov	r1, r6
   84400:	f04f 0300 	mov.w	r3, #0
   84404:	f04f 020a 	mov.w	r2, #10
   84408:	4620      	mov	r0, r4
   8440a:	f000 8192 	beq.w	84732 <_dtoa_r+0xade>
   8440e:	f001 f89b 	bl	85548 <__multadd>
   84412:	4651      	mov	r1, sl
   84414:	4606      	mov	r6, r0
   84416:	2300      	movs	r3, #0
   84418:	220a      	movs	r2, #10
   8441a:	4620      	mov	r0, r4
   8441c:	f001 f894 	bl	85548 <__multadd>
   84420:	46a8      	mov	r8, r5
   84422:	4682      	mov	sl, r0
   84424:	e7a4      	b.n	84370 <_dtoa_r+0x71c>
   84426:	4639      	mov	r1, r7
   84428:	4658      	mov	r0, fp
   8442a:	f001 fac5 	bl	859b8 <__mcmp>
   8442e:	2800      	cmp	r0, #0
   84430:	da81      	bge.n	84336 <_dtoa_r+0x6e2>
   84432:	9d05      	ldr	r5, [sp, #20]
   84434:	4659      	mov	r1, fp
   84436:	2300      	movs	r3, #0
   84438:	220a      	movs	r2, #10
   8443a:	4620      	mov	r0, r4
   8443c:	3d01      	subs	r5, #1
   8443e:	9505      	str	r5, [sp, #20]
   84440:	f001 f882 	bl	85548 <__multadd>
   84444:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84446:	4683      	mov	fp, r0
   84448:	2b00      	cmp	r3, #0
   8444a:	f040 82ee 	bne.w	84a2a <_dtoa_r+0xdd6>
   8444e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84450:	2b00      	cmp	r3, #0
   84452:	f340 82f9 	ble.w	84a48 <_dtoa_r+0xdf4>
   84456:	9308      	str	r3, [sp, #32]
   84458:	464d      	mov	r5, r9
   8445a:	f8dd 8020 	ldr.w	r8, [sp, #32]
   8445e:	e008      	b.n	84472 <_dtoa_r+0x81e>
   84460:	40240000 	.word	0x40240000
   84464:	4659      	mov	r1, fp
   84466:	2300      	movs	r3, #0
   84468:	220a      	movs	r2, #10
   8446a:	4620      	mov	r0, r4
   8446c:	f001 f86c 	bl	85548 <__multadd>
   84470:	4683      	mov	fp, r0
   84472:	4639      	mov	r1, r7
   84474:	4658      	mov	r0, fp
   84476:	f7ff fb5b 	bl	83b30 <quorem>
   8447a:	3030      	adds	r0, #48	; 0x30
   8447c:	f805 0b01 	strb.w	r0, [r5], #1
   84480:	eba5 0209 	sub.w	r2, r5, r9
   84484:	4590      	cmp	r8, r2
   84486:	dced      	bgt.n	84464 <_dtoa_r+0x810>
   84488:	2200      	movs	r2, #0
   8448a:	4603      	mov	r3, r0
   8448c:	9202      	str	r2, [sp, #8]
   8448e:	4659      	mov	r1, fp
   84490:	2201      	movs	r2, #1
   84492:	4620      	mov	r0, r4
   84494:	9308      	str	r3, [sp, #32]
   84496:	f001 fa35 	bl	85904 <__lshift>
   8449a:	4639      	mov	r1, r7
   8449c:	4683      	mov	fp, r0
   8449e:	f001 fa8b 	bl	859b8 <__mcmp>
   844a2:	2800      	cmp	r0, #0
   844a4:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   844a8:	9b08      	ldr	r3, [sp, #32]
   844aa:	dc11      	bgt.n	844d0 <_dtoa_r+0x87c>
   844ac:	d105      	bne.n	844ba <_dtoa_r+0x866>
   844ae:	07db      	lsls	r3, r3, #31
   844b0:	d40e      	bmi.n	844d0 <_dtoa_r+0x87c>
   844b2:	e002      	b.n	844ba <_dtoa_r+0x866>
   844b4:	f815 2c02 	ldrb.w	r2, [r5, #-2]
   844b8:	461d      	mov	r5, r3
   844ba:	2a30      	cmp	r2, #48	; 0x30
   844bc:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
   844c0:	d0f8      	beq.n	844b4 <_dtoa_r+0x860>
   844c2:	e00b      	b.n	844dc <_dtoa_r+0x888>
   844c4:	4599      	cmp	r9, r3
   844c6:	f000 814c 	beq.w	84762 <_dtoa_r+0xb0e>
   844ca:	461d      	mov	r5, r3
   844cc:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   844d0:	2a39      	cmp	r2, #57	; 0x39
   844d2:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
   844d6:	d0f5      	beq.n	844c4 <_dtoa_r+0x870>
   844d8:	3201      	adds	r2, #1
   844da:	701a      	strb	r2, [r3, #0]
   844dc:	4639      	mov	r1, r7
   844de:	4620      	mov	r0, r4
   844e0:	f001 f828 	bl	85534 <_Bfree>
   844e4:	b156      	cbz	r6, 844fc <_dtoa_r+0x8a8>
   844e6:	9902      	ldr	r1, [sp, #8]
   844e8:	b121      	cbz	r1, 844f4 <_dtoa_r+0x8a0>
   844ea:	42b1      	cmp	r1, r6
   844ec:	d002      	beq.n	844f4 <_dtoa_r+0x8a0>
   844ee:	4620      	mov	r0, r4
   844f0:	f001 f820 	bl	85534 <_Bfree>
   844f4:	4631      	mov	r1, r6
   844f6:	4620      	mov	r0, r4
   844f8:	f001 f81c 	bl	85534 <_Bfree>
   844fc:	4659      	mov	r1, fp
   844fe:	4620      	mov	r0, r4
   84500:	f001 f818 	bl	85534 <_Bfree>
   84504:	2200      	movs	r2, #0
   84506:	9b05      	ldr	r3, [sp, #20]
   84508:	702a      	strb	r2, [r5, #0]
   8450a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8450c:	3301      	adds	r3, #1
   8450e:	6013      	str	r3, [r2, #0]
   84510:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84512:	2b00      	cmp	r3, #0
   84514:	f43f abd7 	beq.w	83cc6 <_dtoa_r+0x72>
   84518:	4648      	mov	r0, r9
   8451a:	601d      	str	r5, [r3, #0]
   8451c:	b019      	add	sp, #100	; 0x64
   8451e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84522:	201c      	movs	r0, #28
   84524:	e6eb      	b.n	842fe <_dtoa_r+0x6aa>
   84526:	4601      	mov	r1, r0
   84528:	4620      	mov	r0, r4
   8452a:	f001 f99b 	bl	85864 <__pow5mult>
   8452e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84530:	4607      	mov	r7, r0
   84532:	2b01      	cmp	r3, #1
   84534:	f340 80d4 	ble.w	846e0 <_dtoa_r+0xa8c>
   84538:	2300      	movs	r3, #0
   8453a:	930c      	str	r3, [sp, #48]	; 0x30
   8453c:	693b      	ldr	r3, [r7, #16]
   8453e:	eb07 0383 	add.w	r3, r7, r3, lsl #2
   84542:	6918      	ldr	r0, [r3, #16]
   84544:	f001 f88e 	bl	85664 <__hi0bits>
   84548:	f1c0 0020 	rsb	r0, r0, #32
   8454c:	e6cb      	b.n	842e6 <_dtoa_r+0x692>
   8454e:	900d      	str	r0, [sp, #52]	; 0x34
   84550:	e422      	b.n	83d98 <_dtoa_r+0x144>
   84552:	2601      	movs	r6, #1
   84554:	e439      	b.n	83dca <_dtoa_r+0x176>
   84556:	f1c3 0620 	rsb	r6, r3, #32
   8455a:	9b02      	ldr	r3, [sp, #8]
   8455c:	fa03 f006 	lsl.w	r0, r3, r6
   84560:	f7ff bbd3 	b.w	83d0a <_dtoa_r+0xb6>
   84564:	2300      	movs	r3, #0
   84566:	9309      	str	r3, [sp, #36]	; 0x24
   84568:	9b05      	ldr	r3, [sp, #20]
   8456a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
   8456c:	4413      	add	r3, r2
   8456e:	9314      	str	r3, [sp, #80]	; 0x50
   84570:	3301      	adds	r3, #1
   84572:	2b01      	cmp	r3, #1
   84574:	461f      	mov	r7, r3
   84576:	bfb8      	it	lt
   84578:	2701      	movlt	r7, #1
   8457a:	9308      	str	r3, [sp, #32]
   8457c:	2100      	movs	r1, #0
   8457e:	2f17      	cmp	r7, #23
   84580:	9d08      	ldr	r5, [sp, #32]
   84582:	6461      	str	r1, [r4, #68]	; 0x44
   84584:	f77f ac85 	ble.w	83e92 <_dtoa_r+0x23e>
   84588:	2201      	movs	r2, #1
   8458a:	2304      	movs	r3, #4
   8458c:	005b      	lsls	r3, r3, #1
   8458e:	f103 0014 	add.w	r0, r3, #20
   84592:	42b8      	cmp	r0, r7
   84594:	4611      	mov	r1, r2
   84596:	f102 0201 	add.w	r2, r2, #1
   8459a:	d9f7      	bls.n	8458c <_dtoa_r+0x938>
   8459c:	6461      	str	r1, [r4, #68]	; 0x44
   8459e:	e478      	b.n	83e92 <_dtoa_r+0x23e>
   845a0:	2300      	movs	r3, #0
   845a2:	9309      	str	r3, [sp, #36]	; 0x24
   845a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   845a6:	2b00      	cmp	r3, #0
   845a8:	f340 80e2 	ble.w	84770 <_dtoa_r+0xb1c>
   845ac:	9314      	str	r3, [sp, #80]	; 0x50
   845ae:	9308      	str	r3, [sp, #32]
   845b0:	461f      	mov	r7, r3
   845b2:	e7e3      	b.n	8457c <_dtoa_r+0x928>
   845b4:	2301      	movs	r3, #1
   845b6:	9309      	str	r3, [sp, #36]	; 0x24
   845b8:	e7f4      	b.n	845a4 <_dtoa_r+0x950>
   845ba:	9b02      	ldr	r3, [sp, #8]
   845bc:	2b00      	cmp	r3, #0
   845be:	f47f ae91 	bne.w	842e4 <_dtoa_r+0x690>
   845c2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
   845c6:	f3c2 0313 	ubfx	r3, r2, #0, #20
   845ca:	2b00      	cmp	r3, #0
   845cc:	f040 8199 	bne.w	84902 <_dtoa_r+0xcae>
   845d0:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
   845d4:	0d1b      	lsrs	r3, r3, #20
   845d6:	051b      	lsls	r3, r3, #20
   845d8:	b12b      	cbz	r3, 845e6 <_dtoa_r+0x992>
   845da:	9b06      	ldr	r3, [sp, #24]
   845dc:	f10a 0a01 	add.w	sl, sl, #1
   845e0:	3301      	adds	r3, #1
   845e2:	9306      	str	r3, [sp, #24]
   845e4:	2301      	movs	r3, #1
   845e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   845e8:	930c      	str	r3, [sp, #48]	; 0x30
   845ea:	2a00      	cmp	r2, #0
   845ec:	f43f ae7a 	beq.w	842e4 <_dtoa_r+0x690>
   845f0:	e7a4      	b.n	8453c <_dtoa_r+0x8e8>
   845f2:	4642      	mov	r2, r8
   845f4:	4631      	mov	r1, r6
   845f6:	4620      	mov	r0, r4
   845f8:	f001 f934 	bl	85864 <__pow5mult>
   845fc:	465a      	mov	r2, fp
   845fe:	4601      	mov	r1, r0
   84600:	4606      	mov	r6, r0
   84602:	4620      	mov	r0, r4
   84604:	f001 f888 	bl	85718 <__multiply>
   84608:	4680      	mov	r8, r0
   8460a:	4659      	mov	r1, fp
   8460c:	4620      	mov	r0, r4
   8460e:	f000 ff91 	bl	85534 <_Bfree>
   84612:	46c3      	mov	fp, r8
   84614:	2f00      	cmp	r7, #0
   84616:	f43f ae58 	beq.w	842ca <_dtoa_r+0x676>
   8461a:	e650      	b.n	842be <_dtoa_r+0x66a>
   8461c:	4631      	mov	r1, r6
   8461e:	461a      	mov	r2, r3
   84620:	4620      	mov	r0, r4
   84622:	f001 f96f 	bl	85904 <__lshift>
   84626:	4606      	mov	r6, r0
   84628:	e691      	b.n	8434e <_dtoa_r+0x6fa>
   8462a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8462c:	2a00      	cmp	r2, #0
   8462e:	f000 815d 	beq.w	848ec <_dtoa_r+0xc98>
   84632:	9a06      	ldr	r2, [sp, #24]
   84634:	f203 4333 	addw	r3, r3, #1075	; 0x433
   84638:	920a      	str	r2, [sp, #40]	; 0x28
   8463a:	441a      	add	r2, r3
   8463c:	449a      	add	sl, r3
   8463e:	9206      	str	r2, [sp, #24]
   84640:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   84644:	e5f1      	b.n	8422a <_dtoa_r+0x5d6>
   84646:	9b08      	ldr	r3, [sp, #32]
   84648:	2b00      	cmp	r3, #0
   8464a:	f73f ad3b 	bgt.w	840c4 <_dtoa_r+0x470>
   8464e:	f040 81f8 	bne.w	84a42 <_dtoa_r+0xdee>
   84652:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   84656:	2200      	movs	r2, #0
   84658:	4bb5      	ldr	r3, [pc, #724]	; (84930 <_dtoa_r+0xcdc>)
   8465a:	f002 fd3d 	bl	870d8 <__aeabi_dmul>
   8465e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   84662:	f002 ffbf 	bl	875e4 <__aeabi_dcmpge>
   84666:	9f08      	ldr	r7, [sp, #32]
   84668:	463e      	mov	r6, r7
   8466a:	2800      	cmp	r0, #0
   8466c:	d174      	bne.n	84758 <_dtoa_r+0xb04>
   8466e:	2331      	movs	r3, #49	; 0x31
   84670:	9a05      	ldr	r2, [sp, #20]
   84672:	f889 3000 	strb.w	r3, [r9]
   84676:	3201      	adds	r2, #1
   84678:	9205      	str	r2, [sp, #20]
   8467a:	f109 0501 	add.w	r5, r9, #1
   8467e:	4639      	mov	r1, r7
   84680:	4620      	mov	r0, r4
   84682:	f000 ff57 	bl	85534 <_Bfree>
   84686:	2e00      	cmp	r6, #0
   84688:	f47f af34 	bne.w	844f4 <_dtoa_r+0x8a0>
   8468c:	e736      	b.n	844fc <_dtoa_r+0x8a8>
   8468e:	f000 8148 	beq.w	84922 <_dtoa_r+0xcce>
   84692:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   84696:	9b05      	ldr	r3, [sp, #20]
   84698:	425d      	negs	r5, r3
   8469a:	4ba6      	ldr	r3, [pc, #664]	; (84934 <_dtoa_r+0xce0>)
   8469c:	f005 020f 	and.w	r2, r5, #15
   846a0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   846a4:	e9d3 2300 	ldrd	r2, r3, [r3]
   846a8:	f002 fd16 	bl	870d8 <__aeabi_dmul>
   846ac:	112d      	asrs	r5, r5, #4
   846ae:	e9cd 0102 	strd	r0, r1, [sp, #8]
   846b2:	f000 81ce 	beq.w	84a52 <_dtoa_r+0xdfe>
   846b6:	2300      	movs	r3, #0
   846b8:	2702      	movs	r7, #2
   846ba:	4e9f      	ldr	r6, [pc, #636]	; (84938 <_dtoa_r+0xce4>)
   846bc:	07ea      	lsls	r2, r5, #31
   846be:	d505      	bpl.n	846cc <_dtoa_r+0xa78>
   846c0:	e9d6 2300 	ldrd	r2, r3, [r6]
   846c4:	f002 fd08 	bl	870d8 <__aeabi_dmul>
   846c8:	2301      	movs	r3, #1
   846ca:	441f      	add	r7, r3
   846cc:	106d      	asrs	r5, r5, #1
   846ce:	f106 0608 	add.w	r6, r6, #8
   846d2:	d1f3      	bne.n	846bc <_dtoa_r+0xa68>
   846d4:	2b00      	cmp	r3, #0
   846d6:	f43f ac23 	beq.w	83f20 <_dtoa_r+0x2cc>
   846da:	e9cd 0102 	strd	r0, r1, [sp, #8]
   846de:	e41f      	b.n	83f20 <_dtoa_r+0x2cc>
   846e0:	9b02      	ldr	r3, [sp, #8]
   846e2:	2b00      	cmp	r3, #0
   846e4:	f43f af6d 	beq.w	845c2 <_dtoa_r+0x96e>
   846e8:	e726      	b.n	84538 <_dtoa_r+0x8e4>
   846ea:	6871      	ldr	r1, [r6, #4]
   846ec:	4620      	mov	r0, r4
   846ee:	f000 fefb 	bl	854e8 <_Balloc>
   846f2:	4605      	mov	r5, r0
   846f4:	6933      	ldr	r3, [r6, #16]
   846f6:	f106 010c 	add.w	r1, r6, #12
   846fa:	3302      	adds	r3, #2
   846fc:	009a      	lsls	r2, r3, #2
   846fe:	300c      	adds	r0, #12
   84700:	f000 fe16 	bl	85330 <memcpy>
   84704:	4629      	mov	r1, r5
   84706:	2201      	movs	r2, #1
   84708:	4620      	mov	r0, r4
   8470a:	f001 f8fb 	bl	85904 <__lshift>
   8470e:	4682      	mov	sl, r0
   84710:	e622      	b.n	84358 <_dtoa_r+0x704>
   84712:	2500      	movs	r5, #0
   84714:	4620      	mov	r0, r4
   84716:	6465      	str	r5, [r4, #68]	; 0x44
   84718:	4629      	mov	r1, r5
   8471a:	f000 fee5 	bl	854e8 <_Balloc>
   8471e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   84722:	9314      	str	r3, [sp, #80]	; 0x50
   84724:	9308      	str	r3, [sp, #32]
   84726:	2301      	movs	r3, #1
   84728:	4681      	mov	r9, r0
   8472a:	9523      	str	r5, [sp, #140]	; 0x8c
   8472c:	6420      	str	r0, [r4, #64]	; 0x40
   8472e:	9309      	str	r3, [sp, #36]	; 0x24
   84730:	e4b5      	b.n	8409e <_dtoa_r+0x44a>
   84732:	f000 ff09 	bl	85548 <__multadd>
   84736:	46a8      	mov	r8, r5
   84738:	4606      	mov	r6, r0
   8473a:	4682      	mov	sl, r0
   8473c:	e618      	b.n	84370 <_dtoa_r+0x71c>
   8473e:	4620      	mov	r0, r4
   84740:	f000 fef8 	bl	85534 <_Bfree>
   84744:	2201      	movs	r2, #1
   84746:	e63c      	b.n	843c2 <_dtoa_r+0x76e>
   84748:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8474a:	2b02      	cmp	r3, #2
   8474c:	f77f adf7 	ble.w	8433e <_dtoa_r+0x6ea>
   84750:	9b08      	ldr	r3, [sp, #32]
   84752:	2b00      	cmp	r3, #0
   84754:	f000 80d7 	beq.w	84906 <_dtoa_r+0xcb2>
   84758:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8475a:	464d      	mov	r5, r9
   8475c:	43db      	mvns	r3, r3
   8475e:	9305      	str	r3, [sp, #20]
   84760:	e78d      	b.n	8467e <_dtoa_r+0xa2a>
   84762:	2331      	movs	r3, #49	; 0x31
   84764:	9a05      	ldr	r2, [sp, #20]
   84766:	f889 3000 	strb.w	r3, [r9]
   8476a:	3201      	adds	r2, #1
   8476c:	9205      	str	r2, [sp, #20]
   8476e:	e6b5      	b.n	844dc <_dtoa_r+0x888>
   84770:	2501      	movs	r5, #1
   84772:	9523      	str	r5, [sp, #140]	; 0x8c
   84774:	9508      	str	r5, [sp, #32]
   84776:	f7ff bb89 	b.w	83e8c <_dtoa_r+0x238>
   8477a:	4638      	mov	r0, r7
   8477c:	f002 fc42 	bl	87004 <__aeabi_i2d>
   84780:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   84784:	f002 fca8 	bl	870d8 <__aeabi_dmul>
   84788:	2200      	movs	r2, #0
   8478a:	4b6c      	ldr	r3, [pc, #432]	; (8493c <_dtoa_r+0xce8>)
   8478c:	f002 faee 	bl	86d6c <__adddf3>
   84790:	4605      	mov	r5, r0
   84792:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84796:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8479a:	2200      	movs	r2, #0
   8479c:	4b64      	ldr	r3, [pc, #400]	; (84930 <_dtoa_r+0xcdc>)
   8479e:	f002 fae3 	bl	86d68 <__aeabi_dsub>
   847a2:	462a      	mov	r2, r5
   847a4:	4633      	mov	r3, r6
   847a6:	e9cd 0102 	strd	r0, r1, [sp, #8]
   847aa:	f002 ff25 	bl	875f8 <__aeabi_dcmpgt>
   847ae:	4607      	mov	r7, r0
   847b0:	2800      	cmp	r0, #0
   847b2:	d158      	bne.n	84866 <_dtoa_r+0xc12>
   847b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   847b8:	462a      	mov	r2, r5
   847ba:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   847be:	f002 fefd 	bl	875bc <__aeabi_dcmplt>
   847c2:	2800      	cmp	r0, #0
   847c4:	f43f ac67 	beq.w	84096 <_dtoa_r+0x442>
   847c8:	463e      	mov	r6, r7
   847ca:	e7c5      	b.n	84758 <_dtoa_r+0xb04>
   847cc:	2301      	movs	r3, #1
   847ce:	9309      	str	r3, [sp, #36]	; 0x24
   847d0:	e6ca      	b.n	84568 <_dtoa_r+0x914>
   847d2:	4659      	mov	r1, fp
   847d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   847d6:	4620      	mov	r0, r4
   847d8:	f001 f844 	bl	85864 <__pow5mult>
   847dc:	4683      	mov	fp, r0
   847de:	e574      	b.n	842ca <_dtoa_r+0x676>
   847e0:	f8dd b008 	ldr.w	fp, [sp, #8]
   847e4:	e68a      	b.n	844fc <_dtoa_r+0x8a8>
   847e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   847e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   847ea:	eba8 0303 	sub.w	r3, r8, r3
   847ee:	441a      	add	r2, r3
   847f0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
   847f4:	920c      	str	r2, [sp, #48]	; 0x30
   847f6:	f04f 0800 	mov.w	r8, #0
   847fa:	e50d      	b.n	84218 <_dtoa_r+0x5c4>
   847fc:	2a00      	cmp	r2, #0
   847fe:	464b      	mov	r3, r9
   84800:	f108 0501 	add.w	r5, r8, #1
   84804:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   84808:	f300 80c5 	bgt.w	84996 <_dtoa_r+0xd42>
   8480c:	9602      	str	r6, [sp, #8]
   8480e:	f888 3000 	strb.w	r3, [r8]
   84812:	4656      	mov	r6, sl
   84814:	e662      	b.n	844dc <_dtoa_r+0x888>
   84816:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   8481a:	2702      	movs	r7, #2
   8481c:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   84820:	f7ff bb65 	b.w	83eee <_dtoa_r+0x29a>
   84824:	464b      	mov	r3, r9
   84826:	2b39      	cmp	r3, #57	; 0x39
   84828:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   8482c:	f000 80c5 	beq.w	849ba <_dtoa_r+0xd66>
   84830:	3301      	adds	r3, #1
   84832:	9602      	str	r6, [sp, #8]
   84834:	f888 3000 	strb.w	r3, [r8]
   84838:	4656      	mov	r6, sl
   8483a:	e64f      	b.n	844dc <_dtoa_r+0x888>
   8483c:	9b06      	ldr	r3, [sp, #24]
   8483e:	9a08      	ldr	r2, [sp, #32]
   84840:	1a9b      	subs	r3, r3, r2
   84842:	930a      	str	r3, [sp, #40]	; 0x28
   84844:	e4f1      	b.n	8422a <_dtoa_r+0x5d6>
   84846:	464b      	mov	r3, r9
   84848:	9602      	str	r6, [sp, #8]
   8484a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   8484e:	4656      	mov	r6, sl
   84850:	e61d      	b.n	8448e <_dtoa_r+0x83a>
   84852:	2330      	movs	r3, #48	; 0x30
   84854:	f889 3000 	strb.w	r3, [r9]
   84858:	9b05      	ldr	r3, [sp, #20]
   8485a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   8485e:	3301      	adds	r3, #1
   84860:	9305      	str	r3, [sp, #20]
   84862:	464b      	mov	r3, r9
   84864:	e4c3      	b.n	841ee <_dtoa_r+0x59a>
   84866:	2700      	movs	r7, #0
   84868:	463e      	mov	r6, r7
   8486a:	e700      	b.n	8466e <_dtoa_r+0xa1a>
   8486c:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   84870:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   84874:	f002 fc30 	bl	870d8 <__aeabi_dmul>
   84878:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8487a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8487e:	2b01      	cmp	r3, #1
   84880:	f889 8000 	strb.w	r8, [r9]
   84884:	d021      	beq.n	848ca <_dtoa_r+0xc76>
   84886:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84888:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
   8488c:	444b      	add	r3, r9
   8488e:	469a      	mov	sl, r3
   84890:	2200      	movs	r2, #0
   84892:	4b2b      	ldr	r3, [pc, #172]	; (84940 <_dtoa_r+0xcec>)
   84894:	4630      	mov	r0, r6
   84896:	4639      	mov	r1, r7
   84898:	f002 fc1e 	bl	870d8 <__aeabi_dmul>
   8489c:	460f      	mov	r7, r1
   8489e:	4606      	mov	r6, r0
   848a0:	f002 feca 	bl	87638 <__aeabi_d2iz>
   848a4:	4680      	mov	r8, r0
   848a6:	f002 fbad 	bl	87004 <__aeabi_i2d>
   848aa:	4602      	mov	r2, r0
   848ac:	460b      	mov	r3, r1
   848ae:	4630      	mov	r0, r6
   848b0:	4639      	mov	r1, r7
   848b2:	f002 fa59 	bl	86d68 <__aeabi_dsub>
   848b6:	f108 0830 	add.w	r8, r8, #48	; 0x30
   848ba:	f805 8b01 	strb.w	r8, [r5], #1
   848be:	4555      	cmp	r5, sl
   848c0:	4606      	mov	r6, r0
   848c2:	460f      	mov	r7, r1
   848c4:	d1e4      	bne.n	84890 <_dtoa_r+0xc3c>
   848c6:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
   848ca:	2200      	movs	r2, #0
   848cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   848d0:	4b1c      	ldr	r3, [pc, #112]	; (84944 <_dtoa_r+0xcf0>)
   848d2:	f002 fa4b 	bl	86d6c <__adddf3>
   848d6:	4632      	mov	r2, r6
   848d8:	463b      	mov	r3, r7
   848da:	f002 fe6f 	bl	875bc <__aeabi_dcmplt>
   848de:	2800      	cmp	r0, #0
   848e0:	d071      	beq.n	849c6 <_dtoa_r+0xd72>
   848e2:	9b15      	ldr	r3, [sp, #84]	; 0x54
   848e4:	9305      	str	r3, [sp, #20]
   848e6:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   848ea:	e47b      	b.n	841e4 <_dtoa_r+0x590>
   848ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
   848ee:	9a06      	ldr	r2, [sp, #24]
   848f0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   848f4:	920a      	str	r2, [sp, #40]	; 0x28
   848f6:	441a      	add	r2, r3
   848f8:	449a      	add	sl, r3
   848fa:	9206      	str	r2, [sp, #24]
   848fc:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   84900:	e493      	b.n	8422a <_dtoa_r+0x5d6>
   84902:	2300      	movs	r3, #0
   84904:	e66f      	b.n	845e6 <_dtoa_r+0x992>
   84906:	4639      	mov	r1, r7
   84908:	2205      	movs	r2, #5
   8490a:	4620      	mov	r0, r4
   8490c:	f000 fe1c 	bl	85548 <__multadd>
   84910:	4601      	mov	r1, r0
   84912:	4607      	mov	r7, r0
   84914:	4658      	mov	r0, fp
   84916:	f001 f84f 	bl	859b8 <__mcmp>
   8491a:	2800      	cmp	r0, #0
   8491c:	f73f aea7 	bgt.w	8466e <_dtoa_r+0xa1a>
   84920:	e71a      	b.n	84758 <_dtoa_r+0xb04>
   84922:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   84926:	2702      	movs	r7, #2
   84928:	e9cd 2302 	strd	r2, r3, [sp, #8]
   8492c:	f7ff baf8 	b.w	83f20 <_dtoa_r+0x2cc>
   84930:	40140000 	.word	0x40140000
   84934:	00087750 	.word	0x00087750
   84938:	00087840 	.word	0x00087840
   8493c:	401c0000 	.word	0x401c0000
   84940:	40240000 	.word	0x40240000
   84944:	3fe00000 	.word	0x3fe00000
   84948:	9b08      	ldr	r3, [sp, #32]
   8494a:	2b00      	cmp	r3, #0
   8494c:	f43f af15 	beq.w	8477a <_dtoa_r+0xb26>
   84950:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84952:	2b00      	cmp	r3, #0
   84954:	f77f ab9f 	ble.w	84096 <_dtoa_r+0x442>
   84958:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8495c:	2200      	movs	r2, #0
   8495e:	4b45      	ldr	r3, [pc, #276]	; (84a74 <_dtoa_r+0xe20>)
   84960:	f002 fbba 	bl	870d8 <__aeabi_dmul>
   84964:	4605      	mov	r5, r0
   84966:	460e      	mov	r6, r1
   84968:	1c78      	adds	r0, r7, #1
   8496a:	e9cd 5602 	strd	r5, r6, [sp, #8]
   8496e:	f002 fb49 	bl	87004 <__aeabi_i2d>
   84972:	462a      	mov	r2, r5
   84974:	4633      	mov	r3, r6
   84976:	f002 fbaf 	bl	870d8 <__aeabi_dmul>
   8497a:	2200      	movs	r2, #0
   8497c:	4b3e      	ldr	r3, [pc, #248]	; (84a78 <_dtoa_r+0xe24>)
   8497e:	f002 f9f5 	bl	86d6c <__adddf3>
   84982:	9a05      	ldr	r2, [sp, #20]
   84984:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84986:	3a01      	subs	r2, #1
   84988:	4605      	mov	r5, r0
   8498a:	9215      	str	r2, [sp, #84]	; 0x54
   8498c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84990:	9310      	str	r3, [sp, #64]	; 0x40
   84992:	f7ff bae6 	b.w	83f62 <_dtoa_r+0x30e>
   84996:	4659      	mov	r1, fp
   84998:	2201      	movs	r2, #1
   8499a:	4620      	mov	r0, r4
   8499c:	9302      	str	r3, [sp, #8]
   8499e:	f000 ffb1 	bl	85904 <__lshift>
   849a2:	4639      	mov	r1, r7
   849a4:	4683      	mov	fp, r0
   849a6:	f001 f807 	bl	859b8 <__mcmp>
   849aa:	2800      	cmp	r0, #0
   849ac:	9b02      	ldr	r3, [sp, #8]
   849ae:	dd36      	ble.n	84a1e <_dtoa_r+0xdca>
   849b0:	2b39      	cmp	r3, #57	; 0x39
   849b2:	d002      	beq.n	849ba <_dtoa_r+0xd66>
   849b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   849b6:	3331      	adds	r3, #49	; 0x31
   849b8:	e728      	b.n	8480c <_dtoa_r+0xbb8>
   849ba:	2239      	movs	r2, #57	; 0x39
   849bc:	9602      	str	r6, [sp, #8]
   849be:	f888 2000 	strb.w	r2, [r8]
   849c2:	4656      	mov	r6, sl
   849c4:	e584      	b.n	844d0 <_dtoa_r+0x87c>
   849c6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   849ca:	2000      	movs	r0, #0
   849cc:	492b      	ldr	r1, [pc, #172]	; (84a7c <_dtoa_r+0xe28>)
   849ce:	f002 f9cb 	bl	86d68 <__aeabi_dsub>
   849d2:	4632      	mov	r2, r6
   849d4:	463b      	mov	r3, r7
   849d6:	f002 fe0f 	bl	875f8 <__aeabi_dcmpgt>
   849da:	b910      	cbnz	r0, 849e2 <_dtoa_r+0xd8e>
   849dc:	f7ff bb5b 	b.w	84096 <_dtoa_r+0x442>
   849e0:	4615      	mov	r5, r2
   849e2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   849e6:	1e6a      	subs	r2, r5, #1
   849e8:	2b30      	cmp	r3, #48	; 0x30
   849ea:	d0f9      	beq.n	849e0 <_dtoa_r+0xd8c>
   849ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
   849ee:	9305      	str	r3, [sp, #20]
   849f0:	e584      	b.n	844fc <_dtoa_r+0x8a8>
   849f2:	4643      	mov	r3, r8
   849f4:	46a0      	mov	r8, r4
   849f6:	461c      	mov	r4, r3
   849f8:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   849fc:	f8dd 9008 	ldr.w	r9, [sp, #8]
   84a00:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84a02:	9305      	str	r3, [sp, #20]
   84a04:	f7ff bbee 	b.w	841e4 <_dtoa_r+0x590>
   84a08:	464b      	mov	r3, r9
   84a0a:	2b39      	cmp	r3, #57	; 0x39
   84a0c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   84a10:	f108 0501 	add.w	r5, r8, #1
   84a14:	d0d1      	beq.n	849ba <_dtoa_r+0xd66>
   84a16:	9a02      	ldr	r2, [sp, #8]
   84a18:	2a00      	cmp	r2, #0
   84a1a:	dccb      	bgt.n	849b4 <_dtoa_r+0xd60>
   84a1c:	e6f6      	b.n	8480c <_dtoa_r+0xbb8>
   84a1e:	f47f aef5 	bne.w	8480c <_dtoa_r+0xbb8>
   84a22:	07da      	lsls	r2, r3, #31
   84a24:	f57f aef2 	bpl.w	8480c <_dtoa_r+0xbb8>
   84a28:	e7c2      	b.n	849b0 <_dtoa_r+0xd5c>
   84a2a:	4631      	mov	r1, r6
   84a2c:	2300      	movs	r3, #0
   84a2e:	220a      	movs	r2, #10
   84a30:	4620      	mov	r0, r4
   84a32:	f000 fd89 	bl	85548 <__multadd>
   84a36:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84a38:	4606      	mov	r6, r0
   84a3a:	2b00      	cmp	r3, #0
   84a3c:	dd0c      	ble.n	84a58 <_dtoa_r+0xe04>
   84a3e:	9308      	str	r3, [sp, #32]
   84a40:	e481      	b.n	84346 <_dtoa_r+0x6f2>
   84a42:	2700      	movs	r7, #0
   84a44:	463e      	mov	r6, r7
   84a46:	e687      	b.n	84758 <_dtoa_r+0xb04>
   84a48:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84a4a:	2b02      	cmp	r3, #2
   84a4c:	dc0e      	bgt.n	84a6c <_dtoa_r+0xe18>
   84a4e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84a50:	e501      	b.n	84456 <_dtoa_r+0x802>
   84a52:	2702      	movs	r7, #2
   84a54:	f7ff ba64 	b.w	83f20 <_dtoa_r+0x2cc>
   84a58:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84a5a:	2b02      	cmp	r3, #2
   84a5c:	dc06      	bgt.n	84a6c <_dtoa_r+0xe18>
   84a5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84a60:	e7ed      	b.n	84a3e <_dtoa_r+0xdea>
   84a62:	f43f ac53 	beq.w	8430c <_dtoa_r+0x6b8>
   84a66:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   84a6a:	e448      	b.n	842fe <_dtoa_r+0x6aa>
   84a6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84a6e:	9308      	str	r3, [sp, #32]
   84a70:	e66e      	b.n	84750 <_dtoa_r+0xafc>
   84a72:	bf00      	nop
   84a74:	40240000 	.word	0x40240000
   84a78:	401c0000 	.word	0x401c0000
   84a7c:	3fe00000 	.word	0x3fe00000

00084a80 <_malloc_trim_r>:
   84a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84a82:	460c      	mov	r4, r1
   84a84:	4f23      	ldr	r7, [pc, #140]	; (84b14 <_malloc_trim_r+0x94>)
   84a86:	4606      	mov	r6, r0
   84a88:	f000 fd2a 	bl	854e0 <__malloc_lock>
   84a8c:	68bb      	ldr	r3, [r7, #8]
   84a8e:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   84a92:	685d      	ldr	r5, [r3, #4]
   84a94:	310f      	adds	r1, #15
   84a96:	f025 0503 	bic.w	r5, r5, #3
   84a9a:	4429      	add	r1, r5
   84a9c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84aa0:	f021 010f 	bic.w	r1, r1, #15
   84aa4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   84aa8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   84aac:	db07      	blt.n	84abe <_malloc_trim_r+0x3e>
   84aae:	2100      	movs	r1, #0
   84ab0:	4630      	mov	r0, r6
   84ab2:	f001 fb47 	bl	86144 <_sbrk_r>
   84ab6:	68bb      	ldr	r3, [r7, #8]
   84ab8:	442b      	add	r3, r5
   84aba:	4298      	cmp	r0, r3
   84abc:	d004      	beq.n	84ac8 <_malloc_trim_r+0x48>
   84abe:	4630      	mov	r0, r6
   84ac0:	f000 fd10 	bl	854e4 <__malloc_unlock>
   84ac4:	2000      	movs	r0, #0
   84ac6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84ac8:	4261      	negs	r1, r4
   84aca:	4630      	mov	r0, r6
   84acc:	f001 fb3a 	bl	86144 <_sbrk_r>
   84ad0:	3001      	adds	r0, #1
   84ad2:	d00d      	beq.n	84af0 <_malloc_trim_r+0x70>
   84ad4:	4b10      	ldr	r3, [pc, #64]	; (84b18 <_malloc_trim_r+0x98>)
   84ad6:	68ba      	ldr	r2, [r7, #8]
   84ad8:	6819      	ldr	r1, [r3, #0]
   84ada:	1b2d      	subs	r5, r5, r4
   84adc:	f045 0501 	orr.w	r5, r5, #1
   84ae0:	4630      	mov	r0, r6
   84ae2:	1b09      	subs	r1, r1, r4
   84ae4:	6055      	str	r5, [r2, #4]
   84ae6:	6019      	str	r1, [r3, #0]
   84ae8:	f000 fcfc 	bl	854e4 <__malloc_unlock>
   84aec:	2001      	movs	r0, #1
   84aee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84af0:	2100      	movs	r1, #0
   84af2:	4630      	mov	r0, r6
   84af4:	f001 fb26 	bl	86144 <_sbrk_r>
   84af8:	68ba      	ldr	r2, [r7, #8]
   84afa:	1a83      	subs	r3, r0, r2
   84afc:	2b0f      	cmp	r3, #15
   84afe:	ddde      	ble.n	84abe <_malloc_trim_r+0x3e>
   84b00:	4906      	ldr	r1, [pc, #24]	; (84b1c <_malloc_trim_r+0x9c>)
   84b02:	f043 0301 	orr.w	r3, r3, #1
   84b06:	680c      	ldr	r4, [r1, #0]
   84b08:	4903      	ldr	r1, [pc, #12]	; (84b18 <_malloc_trim_r+0x98>)
   84b0a:	1b00      	subs	r0, r0, r4
   84b0c:	6053      	str	r3, [r2, #4]
   84b0e:	6008      	str	r0, [r1, #0]
   84b10:	e7d5      	b.n	84abe <_malloc_trim_r+0x3e>
   84b12:	bf00      	nop
   84b14:	20070834 	.word	0x20070834
   84b18:	20070c7c 	.word	0x20070c7c
   84b1c:	20070c3c 	.word	0x20070c3c

00084b20 <_free_r>:
   84b20:	2900      	cmp	r1, #0
   84b22:	d053      	beq.n	84bcc <_free_r+0xac>
   84b24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84b26:	460d      	mov	r5, r1
   84b28:	4606      	mov	r6, r0
   84b2a:	f000 fcd9 	bl	854e0 <__malloc_lock>
   84b2e:	f855 cc04 	ldr.w	ip, [r5, #-4]
   84b32:	4f71      	ldr	r7, [pc, #452]	; (84cf8 <_free_r+0x1d8>)
   84b34:	f1a5 0108 	sub.w	r1, r5, #8
   84b38:	f02c 0301 	bic.w	r3, ip, #1
   84b3c:	18ca      	adds	r2, r1, r3
   84b3e:	68b8      	ldr	r0, [r7, #8]
   84b40:	6854      	ldr	r4, [r2, #4]
   84b42:	4290      	cmp	r0, r2
   84b44:	f024 0403 	bic.w	r4, r4, #3
   84b48:	d053      	beq.n	84bf2 <_free_r+0xd2>
   84b4a:	f01c 0f01 	tst.w	ip, #1
   84b4e:	6054      	str	r4, [r2, #4]
   84b50:	eb02 0004 	add.w	r0, r2, r4
   84b54:	d13b      	bne.n	84bce <_free_r+0xae>
   84b56:	f855 cc08 	ldr.w	ip, [r5, #-8]
   84b5a:	6840      	ldr	r0, [r0, #4]
   84b5c:	eba1 010c 	sub.w	r1, r1, ip
   84b60:	688d      	ldr	r5, [r1, #8]
   84b62:	f107 0e08 	add.w	lr, r7, #8
   84b66:	4575      	cmp	r5, lr
   84b68:	4463      	add	r3, ip
   84b6a:	f000 0001 	and.w	r0, r0, #1
   84b6e:	d075      	beq.n	84c5c <_free_r+0x13c>
   84b70:	f8d1 c00c 	ldr.w	ip, [r1, #12]
   84b74:	f8c5 c00c 	str.w	ip, [r5, #12]
   84b78:	f8cc 5008 	str.w	r5, [ip, #8]
   84b7c:	b360      	cbz	r0, 84bd8 <_free_r+0xb8>
   84b7e:	f043 0201 	orr.w	r2, r3, #1
   84b82:	604a      	str	r2, [r1, #4]
   84b84:	50cb      	str	r3, [r1, r3]
   84b86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84b8a:	d350      	bcc.n	84c2e <_free_r+0x10e>
   84b8c:	0a5a      	lsrs	r2, r3, #9
   84b8e:	2a04      	cmp	r2, #4
   84b90:	d870      	bhi.n	84c74 <_free_r+0x154>
   84b92:	099a      	lsrs	r2, r3, #6
   84b94:	f102 0539 	add.w	r5, r2, #57	; 0x39
   84b98:	00ed      	lsls	r5, r5, #3
   84b9a:	f102 0038 	add.w	r0, r2, #56	; 0x38
   84b9e:	197c      	adds	r4, r7, r5
   84ba0:	597a      	ldr	r2, [r7, r5]
   84ba2:	3c08      	subs	r4, #8
   84ba4:	4294      	cmp	r4, r2
   84ba6:	d078      	beq.n	84c9a <_free_r+0x17a>
   84ba8:	6850      	ldr	r0, [r2, #4]
   84baa:	f020 0003 	bic.w	r0, r0, #3
   84bae:	4298      	cmp	r0, r3
   84bb0:	d971      	bls.n	84c96 <_free_r+0x176>
   84bb2:	6892      	ldr	r2, [r2, #8]
   84bb4:	4294      	cmp	r4, r2
   84bb6:	d1f7      	bne.n	84ba8 <_free_r+0x88>
   84bb8:	68e3      	ldr	r3, [r4, #12]
   84bba:	e9c1 4302 	strd	r4, r3, [r1, #8]
   84bbe:	4630      	mov	r0, r6
   84bc0:	6099      	str	r1, [r3, #8]
   84bc2:	60e1      	str	r1, [r4, #12]
   84bc4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   84bc8:	f000 bc8c 	b.w	854e4 <__malloc_unlock>
   84bcc:	4770      	bx	lr
   84bce:	6840      	ldr	r0, [r0, #4]
   84bd0:	f000 0001 	and.w	r0, r0, #1
   84bd4:	2800      	cmp	r0, #0
   84bd6:	d1d2      	bne.n	84b7e <_free_r+0x5e>
   84bd8:	6890      	ldr	r0, [r2, #8]
   84bda:	4d48      	ldr	r5, [pc, #288]	; (84cfc <_free_r+0x1dc>)
   84bdc:	4423      	add	r3, r4
   84bde:	42a8      	cmp	r0, r5
   84be0:	f043 0401 	orr.w	r4, r3, #1
   84be4:	d062      	beq.n	84cac <_free_r+0x18c>
   84be6:	68d2      	ldr	r2, [r2, #12]
   84be8:	60c2      	str	r2, [r0, #12]
   84bea:	6090      	str	r0, [r2, #8]
   84bec:	604c      	str	r4, [r1, #4]
   84bee:	50cb      	str	r3, [r1, r3]
   84bf0:	e7c9      	b.n	84b86 <_free_r+0x66>
   84bf2:	f01c 0f01 	tst.w	ip, #1
   84bf6:	4423      	add	r3, r4
   84bf8:	d107      	bne.n	84c0a <_free_r+0xea>
   84bfa:	f855 4c08 	ldr.w	r4, [r5, #-8]
   84bfe:	1b09      	subs	r1, r1, r4
   84c00:	e9d1 0202 	ldrd	r0, r2, [r1, #8]
   84c04:	4423      	add	r3, r4
   84c06:	60c2      	str	r2, [r0, #12]
   84c08:	6090      	str	r0, [r2, #8]
   84c0a:	4a3d      	ldr	r2, [pc, #244]	; (84d00 <_free_r+0x1e0>)
   84c0c:	f043 0001 	orr.w	r0, r3, #1
   84c10:	6812      	ldr	r2, [r2, #0]
   84c12:	6048      	str	r0, [r1, #4]
   84c14:	429a      	cmp	r2, r3
   84c16:	60b9      	str	r1, [r7, #8]
   84c18:	d804      	bhi.n	84c24 <_free_r+0x104>
   84c1a:	4b3a      	ldr	r3, [pc, #232]	; (84d04 <_free_r+0x1e4>)
   84c1c:	4630      	mov	r0, r6
   84c1e:	6819      	ldr	r1, [r3, #0]
   84c20:	f7ff ff2e 	bl	84a80 <_malloc_trim_r>
   84c24:	4630      	mov	r0, r6
   84c26:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   84c2a:	f000 bc5b 	b.w	854e4 <__malloc_unlock>
   84c2e:	2201      	movs	r2, #1
   84c30:	08db      	lsrs	r3, r3, #3
   84c32:	687c      	ldr	r4, [r7, #4]
   84c34:	1098      	asrs	r0, r3, #2
   84c36:	4413      	add	r3, r2
   84c38:	4082      	lsls	r2, r0
   84c3a:	4322      	orrs	r2, r4
   84c3c:	eb07 00c3 	add.w	r0, r7, r3, lsl #3
   84c40:	f857 4033 	ldr.w	r4, [r7, r3, lsl #3]
   84c44:	3808      	subs	r0, #8
   84c46:	e9c1 4002 	strd	r4, r0, [r1, #8]
   84c4a:	607a      	str	r2, [r7, #4]
   84c4c:	4630      	mov	r0, r6
   84c4e:	f847 1033 	str.w	r1, [r7, r3, lsl #3]
   84c52:	60e1      	str	r1, [r4, #12]
   84c54:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   84c58:	f000 bc44 	b.w	854e4 <__malloc_unlock>
   84c5c:	2800      	cmp	r0, #0
   84c5e:	d145      	bne.n	84cec <_free_r+0x1cc>
   84c60:	e9d2 0202 	ldrd	r0, r2, [r2, #8]
   84c64:	4423      	add	r3, r4
   84c66:	f043 0401 	orr.w	r4, r3, #1
   84c6a:	60c2      	str	r2, [r0, #12]
   84c6c:	6090      	str	r0, [r2, #8]
   84c6e:	604c      	str	r4, [r1, #4]
   84c70:	50cb      	str	r3, [r1, r3]
   84c72:	e7d7      	b.n	84c24 <_free_r+0x104>
   84c74:	2a14      	cmp	r2, #20
   84c76:	d908      	bls.n	84c8a <_free_r+0x16a>
   84c78:	2a54      	cmp	r2, #84	; 0x54
   84c7a:	d81e      	bhi.n	84cba <_free_r+0x19a>
   84c7c:	0b1a      	lsrs	r2, r3, #12
   84c7e:	f102 056f 	add.w	r5, r2, #111	; 0x6f
   84c82:	00ed      	lsls	r5, r5, #3
   84c84:	f102 006e 	add.w	r0, r2, #110	; 0x6e
   84c88:	e789      	b.n	84b9e <_free_r+0x7e>
   84c8a:	f102 055c 	add.w	r5, r2, #92	; 0x5c
   84c8e:	00ed      	lsls	r5, r5, #3
   84c90:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   84c94:	e783      	b.n	84b9e <_free_r+0x7e>
   84c96:	4614      	mov	r4, r2
   84c98:	e78e      	b.n	84bb8 <_free_r+0x98>
   84c9a:	2301      	movs	r3, #1
   84c9c:	1082      	asrs	r2, r0, #2
   84c9e:	6878      	ldr	r0, [r7, #4]
   84ca0:	fa03 f202 	lsl.w	r2, r3, r2
   84ca4:	4302      	orrs	r2, r0
   84ca6:	607a      	str	r2, [r7, #4]
   84ca8:	4623      	mov	r3, r4
   84caa:	e786      	b.n	84bba <_free_r+0x9a>
   84cac:	e9c7 1104 	strd	r1, r1, [r7, #16]
   84cb0:	e9c1 0002 	strd	r0, r0, [r1, #8]
   84cb4:	604c      	str	r4, [r1, #4]
   84cb6:	50cb      	str	r3, [r1, r3]
   84cb8:	e7b4      	b.n	84c24 <_free_r+0x104>
   84cba:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   84cbe:	d806      	bhi.n	84cce <_free_r+0x1ae>
   84cc0:	0bda      	lsrs	r2, r3, #15
   84cc2:	f102 0578 	add.w	r5, r2, #120	; 0x78
   84cc6:	00ed      	lsls	r5, r5, #3
   84cc8:	f102 0077 	add.w	r0, r2, #119	; 0x77
   84ccc:	e767      	b.n	84b9e <_free_r+0x7e>
   84cce:	f240 5054 	movw	r0, #1364	; 0x554
   84cd2:	4282      	cmp	r2, r0
   84cd4:	d806      	bhi.n	84ce4 <_free_r+0x1c4>
   84cd6:	0c9a      	lsrs	r2, r3, #18
   84cd8:	f102 057d 	add.w	r5, r2, #125	; 0x7d
   84cdc:	00ed      	lsls	r5, r5, #3
   84cde:	f102 007c 	add.w	r0, r2, #124	; 0x7c
   84ce2:	e75c      	b.n	84b9e <_free_r+0x7e>
   84ce4:	f44f 757e 	mov.w	r5, #1016	; 0x3f8
   84ce8:	207e      	movs	r0, #126	; 0x7e
   84cea:	e758      	b.n	84b9e <_free_r+0x7e>
   84cec:	f043 0001 	orr.w	r0, r3, #1
   84cf0:	6048      	str	r0, [r1, #4]
   84cf2:	6013      	str	r3, [r2, #0]
   84cf4:	e796      	b.n	84c24 <_free_r+0x104>
   84cf6:	bf00      	nop
   84cf8:	20070834 	.word	0x20070834
   84cfc:	2007083c 	.word	0x2007083c
   84d00:	20070c40 	.word	0x20070c40
   84d04:	20070c78 	.word	0x20070c78

00084d08 <__localeconv_l>:
   84d08:	30f0      	adds	r0, #240	; 0xf0
   84d0a:	4770      	bx	lr

00084d0c <_localeconv_r>:
   84d0c:	4800      	ldr	r0, [pc, #0]	; (84d10 <_localeconv_r+0x4>)
   84d0e:	4770      	bx	lr
   84d10:	200707b8 	.word	0x200707b8

00084d14 <localeconv>:
   84d14:	4800      	ldr	r0, [pc, #0]	; (84d18 <localeconv+0x4>)
   84d16:	4770      	bx	lr
   84d18:	200707b8 	.word	0x200707b8

00084d1c <_malloc_r>:
   84d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84d20:	f101 050b 	add.w	r5, r1, #11
   84d24:	2d16      	cmp	r5, #22
   84d26:	b083      	sub	sp, #12
   84d28:	4606      	mov	r6, r0
   84d2a:	d823      	bhi.n	84d74 <_malloc_r+0x58>
   84d2c:	2910      	cmp	r1, #16
   84d2e:	f200 80b6 	bhi.w	84e9e <_malloc_r+0x182>
   84d32:	f000 fbd5 	bl	854e0 <__malloc_lock>
   84d36:	2510      	movs	r5, #16
   84d38:	2318      	movs	r3, #24
   84d3a:	2002      	movs	r0, #2
   84d3c:	4fd1      	ldr	r7, [pc, #836]	; (85084 <_malloc_r+0x368>)
   84d3e:	443b      	add	r3, r7
   84d40:	685c      	ldr	r4, [r3, #4]
   84d42:	f1a3 0208 	sub.w	r2, r3, #8
   84d46:	4294      	cmp	r4, r2
   84d48:	f000 815f 	beq.w	8500a <_malloc_r+0x2ee>
   84d4c:	6863      	ldr	r3, [r4, #4]
   84d4e:	68e1      	ldr	r1, [r4, #12]
   84d50:	f023 0303 	bic.w	r3, r3, #3
   84d54:	4423      	add	r3, r4
   84d56:	685a      	ldr	r2, [r3, #4]
   84d58:	68a5      	ldr	r5, [r4, #8]
   84d5a:	f042 0201 	orr.w	r2, r2, #1
   84d5e:	60e9      	str	r1, [r5, #12]
   84d60:	4630      	mov	r0, r6
   84d62:	608d      	str	r5, [r1, #8]
   84d64:	605a      	str	r2, [r3, #4]
   84d66:	f000 fbbd 	bl	854e4 <__malloc_unlock>
   84d6a:	3408      	adds	r4, #8
   84d6c:	4620      	mov	r0, r4
   84d6e:	b003      	add	sp, #12
   84d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84d74:	f035 0507 	bics.w	r5, r5, #7
   84d78:	f100 8091 	bmi.w	84e9e <_malloc_r+0x182>
   84d7c:	42a9      	cmp	r1, r5
   84d7e:	f200 808e 	bhi.w	84e9e <_malloc_r+0x182>
   84d82:	f000 fbad 	bl	854e0 <__malloc_lock>
   84d86:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   84d8a:	f0c0 816d 	bcc.w	85068 <_malloc_r+0x34c>
   84d8e:	0a6b      	lsrs	r3, r5, #9
   84d90:	f000 808c 	beq.w	84eac <_malloc_r+0x190>
   84d94:	2b04      	cmp	r3, #4
   84d96:	f200 813f 	bhi.w	85018 <_malloc_r+0x2fc>
   84d9a:	09ab      	lsrs	r3, r5, #6
   84d9c:	f103 0039 	add.w	r0, r3, #57	; 0x39
   84da0:	f103 0c38 	add.w	ip, r3, #56	; 0x38
   84da4:	00c1      	lsls	r1, r0, #3
   84da6:	4fb7      	ldr	r7, [pc, #732]	; (85084 <_malloc_r+0x368>)
   84da8:	4439      	add	r1, r7
   84daa:	684c      	ldr	r4, [r1, #4]
   84dac:	3908      	subs	r1, #8
   84dae:	42a1      	cmp	r1, r4
   84db0:	d106      	bne.n	84dc0 <_malloc_r+0xa4>
   84db2:	e00c      	b.n	84dce <_malloc_r+0xb2>
   84db4:	2a00      	cmp	r2, #0
   84db6:	f280 8124 	bge.w	85002 <_malloc_r+0x2e6>
   84dba:	68e4      	ldr	r4, [r4, #12]
   84dbc:	42a1      	cmp	r1, r4
   84dbe:	d006      	beq.n	84dce <_malloc_r+0xb2>
   84dc0:	6863      	ldr	r3, [r4, #4]
   84dc2:	f023 0303 	bic.w	r3, r3, #3
   84dc6:	1b5a      	subs	r2, r3, r5
   84dc8:	2a0f      	cmp	r2, #15
   84dca:	ddf3      	ble.n	84db4 <_malloc_r+0x98>
   84dcc:	4660      	mov	r0, ip
   84dce:	693c      	ldr	r4, [r7, #16]
   84dd0:	f8df c2b4 	ldr.w	ip, [pc, #692]	; 85088 <_malloc_r+0x36c>
   84dd4:	4564      	cmp	r4, ip
   84dd6:	d06f      	beq.n	84eb8 <_malloc_r+0x19c>
   84dd8:	6863      	ldr	r3, [r4, #4]
   84dda:	f023 0303 	bic.w	r3, r3, #3
   84dde:	1b5a      	subs	r2, r3, r5
   84de0:	2a0f      	cmp	r2, #15
   84de2:	f300 812f 	bgt.w	85044 <_malloc_r+0x328>
   84de6:	2a00      	cmp	r2, #0
   84de8:	e9c7 cc04 	strd	ip, ip, [r7, #16]
   84dec:	f280 8120 	bge.w	85030 <_malloc_r+0x314>
   84df0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84df4:	f080 815b 	bcs.w	850ae <_malloc_r+0x392>
   84df8:	2201      	movs	r2, #1
   84dfa:	08db      	lsrs	r3, r3, #3
   84dfc:	1099      	asrs	r1, r3, #2
   84dfe:	4413      	add	r3, r2
   84e00:	408a      	lsls	r2, r1
   84e02:	6879      	ldr	r1, [r7, #4]
   84e04:	f857 e033 	ldr.w	lr, [r7, r3, lsl #3]
   84e08:	eb07 08c3 	add.w	r8, r7, r3, lsl #3
   84e0c:	430a      	orrs	r2, r1
   84e0e:	f1a8 0108 	sub.w	r1, r8, #8
   84e12:	e9c4 e102 	strd	lr, r1, [r4, #8]
   84e16:	607a      	str	r2, [r7, #4]
   84e18:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   84e1c:	f8ce 400c 	str.w	r4, [lr, #12]
   84e20:	2401      	movs	r4, #1
   84e22:	1083      	asrs	r3, r0, #2
   84e24:	409c      	lsls	r4, r3
   84e26:	4294      	cmp	r4, r2
   84e28:	d84c      	bhi.n	84ec4 <_malloc_r+0x1a8>
   84e2a:	4214      	tst	r4, r2
   84e2c:	d106      	bne.n	84e3c <_malloc_r+0x120>
   84e2e:	f020 0003 	bic.w	r0, r0, #3
   84e32:	0064      	lsls	r4, r4, #1
   84e34:	4214      	tst	r4, r2
   84e36:	f100 0004 	add.w	r0, r0, #4
   84e3a:	d0fa      	beq.n	84e32 <_malloc_r+0x116>
   84e3c:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   84e40:	46ce      	mov	lr, r9
   84e42:	4680      	mov	r8, r0
   84e44:	f8de 300c 	ldr.w	r3, [lr, #12]
   84e48:	459e      	cmp	lr, r3
   84e4a:	d107      	bne.n	84e5c <_malloc_r+0x140>
   84e4c:	e110      	b.n	85070 <_malloc_r+0x354>
   84e4e:	2a00      	cmp	r2, #0
   84e50:	f280 811e 	bge.w	85090 <_malloc_r+0x374>
   84e54:	68db      	ldr	r3, [r3, #12]
   84e56:	459e      	cmp	lr, r3
   84e58:	f000 810a 	beq.w	85070 <_malloc_r+0x354>
   84e5c:	6859      	ldr	r1, [r3, #4]
   84e5e:	f021 0103 	bic.w	r1, r1, #3
   84e62:	1b4a      	subs	r2, r1, r5
   84e64:	2a0f      	cmp	r2, #15
   84e66:	ddf2      	ble.n	84e4e <_malloc_r+0x132>
   84e68:	f045 0801 	orr.w	r8, r5, #1
   84e6c:	4630      	mov	r0, r6
   84e6e:	e9d3 e402 	ldrd	lr, r4, [r3, #8]
   84e72:	441d      	add	r5, r3
   84e74:	f042 0601 	orr.w	r6, r2, #1
   84e78:	f8c3 8004 	str.w	r8, [r3, #4]
   84e7c:	f8ce 400c 	str.w	r4, [lr, #12]
   84e80:	f8c4 e008 	str.w	lr, [r4, #8]
   84e84:	e9c7 5504 	strd	r5, r5, [r7, #16]
   84e88:	e9c5 cc02 	strd	ip, ip, [r5, #8]
   84e8c:	606e      	str	r6, [r5, #4]
   84e8e:	505a      	str	r2, [r3, r1]
   84e90:	9300      	str	r3, [sp, #0]
   84e92:	f000 fb27 	bl	854e4 <__malloc_unlock>
   84e96:	9b00      	ldr	r3, [sp, #0]
   84e98:	f103 0408 	add.w	r4, r3, #8
   84e9c:	e766      	b.n	84d6c <_malloc_r+0x50>
   84e9e:	2400      	movs	r4, #0
   84ea0:	230c      	movs	r3, #12
   84ea2:	4620      	mov	r0, r4
   84ea4:	6033      	str	r3, [r6, #0]
   84ea6:	b003      	add	sp, #12
   84ea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84eac:	f44f 7100 	mov.w	r1, #512	; 0x200
   84eb0:	2040      	movs	r0, #64	; 0x40
   84eb2:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   84eb6:	e776      	b.n	84da6 <_malloc_r+0x8a>
   84eb8:	2401      	movs	r4, #1
   84eba:	687a      	ldr	r2, [r7, #4]
   84ebc:	1083      	asrs	r3, r0, #2
   84ebe:	409c      	lsls	r4, r3
   84ec0:	4294      	cmp	r4, r2
   84ec2:	d9b2      	bls.n	84e2a <_malloc_r+0x10e>
   84ec4:	68bc      	ldr	r4, [r7, #8]
   84ec6:	6863      	ldr	r3, [r4, #4]
   84ec8:	f023 0903 	bic.w	r9, r3, #3
   84ecc:	45a9      	cmp	r9, r5
   84ece:	d304      	bcc.n	84eda <_malloc_r+0x1be>
   84ed0:	eba9 0305 	sub.w	r3, r9, r5
   84ed4:	2b0f      	cmp	r3, #15
   84ed6:	f300 8084 	bgt.w	84fe2 <_malloc_r+0x2c6>
   84eda:	f8df a1b0 	ldr.w	sl, [pc, #432]	; 8508c <_malloc_r+0x370>
   84ede:	f8d7 2408 	ldr.w	r2, [r7, #1032]	; 0x408
   84ee2:	f8da 3000 	ldr.w	r3, [sl]
   84ee6:	3201      	adds	r2, #1
   84ee8:	eb05 0803 	add.w	r8, r5, r3
   84eec:	f000 813b 	beq.w	85166 <_malloc_r+0x44a>
   84ef0:	f508 5880 	add.w	r8, r8, #4096	; 0x1000
   84ef4:	f108 080f 	add.w	r8, r8, #15
   84ef8:	f428 687f 	bic.w	r8, r8, #4080	; 0xff0
   84efc:	f028 080f 	bic.w	r8, r8, #15
   84f00:	4641      	mov	r1, r8
   84f02:	4630      	mov	r0, r6
   84f04:	f001 f91e 	bl	86144 <_sbrk_r>
   84f08:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   84f0c:	4683      	mov	fp, r0
   84f0e:	f000 80f7 	beq.w	85100 <_malloc_r+0x3e4>
   84f12:	eb04 0009 	add.w	r0, r4, r9
   84f16:	4558      	cmp	r0, fp
   84f18:	f200 80f0 	bhi.w	850fc <_malloc_r+0x3e0>
   84f1c:	f8da 2004 	ldr.w	r2, [sl, #4]
   84f20:	eb08 0102 	add.w	r1, r8, r2
   84f24:	f8ca 1004 	str.w	r1, [sl, #4]
   84f28:	f000 814e 	beq.w	851c8 <_malloc_r+0x4ac>
   84f2c:	f8d7 3408 	ldr.w	r3, [r7, #1032]	; 0x408
   84f30:	3301      	adds	r3, #1
   84f32:	bf1b      	ittet	ne
   84f34:	ebab 0200 	subne.w	r2, fp, r0
   84f38:	1852      	addne	r2, r2, r1
   84f3a:	f8c7 b408 	streq.w	fp, [r7, #1032]	; 0x408
   84f3e:	f8ca 2004 	strne.w	r2, [sl, #4]
   84f42:	f01b 0307 	ands.w	r3, fp, #7
   84f46:	f000 8124 	beq.w	85192 <_malloc_r+0x476>
   84f4a:	f1c3 0208 	rsb	r2, r3, #8
   84f4e:	4493      	add	fp, r2
   84f50:	f5c3 5280 	rsb	r2, r3, #4096	; 0x1000
   84f54:	44d8      	add	r8, fp
   84f56:	3208      	adds	r2, #8
   84f58:	eba2 0208 	sub.w	r2, r2, r8
   84f5c:	f3c2 020b 	ubfx	r2, r2, #0, #12
   84f60:	4611      	mov	r1, r2
   84f62:	4630      	mov	r0, r6
   84f64:	9301      	str	r3, [sp, #4]
   84f66:	9200      	str	r2, [sp, #0]
   84f68:	f001 f8ec 	bl	86144 <_sbrk_r>
   84f6c:	1c42      	adds	r2, r0, #1
   84f6e:	e9dd 2300 	ldrd	r2, r3, [sp]
   84f72:	f000 815a 	beq.w	8522a <_malloc_r+0x50e>
   84f76:	f8da 1004 	ldr.w	r1, [sl, #4]
   84f7a:	eba0 030b 	sub.w	r3, r0, fp
   84f7e:	4413      	add	r3, r2
   84f80:	f043 0301 	orr.w	r3, r3, #1
   84f84:	4411      	add	r1, r2
   84f86:	42bc      	cmp	r4, r7
   84f88:	f8c7 b008 	str.w	fp, [r7, #8]
   84f8c:	f8ca 1004 	str.w	r1, [sl, #4]
   84f90:	f8cb 3004 	str.w	r3, [fp, #4]
   84f94:	d014      	beq.n	84fc0 <_malloc_r+0x2a4>
   84f96:	f1b9 0f0f 	cmp.w	r9, #15
   84f9a:	f240 812c 	bls.w	851f6 <_malloc_r+0x4da>
   84f9e:	f04f 0c05 	mov.w	ip, #5
   84fa2:	6863      	ldr	r3, [r4, #4]
   84fa4:	f1a9 020c 	sub.w	r2, r9, #12
   84fa8:	f022 0207 	bic.w	r2, r2, #7
   84fac:	f003 0301 	and.w	r3, r3, #1
   84fb0:	4313      	orrs	r3, r2
   84fb2:	18a0      	adds	r0, r4, r2
   84fb4:	2a0f      	cmp	r2, #15
   84fb6:	6063      	str	r3, [r4, #4]
   84fb8:	e9c0 cc01 	strd	ip, ip, [r0, #4]
   84fbc:	f200 813a 	bhi.w	85234 <_malloc_r+0x518>
   84fc0:	f8da 302c 	ldr.w	r3, [sl, #44]	; 0x2c
   84fc4:	68bc      	ldr	r4, [r7, #8]
   84fc6:	4299      	cmp	r1, r3
   84fc8:	f8da 3030 	ldr.w	r3, [sl, #48]	; 0x30
   84fcc:	6862      	ldr	r2, [r4, #4]
   84fce:	bf88      	it	hi
   84fd0:	f8ca 102c 	strhi.w	r1, [sl, #44]	; 0x2c
   84fd4:	4299      	cmp	r1, r3
   84fd6:	f022 0203 	bic.w	r2, r2, #3
   84fda:	bf88      	it	hi
   84fdc:	f8ca 1030 	strhi.w	r1, [sl, #48]	; 0x30
   84fe0:	e092      	b.n	85108 <_malloc_r+0x3ec>
   84fe2:	f045 0201 	orr.w	r2, r5, #1
   84fe6:	f043 0301 	orr.w	r3, r3, #1
   84fea:	4425      	add	r5, r4
   84fec:	6062      	str	r2, [r4, #4]
   84fee:	4630      	mov	r0, r6
   84ff0:	60bd      	str	r5, [r7, #8]
   84ff2:	3408      	adds	r4, #8
   84ff4:	606b      	str	r3, [r5, #4]
   84ff6:	f000 fa75 	bl	854e4 <__malloc_unlock>
   84ffa:	4620      	mov	r0, r4
   84ffc:	b003      	add	sp, #12
   84ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85002:	4423      	add	r3, r4
   85004:	685a      	ldr	r2, [r3, #4]
   85006:	68e1      	ldr	r1, [r4, #12]
   85008:	e6a6      	b.n	84d58 <_malloc_r+0x3c>
   8500a:	68dc      	ldr	r4, [r3, #12]
   8500c:	42a3      	cmp	r3, r4
   8500e:	bf08      	it	eq
   85010:	3002      	addeq	r0, #2
   85012:	f43f aedc 	beq.w	84dce <_malloc_r+0xb2>
   85016:	e699      	b.n	84d4c <_malloc_r+0x30>
   85018:	2b14      	cmp	r3, #20
   8501a:	d969      	bls.n	850f0 <_malloc_r+0x3d4>
   8501c:	2b54      	cmp	r3, #84	; 0x54
   8501e:	f200 80a5 	bhi.w	8516c <_malloc_r+0x450>
   85022:	0b2b      	lsrs	r3, r5, #12
   85024:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   85028:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
   8502c:	00c1      	lsls	r1, r0, #3
   8502e:	e6ba      	b.n	84da6 <_malloc_r+0x8a>
   85030:	4423      	add	r3, r4
   85032:	685a      	ldr	r2, [r3, #4]
   85034:	4630      	mov	r0, r6
   85036:	f042 0201 	orr.w	r2, r2, #1
   8503a:	605a      	str	r2, [r3, #4]
   8503c:	3408      	adds	r4, #8
   8503e:	f000 fa51 	bl	854e4 <__malloc_unlock>
   85042:	e693      	b.n	84d6c <_malloc_r+0x50>
   85044:	f045 0e01 	orr.w	lr, r5, #1
   85048:	f042 0101 	orr.w	r1, r2, #1
   8504c:	4425      	add	r5, r4
   8504e:	f8c4 e004 	str.w	lr, [r4, #4]
   85052:	4630      	mov	r0, r6
   85054:	e9c7 5504 	strd	r5, r5, [r7, #16]
   85058:	e9c5 cc02 	strd	ip, ip, [r5, #8]
   8505c:	6069      	str	r1, [r5, #4]
   8505e:	50e2      	str	r2, [r4, r3]
   85060:	f000 fa40 	bl	854e4 <__malloc_unlock>
   85064:	3408      	adds	r4, #8
   85066:	e681      	b.n	84d6c <_malloc_r+0x50>
   85068:	08e8      	lsrs	r0, r5, #3
   8506a:	f105 0308 	add.w	r3, r5, #8
   8506e:	e665      	b.n	84d3c <_malloc_r+0x20>
   85070:	f108 0801 	add.w	r8, r8, #1
   85074:	f018 0f03 	tst.w	r8, #3
   85078:	f10e 0e08 	add.w	lr, lr, #8
   8507c:	f47f aee2 	bne.w	84e44 <_malloc_r+0x128>
   85080:	e059      	b.n	85136 <_malloc_r+0x41a>
   85082:	bf00      	nop
   85084:	20070834 	.word	0x20070834
   85088:	2007083c 	.word	0x2007083c
   8508c:	20070c78 	.word	0x20070c78
   85090:	461c      	mov	r4, r3
   85092:	4419      	add	r1, r3
   85094:	684a      	ldr	r2, [r1, #4]
   85096:	68db      	ldr	r3, [r3, #12]
   85098:	f854 5f08 	ldr.w	r5, [r4, #8]!
   8509c:	f042 0201 	orr.w	r2, r2, #1
   850a0:	604a      	str	r2, [r1, #4]
   850a2:	4630      	mov	r0, r6
   850a4:	60eb      	str	r3, [r5, #12]
   850a6:	609d      	str	r5, [r3, #8]
   850a8:	f000 fa1c 	bl	854e4 <__malloc_unlock>
   850ac:	e65e      	b.n	84d6c <_malloc_r+0x50>
   850ae:	0a5a      	lsrs	r2, r3, #9
   850b0:	2a04      	cmp	r2, #4
   850b2:	d935      	bls.n	85120 <_malloc_r+0x404>
   850b4:	2a14      	cmp	r2, #20
   850b6:	d87f      	bhi.n	851b8 <_malloc_r+0x49c>
   850b8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   850bc:	00c9      	lsls	r1, r1, #3
   850be:	325b      	adds	r2, #91	; 0x5b
   850c0:	eb07 0e01 	add.w	lr, r7, r1
   850c4:	5879      	ldr	r1, [r7, r1]
   850c6:	f1ae 0e08 	sub.w	lr, lr, #8
   850ca:	458e      	cmp	lr, r1
   850cc:	d058      	beq.n	85180 <_malloc_r+0x464>
   850ce:	684a      	ldr	r2, [r1, #4]
   850d0:	f022 0203 	bic.w	r2, r2, #3
   850d4:	429a      	cmp	r2, r3
   850d6:	d902      	bls.n	850de <_malloc_r+0x3c2>
   850d8:	6889      	ldr	r1, [r1, #8]
   850da:	458e      	cmp	lr, r1
   850dc:	d1f7      	bne.n	850ce <_malloc_r+0x3b2>
   850de:	f8d1 e00c 	ldr.w	lr, [r1, #12]
   850e2:	687a      	ldr	r2, [r7, #4]
   850e4:	e9c4 1e02 	strd	r1, lr, [r4, #8]
   850e8:	f8ce 4008 	str.w	r4, [lr, #8]
   850ec:	60cc      	str	r4, [r1, #12]
   850ee:	e697      	b.n	84e20 <_malloc_r+0x104>
   850f0:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   850f4:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
   850f8:	00c1      	lsls	r1, r0, #3
   850fa:	e654      	b.n	84da6 <_malloc_r+0x8a>
   850fc:	42bc      	cmp	r4, r7
   850fe:	d07e      	beq.n	851fe <_malloc_r+0x4e2>
   85100:	68bc      	ldr	r4, [r7, #8]
   85102:	6862      	ldr	r2, [r4, #4]
   85104:	f022 0203 	bic.w	r2, r2, #3
   85108:	4295      	cmp	r5, r2
   8510a:	eba2 0305 	sub.w	r3, r2, r5
   8510e:	d802      	bhi.n	85116 <_malloc_r+0x3fa>
   85110:	2b0f      	cmp	r3, #15
   85112:	f73f af66 	bgt.w	84fe2 <_malloc_r+0x2c6>
   85116:	4630      	mov	r0, r6
   85118:	f000 f9e4 	bl	854e4 <__malloc_unlock>
   8511c:	2400      	movs	r4, #0
   8511e:	e625      	b.n	84d6c <_malloc_r+0x50>
   85120:	099a      	lsrs	r2, r3, #6
   85122:	f102 0139 	add.w	r1, r2, #57	; 0x39
   85126:	00c9      	lsls	r1, r1, #3
   85128:	3238      	adds	r2, #56	; 0x38
   8512a:	e7c9      	b.n	850c0 <_malloc_r+0x3a4>
   8512c:	f8d9 9000 	ldr.w	r9, [r9]
   85130:	4599      	cmp	r9, r3
   85132:	f040 8095 	bne.w	85260 <_malloc_r+0x544>
   85136:	f010 0f03 	tst.w	r0, #3
   8513a:	f1a9 0308 	sub.w	r3, r9, #8
   8513e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
   85142:	d1f3      	bne.n	8512c <_malloc_r+0x410>
   85144:	687b      	ldr	r3, [r7, #4]
   85146:	ea23 0304 	bic.w	r3, r3, r4
   8514a:	607b      	str	r3, [r7, #4]
   8514c:	0064      	lsls	r4, r4, #1
   8514e:	429c      	cmp	r4, r3
   85150:	f63f aeb8 	bhi.w	84ec4 <_malloc_r+0x1a8>
   85154:	b91c      	cbnz	r4, 8515e <_malloc_r+0x442>
   85156:	e6b5      	b.n	84ec4 <_malloc_r+0x1a8>
   85158:	0064      	lsls	r4, r4, #1
   8515a:	f108 0804 	add.w	r8, r8, #4
   8515e:	421c      	tst	r4, r3
   85160:	d0fa      	beq.n	85158 <_malloc_r+0x43c>
   85162:	4640      	mov	r0, r8
   85164:	e66a      	b.n	84e3c <_malloc_r+0x120>
   85166:	f108 0810 	add.w	r8, r8, #16
   8516a:	e6c9      	b.n	84f00 <_malloc_r+0x1e4>
   8516c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   85170:	d836      	bhi.n	851e0 <_malloc_r+0x4c4>
   85172:	0beb      	lsrs	r3, r5, #15
   85174:	f103 0078 	add.w	r0, r3, #120	; 0x78
   85178:	f103 0c77 	add.w	ip, r3, #119	; 0x77
   8517c:	00c1      	lsls	r1, r0, #3
   8517e:	e612      	b.n	84da6 <_malloc_r+0x8a>
   85180:	f04f 0801 	mov.w	r8, #1
   85184:	687b      	ldr	r3, [r7, #4]
   85186:	1092      	asrs	r2, r2, #2
   85188:	fa08 f202 	lsl.w	r2, r8, r2
   8518c:	431a      	orrs	r2, r3
   8518e:	607a      	str	r2, [r7, #4]
   85190:	e7a8      	b.n	850e4 <_malloc_r+0x3c8>
   85192:	44d8      	add	r8, fp
   85194:	f1c8 0200 	rsb	r2, r8, #0
   85198:	f3c2 020b 	ubfx	r2, r2, #0, #12
   8519c:	4611      	mov	r1, r2
   8519e:	4630      	mov	r0, r6
   851a0:	9301      	str	r3, [sp, #4]
   851a2:	9200      	str	r2, [sp, #0]
   851a4:	f000 ffce 	bl	86144 <_sbrk_r>
   851a8:	1c43      	adds	r3, r0, #1
   851aa:	e9dd 2300 	ldrd	r2, r3, [sp]
   851ae:	f47f aee2 	bne.w	84f76 <_malloc_r+0x25a>
   851b2:	4640      	mov	r0, r8
   851b4:	461a      	mov	r2, r3
   851b6:	e6de      	b.n	84f76 <_malloc_r+0x25a>
   851b8:	2a54      	cmp	r2, #84	; 0x54
   851ba:	d827      	bhi.n	8520c <_malloc_r+0x4f0>
   851bc:	0b1a      	lsrs	r2, r3, #12
   851be:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   851c2:	00c9      	lsls	r1, r1, #3
   851c4:	326e      	adds	r2, #110	; 0x6e
   851c6:	e77b      	b.n	850c0 <_malloc_r+0x3a4>
   851c8:	f3c0 030b 	ubfx	r3, r0, #0, #12
   851cc:	2b00      	cmp	r3, #0
   851ce:	f47f aead 	bne.w	84f2c <_malloc_r+0x210>
   851d2:	eb09 0308 	add.w	r3, r9, r8
   851d6:	68ba      	ldr	r2, [r7, #8]
   851d8:	f043 0301 	orr.w	r3, r3, #1
   851dc:	6053      	str	r3, [r2, #4]
   851de:	e6ef      	b.n	84fc0 <_malloc_r+0x2a4>
   851e0:	f240 5254 	movw	r2, #1364	; 0x554
   851e4:	4293      	cmp	r3, r2
   851e6:	d81a      	bhi.n	8521e <_malloc_r+0x502>
   851e8:	0cab      	lsrs	r3, r5, #18
   851ea:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   851ee:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
   851f2:	00c1      	lsls	r1, r0, #3
   851f4:	e5d7      	b.n	84da6 <_malloc_r+0x8a>
   851f6:	2301      	movs	r3, #1
   851f8:	f8cb 3004 	str.w	r3, [fp, #4]
   851fc:	e78b      	b.n	85116 <_malloc_r+0x3fa>
   851fe:	f8da 2004 	ldr.w	r2, [sl, #4]
   85202:	eb08 0102 	add.w	r1, r8, r2
   85206:	f8ca 1004 	str.w	r1, [sl, #4]
   8520a:	e68f      	b.n	84f2c <_malloc_r+0x210>
   8520c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   85210:	d818      	bhi.n	85244 <_malloc_r+0x528>
   85212:	0bda      	lsrs	r2, r3, #15
   85214:	f102 0178 	add.w	r1, r2, #120	; 0x78
   85218:	00c9      	lsls	r1, r1, #3
   8521a:	3277      	adds	r2, #119	; 0x77
   8521c:	e750      	b.n	850c0 <_malloc_r+0x3a4>
   8521e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   85222:	207f      	movs	r0, #127	; 0x7f
   85224:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   85228:	e5bd      	b.n	84da6 <_malloc_r+0x8a>
   8522a:	3b08      	subs	r3, #8
   8522c:	2200      	movs	r2, #0
   8522e:	eb08 0003 	add.w	r0, r8, r3
   85232:	e6a0      	b.n	84f76 <_malloc_r+0x25a>
   85234:	f104 0108 	add.w	r1, r4, #8
   85238:	4630      	mov	r0, r6
   8523a:	f7ff fc71 	bl	84b20 <_free_r>
   8523e:	f8da 1004 	ldr.w	r1, [sl, #4]
   85242:	e6bd      	b.n	84fc0 <_malloc_r+0x2a4>
   85244:	f240 5154 	movw	r1, #1364	; 0x554
   85248:	428a      	cmp	r2, r1
   8524a:	d805      	bhi.n	85258 <_malloc_r+0x53c>
   8524c:	0c9a      	lsrs	r2, r3, #18
   8524e:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   85252:	00c9      	lsls	r1, r1, #3
   85254:	327c      	adds	r2, #124	; 0x7c
   85256:	e733      	b.n	850c0 <_malloc_r+0x3a4>
   85258:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8525c:	227e      	movs	r2, #126	; 0x7e
   8525e:	e72f      	b.n	850c0 <_malloc_r+0x3a4>
   85260:	687b      	ldr	r3, [r7, #4]
   85262:	e773      	b.n	8514c <_malloc_r+0x430>

00085264 <_mbtowc_r>:
   85264:	b410      	push	{r4}
   85266:	4c03      	ldr	r4, [pc, #12]	; (85274 <_mbtowc_r+0x10>)
   85268:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
   8526c:	46a4      	mov	ip, r4
   8526e:	bc10      	pop	{r4}
   85270:	4760      	bx	ip
   85272:	bf00      	nop
   85274:	200706c8 	.word	0x200706c8

00085278 <__ascii_mbtowc>:
   85278:	b082      	sub	sp, #8
   8527a:	b149      	cbz	r1, 85290 <__ascii_mbtowc+0x18>
   8527c:	b15a      	cbz	r2, 85296 <__ascii_mbtowc+0x1e>
   8527e:	b16b      	cbz	r3, 8529c <__ascii_mbtowc+0x24>
   85280:	7813      	ldrb	r3, [r2, #0]
   85282:	600b      	str	r3, [r1, #0]
   85284:	7812      	ldrb	r2, [r2, #0]
   85286:	1c10      	adds	r0, r2, #0
   85288:	bf18      	it	ne
   8528a:	2001      	movne	r0, #1
   8528c:	b002      	add	sp, #8
   8528e:	4770      	bx	lr
   85290:	a901      	add	r1, sp, #4
   85292:	2a00      	cmp	r2, #0
   85294:	d1f3      	bne.n	8527e <__ascii_mbtowc+0x6>
   85296:	4610      	mov	r0, r2
   85298:	b002      	add	sp, #8
   8529a:	4770      	bx	lr
   8529c:	f06f 0001 	mvn.w	r0, #1
   852a0:	e7f4      	b.n	8528c <__ascii_mbtowc+0x14>
   852a2:	bf00      	nop

000852a4 <memchr>:
   852a4:	0783      	lsls	r3, r0, #30
   852a6:	b470      	push	{r4, r5, r6}
   852a8:	b2cd      	uxtb	r5, r1
   852aa:	d03d      	beq.n	85328 <memchr+0x84>
   852ac:	1e54      	subs	r4, r2, #1
   852ae:	b30a      	cbz	r2, 852f4 <memchr+0x50>
   852b0:	7803      	ldrb	r3, [r0, #0]
   852b2:	42ab      	cmp	r3, r5
   852b4:	d01f      	beq.n	852f6 <memchr+0x52>
   852b6:	1c43      	adds	r3, r0, #1
   852b8:	e005      	b.n	852c6 <memchr+0x22>
   852ba:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
   852be:	d319      	bcc.n	852f4 <memchr+0x50>
   852c0:	7802      	ldrb	r2, [r0, #0]
   852c2:	42aa      	cmp	r2, r5
   852c4:	d017      	beq.n	852f6 <memchr+0x52>
   852c6:	f013 0f03 	tst.w	r3, #3
   852ca:	4618      	mov	r0, r3
   852cc:	f103 0301 	add.w	r3, r3, #1
   852d0:	d1f3      	bne.n	852ba <memchr+0x16>
   852d2:	2c03      	cmp	r4, #3
   852d4:	d811      	bhi.n	852fa <memchr+0x56>
   852d6:	b34c      	cbz	r4, 8532c <memchr+0x88>
   852d8:	7803      	ldrb	r3, [r0, #0]
   852da:	42ab      	cmp	r3, r5
   852dc:	d00b      	beq.n	852f6 <memchr+0x52>
   852de:	4404      	add	r4, r0
   852e0:	1c43      	adds	r3, r0, #1
   852e2:	e002      	b.n	852ea <memchr+0x46>
   852e4:	7802      	ldrb	r2, [r0, #0]
   852e6:	42aa      	cmp	r2, r5
   852e8:	d005      	beq.n	852f6 <memchr+0x52>
   852ea:	429c      	cmp	r4, r3
   852ec:	4618      	mov	r0, r3
   852ee:	f103 0301 	add.w	r3, r3, #1
   852f2:	d1f7      	bne.n	852e4 <memchr+0x40>
   852f4:	2000      	movs	r0, #0
   852f6:	bc70      	pop	{r4, r5, r6}
   852f8:	4770      	bx	lr
   852fa:	4606      	mov	r6, r0
   852fc:	020a      	lsls	r2, r1, #8
   852fe:	b292      	uxth	r2, r2
   85300:	432a      	orrs	r2, r5
   85302:	ea42 4202 	orr.w	r2, r2, r2, lsl #16
   85306:	6833      	ldr	r3, [r6, #0]
   85308:	4630      	mov	r0, r6
   8530a:	4053      	eors	r3, r2
   8530c:	f1a3 3101 	sub.w	r1, r3, #16843009	; 0x1010101
   85310:	ea21 0303 	bic.w	r3, r1, r3
   85314:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   85318:	f106 0604 	add.w	r6, r6, #4
   8531c:	d1dc      	bne.n	852d8 <memchr+0x34>
   8531e:	3c04      	subs	r4, #4
   85320:	2c03      	cmp	r4, #3
   85322:	4630      	mov	r0, r6
   85324:	d8ef      	bhi.n	85306 <memchr+0x62>
   85326:	e7d6      	b.n	852d6 <memchr+0x32>
   85328:	4614      	mov	r4, r2
   8532a:	e7d2      	b.n	852d2 <memchr+0x2e>
   8532c:	4620      	mov	r0, r4
   8532e:	e7e2      	b.n	852f6 <memchr+0x52>

00085330 <memcpy>:
   85330:	4684      	mov	ip, r0
   85332:	ea41 0300 	orr.w	r3, r1, r0
   85336:	f013 0303 	ands.w	r3, r3, #3
   8533a:	d149      	bne.n	853d0 <memcpy+0xa0>
   8533c:	3a40      	subs	r2, #64	; 0x40
   8533e:	d323      	bcc.n	85388 <memcpy+0x58>
   85340:	680b      	ldr	r3, [r1, #0]
   85342:	6003      	str	r3, [r0, #0]
   85344:	684b      	ldr	r3, [r1, #4]
   85346:	6043      	str	r3, [r0, #4]
   85348:	688b      	ldr	r3, [r1, #8]
   8534a:	6083      	str	r3, [r0, #8]
   8534c:	68cb      	ldr	r3, [r1, #12]
   8534e:	60c3      	str	r3, [r0, #12]
   85350:	690b      	ldr	r3, [r1, #16]
   85352:	6103      	str	r3, [r0, #16]
   85354:	694b      	ldr	r3, [r1, #20]
   85356:	6143      	str	r3, [r0, #20]
   85358:	698b      	ldr	r3, [r1, #24]
   8535a:	6183      	str	r3, [r0, #24]
   8535c:	69cb      	ldr	r3, [r1, #28]
   8535e:	61c3      	str	r3, [r0, #28]
   85360:	6a0b      	ldr	r3, [r1, #32]
   85362:	6203      	str	r3, [r0, #32]
   85364:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   85366:	6243      	str	r3, [r0, #36]	; 0x24
   85368:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   8536a:	6283      	str	r3, [r0, #40]	; 0x28
   8536c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8536e:	62c3      	str	r3, [r0, #44]	; 0x2c
   85370:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   85372:	6303      	str	r3, [r0, #48]	; 0x30
   85374:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   85376:	6343      	str	r3, [r0, #52]	; 0x34
   85378:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   8537a:	6383      	str	r3, [r0, #56]	; 0x38
   8537c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8537e:	63c3      	str	r3, [r0, #60]	; 0x3c
   85380:	3040      	adds	r0, #64	; 0x40
   85382:	3140      	adds	r1, #64	; 0x40
   85384:	3a40      	subs	r2, #64	; 0x40
   85386:	d2db      	bcs.n	85340 <memcpy+0x10>
   85388:	3230      	adds	r2, #48	; 0x30
   8538a:	d30b      	bcc.n	853a4 <memcpy+0x74>
   8538c:	680b      	ldr	r3, [r1, #0]
   8538e:	6003      	str	r3, [r0, #0]
   85390:	684b      	ldr	r3, [r1, #4]
   85392:	6043      	str	r3, [r0, #4]
   85394:	688b      	ldr	r3, [r1, #8]
   85396:	6083      	str	r3, [r0, #8]
   85398:	68cb      	ldr	r3, [r1, #12]
   8539a:	60c3      	str	r3, [r0, #12]
   8539c:	3010      	adds	r0, #16
   8539e:	3110      	adds	r1, #16
   853a0:	3a10      	subs	r2, #16
   853a2:	d2f3      	bcs.n	8538c <memcpy+0x5c>
   853a4:	320c      	adds	r2, #12
   853a6:	d305      	bcc.n	853b4 <memcpy+0x84>
   853a8:	f851 3b04 	ldr.w	r3, [r1], #4
   853ac:	f840 3b04 	str.w	r3, [r0], #4
   853b0:	3a04      	subs	r2, #4
   853b2:	d2f9      	bcs.n	853a8 <memcpy+0x78>
   853b4:	3204      	adds	r2, #4
   853b6:	d008      	beq.n	853ca <memcpy+0x9a>
   853b8:	07d2      	lsls	r2, r2, #31
   853ba:	bf1c      	itt	ne
   853bc:	f811 3b01 	ldrbne.w	r3, [r1], #1
   853c0:	f800 3b01 	strbne.w	r3, [r0], #1
   853c4:	d301      	bcc.n	853ca <memcpy+0x9a>
   853c6:	880b      	ldrh	r3, [r1, #0]
   853c8:	8003      	strh	r3, [r0, #0]
   853ca:	4660      	mov	r0, ip
   853cc:	4770      	bx	lr
   853ce:	bf00      	nop
   853d0:	2a08      	cmp	r2, #8
   853d2:	d313      	bcc.n	853fc <memcpy+0xcc>
   853d4:	078b      	lsls	r3, r1, #30
   853d6:	d0b1      	beq.n	8533c <memcpy+0xc>
   853d8:	f010 0303 	ands.w	r3, r0, #3
   853dc:	d0ae      	beq.n	8533c <memcpy+0xc>
   853de:	f1c3 0304 	rsb	r3, r3, #4
   853e2:	1ad2      	subs	r2, r2, r3
   853e4:	07db      	lsls	r3, r3, #31
   853e6:	bf1c      	itt	ne
   853e8:	f811 3b01 	ldrbne.w	r3, [r1], #1
   853ec:	f800 3b01 	strbne.w	r3, [r0], #1
   853f0:	d3a4      	bcc.n	8533c <memcpy+0xc>
   853f2:	f831 3b02 	ldrh.w	r3, [r1], #2
   853f6:	f820 3b02 	strh.w	r3, [r0], #2
   853fa:	e79f      	b.n	8533c <memcpy+0xc>
   853fc:	3a04      	subs	r2, #4
   853fe:	d3d9      	bcc.n	853b4 <memcpy+0x84>
   85400:	3a01      	subs	r2, #1
   85402:	f811 3b01 	ldrb.w	r3, [r1], #1
   85406:	f800 3b01 	strb.w	r3, [r0], #1
   8540a:	d2f9      	bcs.n	85400 <memcpy+0xd0>
   8540c:	780b      	ldrb	r3, [r1, #0]
   8540e:	7003      	strb	r3, [r0, #0]
   85410:	784b      	ldrb	r3, [r1, #1]
   85412:	7043      	strb	r3, [r0, #1]
   85414:	788b      	ldrb	r3, [r1, #2]
   85416:	7083      	strb	r3, [r0, #2]
   85418:	4660      	mov	r0, ip
   8541a:	4770      	bx	lr

0008541c <memmove>:
   8541c:	4288      	cmp	r0, r1
   8541e:	b4f0      	push	{r4, r5, r6, r7}
   85420:	d90d      	bls.n	8543e <memmove+0x22>
   85422:	188b      	adds	r3, r1, r2
   85424:	4283      	cmp	r3, r0
   85426:	d90a      	bls.n	8543e <memmove+0x22>
   85428:	1884      	adds	r4, r0, r2
   8542a:	b132      	cbz	r2, 8543a <memmove+0x1e>
   8542c:	4622      	mov	r2, r4
   8542e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   85432:	4299      	cmp	r1, r3
   85434:	f802 4d01 	strb.w	r4, [r2, #-1]!
   85438:	d1f9      	bne.n	8542e <memmove+0x12>
   8543a:	bcf0      	pop	{r4, r5, r6, r7}
   8543c:	4770      	bx	lr
   8543e:	2a0f      	cmp	r2, #15
   85440:	d948      	bls.n	854d4 <memmove+0xb8>
   85442:	ea40 0301 	orr.w	r3, r0, r1
   85446:	079b      	lsls	r3, r3, #30
   85448:	d146      	bne.n	854d8 <memmove+0xbc>
   8544a:	f1a2 0310 	sub.w	r3, r2, #16
   8544e:	091b      	lsrs	r3, r3, #4
   85450:	f101 0720 	add.w	r7, r1, #32
   85454:	eb07 1703 	add.w	r7, r7, r3, lsl #4
   85458:	f101 0410 	add.w	r4, r1, #16
   8545c:	f100 0510 	add.w	r5, r0, #16
   85460:	f854 6c10 	ldr.w	r6, [r4, #-16]
   85464:	3410      	adds	r4, #16
   85466:	f845 6c10 	str.w	r6, [r5, #-16]
   8546a:	f854 6c1c 	ldr.w	r6, [r4, #-28]
   8546e:	3510      	adds	r5, #16
   85470:	f845 6c1c 	str.w	r6, [r5, #-28]
   85474:	f854 6c18 	ldr.w	r6, [r4, #-24]
   85478:	f845 6c18 	str.w	r6, [r5, #-24]
   8547c:	f854 6c14 	ldr.w	r6, [r4, #-20]
   85480:	42bc      	cmp	r4, r7
   85482:	f845 6c14 	str.w	r6, [r5, #-20]
   85486:	d1eb      	bne.n	85460 <memmove+0x44>
   85488:	3301      	adds	r3, #1
   8548a:	f002 050f 	and.w	r5, r2, #15
   8548e:	011b      	lsls	r3, r3, #4
   85490:	2d03      	cmp	r5, #3
   85492:	4419      	add	r1, r3
   85494:	4403      	add	r3, r0
   85496:	d921      	bls.n	854dc <memmove+0xc0>
   85498:	460f      	mov	r7, r1
   8549a:	462c      	mov	r4, r5
   8549c:	1f1e      	subs	r6, r3, #4
   8549e:	f857 cb04 	ldr.w	ip, [r7], #4
   854a2:	3c04      	subs	r4, #4
   854a4:	2c03      	cmp	r4, #3
   854a6:	f846 cf04 	str.w	ip, [r6, #4]!
   854aa:	d8f8      	bhi.n	8549e <memmove+0x82>
   854ac:	1f2c      	subs	r4, r5, #4
   854ae:	f024 0403 	bic.w	r4, r4, #3
   854b2:	3404      	adds	r4, #4
   854b4:	4423      	add	r3, r4
   854b6:	4421      	add	r1, r4
   854b8:	f002 0203 	and.w	r2, r2, #3
   854bc:	2a00      	cmp	r2, #0
   854be:	d0bc      	beq.n	8543a <memmove+0x1e>
   854c0:	3b01      	subs	r3, #1
   854c2:	440a      	add	r2, r1
   854c4:	f811 4b01 	ldrb.w	r4, [r1], #1
   854c8:	4291      	cmp	r1, r2
   854ca:	f803 4f01 	strb.w	r4, [r3, #1]!
   854ce:	d1f9      	bne.n	854c4 <memmove+0xa8>
   854d0:	bcf0      	pop	{r4, r5, r6, r7}
   854d2:	4770      	bx	lr
   854d4:	4603      	mov	r3, r0
   854d6:	e7f1      	b.n	854bc <memmove+0xa0>
   854d8:	4603      	mov	r3, r0
   854da:	e7f1      	b.n	854c0 <memmove+0xa4>
   854dc:	462a      	mov	r2, r5
   854de:	e7ed      	b.n	854bc <memmove+0xa0>

000854e0 <__malloc_lock>:
   854e0:	4770      	bx	lr
   854e2:	bf00      	nop

000854e4 <__malloc_unlock>:
   854e4:	4770      	bx	lr
   854e6:	bf00      	nop

000854e8 <_Balloc>:
   854e8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   854ea:	b570      	push	{r4, r5, r6, lr}
   854ec:	4605      	mov	r5, r0
   854ee:	460c      	mov	r4, r1
   854f0:	b14b      	cbz	r3, 85506 <_Balloc+0x1e>
   854f2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   854f6:	b180      	cbz	r0, 8551a <_Balloc+0x32>
   854f8:	6802      	ldr	r2, [r0, #0]
   854fa:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   854fe:	2300      	movs	r3, #0
   85500:	e9c0 3303 	strd	r3, r3, [r0, #12]
   85504:	bd70      	pop	{r4, r5, r6, pc}
   85506:	2221      	movs	r2, #33	; 0x21
   85508:	2104      	movs	r1, #4
   8550a:	f001 fbf3 	bl	86cf4 <_calloc_r>
   8550e:	4603      	mov	r3, r0
   85510:	64e8      	str	r0, [r5, #76]	; 0x4c
   85512:	2800      	cmp	r0, #0
   85514:	d1ed      	bne.n	854f2 <_Balloc+0xa>
   85516:	2000      	movs	r0, #0
   85518:	bd70      	pop	{r4, r5, r6, pc}
   8551a:	2101      	movs	r1, #1
   8551c:	fa01 f604 	lsl.w	r6, r1, r4
   85520:	1d72      	adds	r2, r6, #5
   85522:	4628      	mov	r0, r5
   85524:	0092      	lsls	r2, r2, #2
   85526:	f001 fbe5 	bl	86cf4 <_calloc_r>
   8552a:	2800      	cmp	r0, #0
   8552c:	d0f3      	beq.n	85516 <_Balloc+0x2e>
   8552e:	e9c0 4601 	strd	r4, r6, [r0, #4]
   85532:	e7e4      	b.n	854fe <_Balloc+0x16>

00085534 <_Bfree>:
   85534:	b131      	cbz	r1, 85544 <_Bfree+0x10>
   85536:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   85538:	684a      	ldr	r2, [r1, #4]
   8553a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   8553e:	6008      	str	r0, [r1, #0]
   85540:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   85544:	4770      	bx	lr
   85546:	bf00      	nop

00085548 <__multadd>:
   85548:	b5f0      	push	{r4, r5, r6, r7, lr}
   8554a:	f04f 0c00 	mov.w	ip, #0
   8554e:	460c      	mov	r4, r1
   85550:	4605      	mov	r5, r0
   85552:	690e      	ldr	r6, [r1, #16]
   85554:	b083      	sub	sp, #12
   85556:	f101 0714 	add.w	r7, r1, #20
   8555a:	6838      	ldr	r0, [r7, #0]
   8555c:	f10c 0c01 	add.w	ip, ip, #1
   85560:	b281      	uxth	r1, r0
   85562:	fb02 3301 	mla	r3, r2, r1, r3
   85566:	0c01      	lsrs	r1, r0, #16
   85568:	0c18      	lsrs	r0, r3, #16
   8556a:	fb02 0101 	mla	r1, r2, r1, r0
   8556e:	b29b      	uxth	r3, r3
   85570:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   85574:	4566      	cmp	r6, ip
   85576:	f847 3b04 	str.w	r3, [r7], #4
   8557a:	ea4f 4311 	mov.w	r3, r1, lsr #16
   8557e:	dcec      	bgt.n	8555a <__multadd+0x12>
   85580:	b13b      	cbz	r3, 85592 <__multadd+0x4a>
   85582:	68a2      	ldr	r2, [r4, #8]
   85584:	42b2      	cmp	r2, r6
   85586:	dd07      	ble.n	85598 <__multadd+0x50>
   85588:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   8558c:	3601      	adds	r6, #1
   8558e:	6153      	str	r3, [r2, #20]
   85590:	6126      	str	r6, [r4, #16]
   85592:	4620      	mov	r0, r4
   85594:	b003      	add	sp, #12
   85596:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85598:	6861      	ldr	r1, [r4, #4]
   8559a:	4628      	mov	r0, r5
   8559c:	3101      	adds	r1, #1
   8559e:	9301      	str	r3, [sp, #4]
   855a0:	f7ff ffa2 	bl	854e8 <_Balloc>
   855a4:	4607      	mov	r7, r0
   855a6:	6922      	ldr	r2, [r4, #16]
   855a8:	f104 010c 	add.w	r1, r4, #12
   855ac:	3202      	adds	r2, #2
   855ae:	0092      	lsls	r2, r2, #2
   855b0:	300c      	adds	r0, #12
   855b2:	f7ff febd 	bl	85330 <memcpy>
   855b6:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   855b8:	6861      	ldr	r1, [r4, #4]
   855ba:	9b01      	ldr	r3, [sp, #4]
   855bc:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   855c0:	6020      	str	r0, [r4, #0]
   855c2:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   855c6:	463c      	mov	r4, r7
   855c8:	e7de      	b.n	85588 <__multadd+0x40>
   855ca:	bf00      	nop

000855cc <__s2b>:
   855cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   855d0:	4c23      	ldr	r4, [pc, #140]	; (85660 <__s2b+0x94>)
   855d2:	461e      	mov	r6, r3
   855d4:	3308      	adds	r3, #8
   855d6:	fb84 4c03 	smull	r4, ip, r4, r3
   855da:	17db      	asrs	r3, r3, #31
   855dc:	ebc3 0c6c 	rsb	ip, r3, ip, asr #1
   855e0:	f1bc 0f01 	cmp.w	ip, #1
   855e4:	4607      	mov	r7, r0
   855e6:	460c      	mov	r4, r1
   855e8:	4690      	mov	r8, r2
   855ea:	9d08      	ldr	r5, [sp, #32]
   855ec:	dd35      	ble.n	8565a <__s2b+0x8e>
   855ee:	2301      	movs	r3, #1
   855f0:	2100      	movs	r1, #0
   855f2:	005b      	lsls	r3, r3, #1
   855f4:	459c      	cmp	ip, r3
   855f6:	f101 0101 	add.w	r1, r1, #1
   855fa:	dcfa      	bgt.n	855f2 <__s2b+0x26>
   855fc:	4638      	mov	r0, r7
   855fe:	f7ff ff73 	bl	854e8 <_Balloc>
   85602:	2301      	movs	r3, #1
   85604:	f1b8 0f09 	cmp.w	r8, #9
   85608:	e9c0 3504 	strd	r3, r5, [r0, #16]
   8560c:	dd21      	ble.n	85652 <__s2b+0x86>
   8560e:	f104 0909 	add.w	r9, r4, #9
   85612:	464d      	mov	r5, r9
   85614:	4444      	add	r4, r8
   85616:	f815 3b01 	ldrb.w	r3, [r5], #1
   8561a:	4601      	mov	r1, r0
   8561c:	3b30      	subs	r3, #48	; 0x30
   8561e:	220a      	movs	r2, #10
   85620:	4638      	mov	r0, r7
   85622:	f7ff ff91 	bl	85548 <__multadd>
   85626:	42ac      	cmp	r4, r5
   85628:	d1f5      	bne.n	85616 <__s2b+0x4a>
   8562a:	eb09 0408 	add.w	r4, r9, r8
   8562e:	3c08      	subs	r4, #8
   85630:	4546      	cmp	r6, r8
   85632:	dd0c      	ble.n	8564e <__s2b+0x82>
   85634:	eba6 0608 	sub.w	r6, r6, r8
   85638:	4426      	add	r6, r4
   8563a:	f814 3b01 	ldrb.w	r3, [r4], #1
   8563e:	4601      	mov	r1, r0
   85640:	3b30      	subs	r3, #48	; 0x30
   85642:	220a      	movs	r2, #10
   85644:	4638      	mov	r0, r7
   85646:	f7ff ff7f 	bl	85548 <__multadd>
   8564a:	42a6      	cmp	r6, r4
   8564c:	d1f5      	bne.n	8563a <__s2b+0x6e>
   8564e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85652:	f04f 0809 	mov.w	r8, #9
   85656:	340a      	adds	r4, #10
   85658:	e7ea      	b.n	85630 <__s2b+0x64>
   8565a:	2100      	movs	r1, #0
   8565c:	e7ce      	b.n	855fc <__s2b+0x30>
   8565e:	bf00      	nop
   85660:	38e38e39 	.word	0x38e38e39

00085664 <__hi0bits>:
   85664:	0c02      	lsrs	r2, r0, #16
   85666:	0412      	lsls	r2, r2, #16
   85668:	4603      	mov	r3, r0
   8566a:	b9c2      	cbnz	r2, 8569e <__hi0bits+0x3a>
   8566c:	0403      	lsls	r3, r0, #16
   8566e:	2010      	movs	r0, #16
   85670:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   85674:	bf04      	itt	eq
   85676:	021b      	lsleq	r3, r3, #8
   85678:	3008      	addeq	r0, #8
   8567a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8567e:	bf04      	itt	eq
   85680:	011b      	lsleq	r3, r3, #4
   85682:	3004      	addeq	r0, #4
   85684:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   85688:	bf04      	itt	eq
   8568a:	009b      	lsleq	r3, r3, #2
   8568c:	3002      	addeq	r0, #2
   8568e:	2b00      	cmp	r3, #0
   85690:	db04      	blt.n	8569c <__hi0bits+0x38>
   85692:	005b      	lsls	r3, r3, #1
   85694:	d501      	bpl.n	8569a <__hi0bits+0x36>
   85696:	3001      	adds	r0, #1
   85698:	4770      	bx	lr
   8569a:	2020      	movs	r0, #32
   8569c:	4770      	bx	lr
   8569e:	2000      	movs	r0, #0
   856a0:	e7e6      	b.n	85670 <__hi0bits+0xc>
   856a2:	bf00      	nop

000856a4 <__lo0bits>:
   856a4:	6803      	ldr	r3, [r0, #0]
   856a6:	4601      	mov	r1, r0
   856a8:	f013 0207 	ands.w	r2, r3, #7
   856ac:	d007      	beq.n	856be <__lo0bits+0x1a>
   856ae:	07da      	lsls	r2, r3, #31
   856b0:	d41f      	bmi.n	856f2 <__lo0bits+0x4e>
   856b2:	0798      	lsls	r0, r3, #30
   856b4:	d51f      	bpl.n	856f6 <__lo0bits+0x52>
   856b6:	085b      	lsrs	r3, r3, #1
   856b8:	600b      	str	r3, [r1, #0]
   856ba:	2001      	movs	r0, #1
   856bc:	4770      	bx	lr
   856be:	b298      	uxth	r0, r3
   856c0:	b1a0      	cbz	r0, 856ec <__lo0bits+0x48>
   856c2:	4610      	mov	r0, r2
   856c4:	f013 0fff 	tst.w	r3, #255	; 0xff
   856c8:	bf04      	itt	eq
   856ca:	0a1b      	lsreq	r3, r3, #8
   856cc:	3008      	addeq	r0, #8
   856ce:	071a      	lsls	r2, r3, #28
   856d0:	bf04      	itt	eq
   856d2:	091b      	lsreq	r3, r3, #4
   856d4:	3004      	addeq	r0, #4
   856d6:	079a      	lsls	r2, r3, #30
   856d8:	bf04      	itt	eq
   856da:	089b      	lsreq	r3, r3, #2
   856dc:	3002      	addeq	r0, #2
   856de:	07da      	lsls	r2, r3, #31
   856e0:	d402      	bmi.n	856e8 <__lo0bits+0x44>
   856e2:	085b      	lsrs	r3, r3, #1
   856e4:	d00b      	beq.n	856fe <__lo0bits+0x5a>
   856e6:	3001      	adds	r0, #1
   856e8:	600b      	str	r3, [r1, #0]
   856ea:	4770      	bx	lr
   856ec:	0c1b      	lsrs	r3, r3, #16
   856ee:	2010      	movs	r0, #16
   856f0:	e7e8      	b.n	856c4 <__lo0bits+0x20>
   856f2:	2000      	movs	r0, #0
   856f4:	4770      	bx	lr
   856f6:	089b      	lsrs	r3, r3, #2
   856f8:	600b      	str	r3, [r1, #0]
   856fa:	2002      	movs	r0, #2
   856fc:	4770      	bx	lr
   856fe:	2020      	movs	r0, #32
   85700:	4770      	bx	lr
   85702:	bf00      	nop

00085704 <__i2b>:
   85704:	b510      	push	{r4, lr}
   85706:	460c      	mov	r4, r1
   85708:	2101      	movs	r1, #1
   8570a:	f7ff feed 	bl	854e8 <_Balloc>
   8570e:	2201      	movs	r2, #1
   85710:	e9c0 2404 	strd	r2, r4, [r0, #16]
   85714:	bd10      	pop	{r4, pc}
   85716:	bf00      	nop

00085718 <__multiply>:
   85718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8571c:	690d      	ldr	r5, [r1, #16]
   8571e:	6914      	ldr	r4, [r2, #16]
   85720:	b085      	sub	sp, #20
   85722:	42a5      	cmp	r5, r4
   85724:	460e      	mov	r6, r1
   85726:	4691      	mov	r9, r2
   85728:	da04      	bge.n	85734 <__multiply+0x1c>
   8572a:	462a      	mov	r2, r5
   8572c:	464e      	mov	r6, r9
   8572e:	4625      	mov	r5, r4
   85730:	4689      	mov	r9, r1
   85732:	4614      	mov	r4, r2
   85734:	68b3      	ldr	r3, [r6, #8]
   85736:	eb05 0804 	add.w	r8, r5, r4
   8573a:	6871      	ldr	r1, [r6, #4]
   8573c:	4543      	cmp	r3, r8
   8573e:	bfb8      	it	lt
   85740:	3101      	addlt	r1, #1
   85742:	f7ff fed1 	bl	854e8 <_Balloc>
   85746:	f100 0b14 	add.w	fp, r0, #20
   8574a:	eb0b 0a88 	add.w	sl, fp, r8, lsl #2
   8574e:	45d3      	cmp	fp, sl
   85750:	9001      	str	r0, [sp, #4]
   85752:	d205      	bcs.n	85760 <__multiply+0x48>
   85754:	465b      	mov	r3, fp
   85756:	2200      	movs	r2, #0
   85758:	f843 2b04 	str.w	r2, [r3], #4
   8575c:	459a      	cmp	sl, r3
   8575e:	d8fb      	bhi.n	85758 <__multiply+0x40>
   85760:	f109 0314 	add.w	r3, r9, #20
   85764:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   85768:	f106 0214 	add.w	r2, r6, #20
   8576c:	42a3      	cmp	r3, r4
   8576e:	eb02 0e85 	add.w	lr, r2, r5, lsl #2
   85772:	d262      	bcs.n	8583a <__multiply+0x122>
   85774:	eba4 0409 	sub.w	r4, r4, r9
   85778:	3c15      	subs	r4, #21
   8577a:	f024 0403 	bic.w	r4, r4, #3
   8577e:	4423      	add	r3, r4
   85780:	e9cd a802 	strd	sl, r8, [sp, #8]
   85784:	f109 0910 	add.w	r9, r9, #16
   85788:	4690      	mov	r8, r2
   8578a:	469a      	mov	sl, r3
   8578c:	e005      	b.n	8579a <__multiply+0x82>
   8578e:	0c09      	lsrs	r1, r1, #16
   85790:	d12c      	bne.n	857ec <__multiply+0xd4>
   85792:	45ca      	cmp	sl, r9
   85794:	f10b 0b04 	add.w	fp, fp, #4
   85798:	d04d      	beq.n	85836 <__multiply+0x11e>
   8579a:	f859 1f04 	ldr.w	r1, [r9, #4]!
   8579e:	fa1f fc81 	uxth.w	ip, r1
   857a2:	f1bc 0f00 	cmp.w	ip, #0
   857a6:	d0f2      	beq.n	8578e <__multiply+0x76>
   857a8:	4647      	mov	r7, r8
   857aa:	465e      	mov	r6, fp
   857ac:	2100      	movs	r1, #0
   857ae:	e000      	b.n	857b2 <__multiply+0x9a>
   857b0:	4606      	mov	r6, r0
   857b2:	4630      	mov	r0, r6
   857b4:	f857 2b04 	ldr.w	r2, [r7], #4
   857b8:	6834      	ldr	r4, [r6, #0]
   857ba:	b293      	uxth	r3, r2
   857bc:	b2a5      	uxth	r5, r4
   857be:	0c12      	lsrs	r2, r2, #16
   857c0:	fb0c 5303 	mla	r3, ip, r3, r5
   857c4:	0c24      	lsrs	r4, r4, #16
   857c6:	fb0c 4202 	mla	r2, ip, r2, r4
   857ca:	440b      	add	r3, r1
   857cc:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   857d0:	b29b      	uxth	r3, r3
   857d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   857d6:	45be      	cmp	lr, r7
   857d8:	ea4f 4111 	mov.w	r1, r1, lsr #16
   857dc:	f840 3b04 	str.w	r3, [r0], #4
   857e0:	d8e6      	bhi.n	857b0 <__multiply+0x98>
   857e2:	6071      	str	r1, [r6, #4]
   857e4:	f8d9 1000 	ldr.w	r1, [r9]
   857e8:	0c09      	lsrs	r1, r1, #16
   857ea:	d0d2      	beq.n	85792 <__multiply+0x7a>
   857ec:	f8db 3000 	ldr.w	r3, [fp]
   857f0:	4640      	mov	r0, r8
   857f2:	461e      	mov	r6, r3
   857f4:	465d      	mov	r5, fp
   857f6:	2200      	movs	r2, #0
   857f8:	e000      	b.n	857fc <__multiply+0xe4>
   857fa:	4625      	mov	r5, r4
   857fc:	462c      	mov	r4, r5
   857fe:	8807      	ldrh	r7, [r0, #0]
   85800:	0c36      	lsrs	r6, r6, #16
   85802:	fb01 6607 	mla	r6, r1, r7, r6
   85806:	b29b      	uxth	r3, r3
   85808:	4432      	add	r2, r6
   8580a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8580e:	f844 3b04 	str.w	r3, [r4], #4
   85812:	f850 3b04 	ldr.w	r3, [r0], #4
   85816:	686e      	ldr	r6, [r5, #4]
   85818:	0c1b      	lsrs	r3, r3, #16
   8581a:	b2b7      	uxth	r7, r6
   8581c:	fb01 7303 	mla	r3, r1, r3, r7
   85820:	4586      	cmp	lr, r0
   85822:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   85826:	ea4f 4213 	mov.w	r2, r3, lsr #16
   8582a:	d8e6      	bhi.n	857fa <__multiply+0xe2>
   8582c:	45ca      	cmp	sl, r9
   8582e:	606b      	str	r3, [r5, #4]
   85830:	f10b 0b04 	add.w	fp, fp, #4
   85834:	d1b1      	bne.n	8579a <__multiply+0x82>
   85836:	e9dd a802 	ldrd	sl, r8, [sp, #8]
   8583a:	f1b8 0f00 	cmp.w	r8, #0
   8583e:	dd0b      	ble.n	85858 <__multiply+0x140>
   85840:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   85844:	f1aa 0a04 	sub.w	sl, sl, #4
   85848:	b11b      	cbz	r3, 85852 <__multiply+0x13a>
   8584a:	e005      	b.n	85858 <__multiply+0x140>
   8584c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   85850:	b913      	cbnz	r3, 85858 <__multiply+0x140>
   85852:	f1b8 0801 	subs.w	r8, r8, #1
   85856:	d1f9      	bne.n	8584c <__multiply+0x134>
   85858:	9801      	ldr	r0, [sp, #4]
   8585a:	f8c0 8010 	str.w	r8, [r0, #16]
   8585e:	b005      	add	sp, #20
   85860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00085864 <__pow5mult>:
   85864:	f012 0303 	ands.w	r3, r2, #3
   85868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8586c:	4614      	mov	r4, r2
   8586e:	4607      	mov	r7, r0
   85870:	d12e      	bne.n	858d0 <__pow5mult+0x6c>
   85872:	460d      	mov	r5, r1
   85874:	10a4      	asrs	r4, r4, #2
   85876:	d01c      	beq.n	858b2 <__pow5mult+0x4e>
   85878:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   8587a:	b396      	cbz	r6, 858e2 <__pow5mult+0x7e>
   8587c:	07e3      	lsls	r3, r4, #31
   8587e:	f04f 0800 	mov.w	r8, #0
   85882:	d406      	bmi.n	85892 <__pow5mult+0x2e>
   85884:	1064      	asrs	r4, r4, #1
   85886:	d014      	beq.n	858b2 <__pow5mult+0x4e>
   85888:	6830      	ldr	r0, [r6, #0]
   8588a:	b1a8      	cbz	r0, 858b8 <__pow5mult+0x54>
   8588c:	4606      	mov	r6, r0
   8588e:	07e3      	lsls	r3, r4, #31
   85890:	d5f8      	bpl.n	85884 <__pow5mult+0x20>
   85892:	4632      	mov	r2, r6
   85894:	4629      	mov	r1, r5
   85896:	4638      	mov	r0, r7
   85898:	f7ff ff3e 	bl	85718 <__multiply>
   8589c:	b1b5      	cbz	r5, 858cc <__pow5mult+0x68>
   8589e:	686a      	ldr	r2, [r5, #4]
   858a0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   858a2:	1064      	asrs	r4, r4, #1
   858a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   858a8:	6029      	str	r1, [r5, #0]
   858aa:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   858ae:	4605      	mov	r5, r0
   858b0:	d1ea      	bne.n	85888 <__pow5mult+0x24>
   858b2:	4628      	mov	r0, r5
   858b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   858b8:	4632      	mov	r2, r6
   858ba:	4631      	mov	r1, r6
   858bc:	4638      	mov	r0, r7
   858be:	f7ff ff2b 	bl	85718 <__multiply>
   858c2:	6030      	str	r0, [r6, #0]
   858c4:	f8c0 8000 	str.w	r8, [r0]
   858c8:	4606      	mov	r6, r0
   858ca:	e7e0      	b.n	8588e <__pow5mult+0x2a>
   858cc:	4605      	mov	r5, r0
   858ce:	e7d9      	b.n	85884 <__pow5mult+0x20>
   858d0:	4a0b      	ldr	r2, [pc, #44]	; (85900 <__pow5mult+0x9c>)
   858d2:	3b01      	subs	r3, #1
   858d4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   858d8:	2300      	movs	r3, #0
   858da:	f7ff fe35 	bl	85548 <__multadd>
   858de:	4605      	mov	r5, r0
   858e0:	e7c8      	b.n	85874 <__pow5mult+0x10>
   858e2:	2101      	movs	r1, #1
   858e4:	4638      	mov	r0, r7
   858e6:	f7ff fdff 	bl	854e8 <_Balloc>
   858ea:	f240 2171 	movw	r1, #625	; 0x271
   858ee:	2201      	movs	r2, #1
   858f0:	2300      	movs	r3, #0
   858f2:	e9c0 2104 	strd	r2, r1, [r0, #16]
   858f6:	4606      	mov	r6, r0
   858f8:	64b8      	str	r0, [r7, #72]	; 0x48
   858fa:	6003      	str	r3, [r0, #0]
   858fc:	e7be      	b.n	8587c <__pow5mult+0x18>
   858fe:	bf00      	nop
   85900:	00087740 	.word	0x00087740

00085904 <__lshift>:
   85904:	690b      	ldr	r3, [r1, #16]
   85906:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8590a:	1154      	asrs	r4, r2, #5
   8590c:	eb04 0803 	add.w	r8, r4, r3
   85910:	688b      	ldr	r3, [r1, #8]
   85912:	f108 0501 	add.w	r5, r8, #1
   85916:	429d      	cmp	r5, r3
   85918:	460e      	mov	r6, r1
   8591a:	4691      	mov	r9, r2
   8591c:	4607      	mov	r7, r0
   8591e:	6849      	ldr	r1, [r1, #4]
   85920:	dd04      	ble.n	8592c <__lshift+0x28>
   85922:	005b      	lsls	r3, r3, #1
   85924:	429d      	cmp	r5, r3
   85926:	f101 0101 	add.w	r1, r1, #1
   8592a:	dcfa      	bgt.n	85922 <__lshift+0x1e>
   8592c:	4638      	mov	r0, r7
   8592e:	f7ff fddb 	bl	854e8 <_Balloc>
   85932:	2c00      	cmp	r4, #0
   85934:	f100 0314 	add.w	r3, r0, #20
   85938:	dd3c      	ble.n	859b4 <__lshift+0xb0>
   8593a:	2200      	movs	r2, #0
   8593c:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   85940:	f843 2b04 	str.w	r2, [r3], #4
   85944:	428b      	cmp	r3, r1
   85946:	d1fb      	bne.n	85940 <__lshift+0x3c>
   85948:	6934      	ldr	r4, [r6, #16]
   8594a:	f106 0314 	add.w	r3, r6, #20
   8594e:	f019 091f 	ands.w	r9, r9, #31
   85952:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
   85956:	d025      	beq.n	859a4 <__lshift+0xa0>
   85958:	f1c9 0220 	rsb	r2, r9, #32
   8595c:	f04f 0a00 	mov.w	sl, #0
   85960:	e000      	b.n	85964 <__lshift+0x60>
   85962:	4671      	mov	r1, lr
   85964:	468e      	mov	lr, r1
   85966:	681c      	ldr	r4, [r3, #0]
   85968:	fa04 f409 	lsl.w	r4, r4, r9
   8596c:	ea44 040a 	orr.w	r4, r4, sl
   85970:	f84e 4b04 	str.w	r4, [lr], #4
   85974:	f853 4b04 	ldr.w	r4, [r3], #4
   85978:	4563      	cmp	r3, ip
   8597a:	fa24 fa02 	lsr.w	sl, r4, r2
   8597e:	d3f0      	bcc.n	85962 <__lshift+0x5e>
   85980:	f8c1 a004 	str.w	sl, [r1, #4]
   85984:	f1ba 0f00 	cmp.w	sl, #0
   85988:	d001      	beq.n	8598e <__lshift+0x8a>
   8598a:	f108 0502 	add.w	r5, r8, #2
   8598e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85990:	6872      	ldr	r2, [r6, #4]
   85992:	3d01      	subs	r5, #1
   85994:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85998:	6105      	str	r5, [r0, #16]
   8599a:	6031      	str	r1, [r6, #0]
   8599c:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   859a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   859a4:	3904      	subs	r1, #4
   859a6:	f853 2b04 	ldr.w	r2, [r3], #4
   859aa:	459c      	cmp	ip, r3
   859ac:	f841 2f04 	str.w	r2, [r1, #4]!
   859b0:	d8f9      	bhi.n	859a6 <__lshift+0xa2>
   859b2:	e7ec      	b.n	8598e <__lshift+0x8a>
   859b4:	4619      	mov	r1, r3
   859b6:	e7c7      	b.n	85948 <__lshift+0x44>

000859b8 <__mcmp>:
   859b8:	b430      	push	{r4, r5}
   859ba:	690b      	ldr	r3, [r1, #16]
   859bc:	4605      	mov	r5, r0
   859be:	6900      	ldr	r0, [r0, #16]
   859c0:	1ac0      	subs	r0, r0, r3
   859c2:	d10f      	bne.n	859e4 <__mcmp+0x2c>
   859c4:	009b      	lsls	r3, r3, #2
   859c6:	3514      	adds	r5, #20
   859c8:	3114      	adds	r1, #20
   859ca:	4419      	add	r1, r3
   859cc:	442b      	add	r3, r5
   859ce:	e001      	b.n	859d4 <__mcmp+0x1c>
   859d0:	429d      	cmp	r5, r3
   859d2:	d207      	bcs.n	859e4 <__mcmp+0x2c>
   859d4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   859d8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   859dc:	4294      	cmp	r4, r2
   859de:	d0f7      	beq.n	859d0 <__mcmp+0x18>
   859e0:	d302      	bcc.n	859e8 <__mcmp+0x30>
   859e2:	2001      	movs	r0, #1
   859e4:	bc30      	pop	{r4, r5}
   859e6:	4770      	bx	lr
   859e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   859ec:	e7fa      	b.n	859e4 <__mcmp+0x2c>
   859ee:	bf00      	nop

000859f0 <__mdiff>:
   859f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   859f4:	690c      	ldr	r4, [r1, #16]
   859f6:	6913      	ldr	r3, [r2, #16]
   859f8:	4689      	mov	r9, r1
   859fa:	1ae4      	subs	r4, r4, r3
   859fc:	2c00      	cmp	r4, #0
   859fe:	4692      	mov	sl, r2
   85a00:	f101 0714 	add.w	r7, r1, #20
   85a04:	f102 0b14 	add.w	fp, r2, #20
   85a08:	d114      	bne.n	85a34 <__mdiff+0x44>
   85a0a:	009b      	lsls	r3, r3, #2
   85a0c:	18fa      	adds	r2, r7, r3
   85a0e:	445b      	add	r3, fp
   85a10:	e001      	b.n	85a16 <__mdiff+0x26>
   85a12:	42ba      	cmp	r2, r7
   85a14:	d962      	bls.n	85adc <__mdiff+0xec>
   85a16:	f852 5d04 	ldr.w	r5, [r2, #-4]!
   85a1a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   85a1e:	428d      	cmp	r5, r1
   85a20:	d0f7      	beq.n	85a12 <__mdiff+0x22>
   85a22:	d209      	bcs.n	85a38 <__mdiff+0x48>
   85a24:	463a      	mov	r2, r7
   85a26:	464b      	mov	r3, r9
   85a28:	465f      	mov	r7, fp
   85a2a:	46d1      	mov	r9, sl
   85a2c:	4693      	mov	fp, r2
   85a2e:	469a      	mov	sl, r3
   85a30:	2401      	movs	r4, #1
   85a32:	e001      	b.n	85a38 <__mdiff+0x48>
   85a34:	dbf6      	blt.n	85a24 <__mdiff+0x34>
   85a36:	2400      	movs	r4, #0
   85a38:	f8d9 1004 	ldr.w	r1, [r9, #4]
   85a3c:	f7ff fd54 	bl	854e8 <_Balloc>
   85a40:	465e      	mov	r6, fp
   85a42:	f04f 0800 	mov.w	r8, #0
   85a46:	f8d9 c010 	ldr.w	ip, [r9, #16]
   85a4a:	f8da 3010 	ldr.w	r3, [sl, #16]
   85a4e:	463d      	mov	r5, r7
   85a50:	60c4      	str	r4, [r0, #12]
   85a52:	eb0b 0e83 	add.w	lr, fp, r3, lsl #2
   85a56:	eb07 078c 	add.w	r7, r7, ip, lsl #2
   85a5a:	f100 0414 	add.w	r4, r0, #20
   85a5e:	f855 9b04 	ldr.w	r9, [r5], #4
   85a62:	f856 2b04 	ldr.w	r2, [r6], #4
   85a66:	fa1f f389 	uxth.w	r3, r9
   85a6a:	4443      	add	r3, r8
   85a6c:	fa1f f882 	uxth.w	r8, r2
   85a70:	0c12      	lsrs	r2, r2, #16
   85a72:	eba3 0308 	sub.w	r3, r3, r8
   85a76:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   85a7a:	eb02 4223 	add.w	r2, r2, r3, asr #16
   85a7e:	b29b      	uxth	r3, r3
   85a80:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85a84:	45b6      	cmp	lr, r6
   85a86:	f844 3b04 	str.w	r3, [r4], #4
   85a8a:	ea4f 4822 	mov.w	r8, r2, asr #16
   85a8e:	d8e6      	bhi.n	85a5e <__mdiff+0x6e>
   85a90:	42af      	cmp	r7, r5
   85a92:	d917      	bls.n	85ac4 <__mdiff+0xd4>
   85a94:	46a6      	mov	lr, r4
   85a96:	462e      	mov	r6, r5
   85a98:	f856 3b04 	ldr.w	r3, [r6], #4
   85a9c:	b299      	uxth	r1, r3
   85a9e:	4441      	add	r1, r8
   85aa0:	140a      	asrs	r2, r1, #16
   85aa2:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   85aa6:	b289      	uxth	r1, r1
   85aa8:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   85aac:	42b7      	cmp	r7, r6
   85aae:	f84e 3b04 	str.w	r3, [lr], #4
   85ab2:	ea4f 4822 	mov.w	r8, r2, asr #16
   85ab6:	d8ef      	bhi.n	85a98 <__mdiff+0xa8>
   85ab8:	43ed      	mvns	r5, r5
   85aba:	442f      	add	r7, r5
   85abc:	f027 0703 	bic.w	r7, r7, #3
   85ac0:	3704      	adds	r7, #4
   85ac2:	443c      	add	r4, r7
   85ac4:	3c04      	subs	r4, #4
   85ac6:	b92b      	cbnz	r3, 85ad4 <__mdiff+0xe4>
   85ac8:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   85acc:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
   85ad0:	2b00      	cmp	r3, #0
   85ad2:	d0f9      	beq.n	85ac8 <__mdiff+0xd8>
   85ad4:	f8c0 c010 	str.w	ip, [r0, #16]
   85ad8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85adc:	2100      	movs	r1, #0
   85ade:	f7ff fd03 	bl	854e8 <_Balloc>
   85ae2:	2201      	movs	r2, #1
   85ae4:	2300      	movs	r3, #0
   85ae6:	e9c0 2304 	strd	r2, r3, [r0, #16]
   85aea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85aee:	bf00      	nop

00085af0 <__ulp>:
   85af0:	4b0f      	ldr	r3, [pc, #60]	; (85b30 <__ulp+0x40>)
   85af2:	400b      	ands	r3, r1
   85af4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   85af8:	2b00      	cmp	r3, #0
   85afa:	dd02      	ble.n	85b02 <__ulp+0x12>
   85afc:	2000      	movs	r0, #0
   85afe:	4619      	mov	r1, r3
   85b00:	4770      	bx	lr
   85b02:	425b      	negs	r3, r3
   85b04:	151b      	asrs	r3, r3, #20
   85b06:	2b13      	cmp	r3, #19
   85b08:	dd0b      	ble.n	85b22 <__ulp+0x32>
   85b0a:	3b14      	subs	r3, #20
   85b0c:	2b1e      	cmp	r3, #30
   85b0e:	bfd7      	itett	le
   85b10:	2201      	movle	r2, #1
   85b12:	2301      	movgt	r3, #1
   85b14:	f1c3 031f 	rsble	r3, r3, #31
   85b18:	fa02 f303 	lslle.w	r3, r2, r3
   85b1c:	2100      	movs	r1, #0
   85b1e:	4618      	mov	r0, r3
   85b20:	4770      	bx	lr
   85b22:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   85b26:	2000      	movs	r0, #0
   85b28:	fa42 f103 	asr.w	r1, r2, r3
   85b2c:	4770      	bx	lr
   85b2e:	bf00      	nop
   85b30:	7ff00000 	.word	0x7ff00000

00085b34 <__b2d>:
   85b34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85b38:	6907      	ldr	r7, [r0, #16]
   85b3a:	f100 0614 	add.w	r6, r0, #20
   85b3e:	eb06 0787 	add.w	r7, r6, r7, lsl #2
   85b42:	f857 8c04 	ldr.w	r8, [r7, #-4]
   85b46:	4640      	mov	r0, r8
   85b48:	f7ff fd8c 	bl	85664 <__hi0bits>
   85b4c:	f1c0 0320 	rsb	r3, r0, #32
   85b50:	280a      	cmp	r0, #10
   85b52:	600b      	str	r3, [r1, #0]
   85b54:	f1a7 0204 	sub.w	r2, r7, #4
   85b58:	dc18      	bgt.n	85b8c <__b2d+0x58>
   85b5a:	4296      	cmp	r6, r2
   85b5c:	bf2c      	ite	cs
   85b5e:	2200      	movcs	r2, #0
   85b60:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   85b64:	f1c0 030b 	rsb	r3, r0, #11
   85b68:	fa28 f103 	lsr.w	r1, r8, r3
   85b6c:	bf38      	it	cc
   85b6e:	40da      	lsrcc	r2, r3
   85b70:	f100 0315 	add.w	r3, r0, #21
   85b74:	f041 557f 	orr.w	r5, r1, #1069547520	; 0x3fc00000
   85b78:	fa08 f303 	lsl.w	r3, r8, r3
   85b7c:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   85b80:	ea43 0402 	orr.w	r4, r3, r2
   85b84:	4620      	mov	r0, r4
   85b86:	4629      	mov	r1, r5
   85b88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85b8c:	4296      	cmp	r6, r2
   85b8e:	f1a0 030b 	sub.w	r3, r0, #11
   85b92:	d21d      	bcs.n	85bd0 <__b2d+0x9c>
   85b94:	f857 0c08 	ldr.w	r0, [r7, #-8]
   85b98:	b1e3      	cbz	r3, 85bd4 <__b2d+0xa0>
   85b9a:	fa08 f803 	lsl.w	r8, r8, r3
   85b9e:	f048 587f 	orr.w	r8, r8, #1069547520	; 0x3fc00000
   85ba2:	f1c3 0120 	rsb	r1, r3, #32
   85ba6:	f1a7 0208 	sub.w	r2, r7, #8
   85baa:	fa20 fc01 	lsr.w	ip, r0, r1
   85bae:	f448 1840 	orr.w	r8, r8, #3145728	; 0x300000
   85bb2:	4296      	cmp	r6, r2
   85bb4:	fa00 f003 	lsl.w	r0, r0, r3
   85bb8:	ea48 050c 	orr.w	r5, r8, ip
   85bbc:	d203      	bcs.n	85bc6 <__b2d+0x92>
   85bbe:	f857 3c0c 	ldr.w	r3, [r7, #-12]
   85bc2:	40cb      	lsrs	r3, r1
   85bc4:	4318      	orrs	r0, r3
   85bc6:	4604      	mov	r4, r0
   85bc8:	4620      	mov	r0, r4
   85bca:	4629      	mov	r1, r5
   85bcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85bd0:	b933      	cbnz	r3, 85be0 <__b2d+0xac>
   85bd2:	4618      	mov	r0, r3
   85bd4:	f048 557f 	orr.w	r5, r8, #1069547520	; 0x3fc00000
   85bd8:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   85bdc:	4604      	mov	r4, r0
   85bde:	e7f3      	b.n	85bc8 <__b2d+0x94>
   85be0:	2000      	movs	r0, #0
   85be2:	fa08 f303 	lsl.w	r3, r8, r3
   85be6:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
   85bea:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   85bee:	4604      	mov	r4, r0
   85bf0:	e7ea      	b.n	85bc8 <__b2d+0x94>
   85bf2:	bf00      	nop

00085bf4 <__d2b>:
   85bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85bf8:	461c      	mov	r4, r3
   85bfa:	b082      	sub	sp, #8
   85bfc:	2101      	movs	r1, #1
   85bfe:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
   85c02:	4690      	mov	r8, r2
   85c04:	f7ff fc70 	bl	854e8 <_Balloc>
   85c08:	4623      	mov	r3, r4
   85c0a:	f3c4 540a 	ubfx	r4, r4, #20, #11
   85c0e:	4607      	mov	r7, r0
   85c10:	f3c3 0313 	ubfx	r3, r3, #0, #20
   85c14:	b10c      	cbz	r4, 85c1a <__d2b+0x26>
   85c16:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85c1a:	f1b8 0200 	subs.w	r2, r8, #0
   85c1e:	9301      	str	r3, [sp, #4]
   85c20:	d01e      	beq.n	85c60 <__d2b+0x6c>
   85c22:	a802      	add	r0, sp, #8
   85c24:	f840 2d08 	str.w	r2, [r0, #-8]!
   85c28:	f7ff fd3c 	bl	856a4 <__lo0bits>
   85c2c:	bb70      	cbnz	r0, 85c8c <__d2b+0x98>
   85c2e:	e9dd 2300 	ldrd	r2, r3, [sp]
   85c32:	617a      	str	r2, [r7, #20]
   85c34:	2b00      	cmp	r3, #0
   85c36:	bf0c      	ite	eq
   85c38:	2101      	moveq	r1, #1
   85c3a:	2102      	movne	r1, #2
   85c3c:	61bb      	str	r3, [r7, #24]
   85c3e:	6139      	str	r1, [r7, #16]
   85c40:	b9cc      	cbnz	r4, 85c76 <__d2b+0x82>
   85c42:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   85c46:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   85c4a:	6030      	str	r0, [r6, #0]
   85c4c:	6918      	ldr	r0, [r3, #16]
   85c4e:	f7ff fd09 	bl	85664 <__hi0bits>
   85c52:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   85c56:	6028      	str	r0, [r5, #0]
   85c58:	4638      	mov	r0, r7
   85c5a:	b002      	add	sp, #8
   85c5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85c60:	a801      	add	r0, sp, #4
   85c62:	f7ff fd1f 	bl	856a4 <__lo0bits>
   85c66:	2201      	movs	r2, #1
   85c68:	9b01      	ldr	r3, [sp, #4]
   85c6a:	4611      	mov	r1, r2
   85c6c:	3020      	adds	r0, #32
   85c6e:	e9c7 2304 	strd	r2, r3, [r7, #16]
   85c72:	2c00      	cmp	r4, #0
   85c74:	d0e5      	beq.n	85c42 <__d2b+0x4e>
   85c76:	f2a4 4333 	subw	r3, r4, #1075	; 0x433
   85c7a:	4403      	add	r3, r0
   85c7c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   85c80:	6033      	str	r3, [r6, #0]
   85c82:	6028      	str	r0, [r5, #0]
   85c84:	4638      	mov	r0, r7
   85c86:	b002      	add	sp, #8
   85c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85c8c:	9b01      	ldr	r3, [sp, #4]
   85c8e:	f1c0 0220 	rsb	r2, r0, #32
   85c92:	9900      	ldr	r1, [sp, #0]
   85c94:	fa03 f202 	lsl.w	r2, r3, r2
   85c98:	430a      	orrs	r2, r1
   85c9a:	40c3      	lsrs	r3, r0
   85c9c:	9301      	str	r3, [sp, #4]
   85c9e:	617a      	str	r2, [r7, #20]
   85ca0:	e7c8      	b.n	85c34 <__d2b+0x40>
   85ca2:	bf00      	nop

00085ca4 <__ratio>:
   85ca4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   85ca8:	b083      	sub	sp, #12
   85caa:	460f      	mov	r7, r1
   85cac:	4669      	mov	r1, sp
   85cae:	4606      	mov	r6, r0
   85cb0:	f7ff ff40 	bl	85b34 <__b2d>
   85cb4:	4604      	mov	r4, r0
   85cb6:	460d      	mov	r5, r1
   85cb8:	4638      	mov	r0, r7
   85cba:	a901      	add	r1, sp, #4
   85cbc:	f7ff ff3a 	bl	85b34 <__b2d>
   85cc0:	6936      	ldr	r6, [r6, #16]
   85cc2:	693a      	ldr	r2, [r7, #16]
   85cc4:	4689      	mov	r9, r1
   85cc6:	e9dd 1300 	ldrd	r1, r3, [sp]
   85cca:	1ab6      	subs	r6, r6, r2
   85ccc:	1acb      	subs	r3, r1, r3
   85cce:	eb03 1346 	add.w	r3, r3, r6, lsl #5
   85cd2:	2b00      	cmp	r3, #0
   85cd4:	4680      	mov	r8, r0
   85cd6:	dd0b      	ble.n	85cf0 <__ratio+0x4c>
   85cd8:	eb05 5703 	add.w	r7, r5, r3, lsl #20
   85cdc:	463d      	mov	r5, r7
   85cde:	4642      	mov	r2, r8
   85ce0:	464b      	mov	r3, r9
   85ce2:	4620      	mov	r0, r4
   85ce4:	4629      	mov	r1, r5
   85ce6:	f001 fb21 	bl	8732c <__aeabi_ddiv>
   85cea:	b003      	add	sp, #12
   85cec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   85cf0:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
   85cf4:	eb09 5103 	add.w	r1, r9, r3, lsl #20
   85cf8:	4689      	mov	r9, r1
   85cfa:	e7f0      	b.n	85cde <__ratio+0x3a>

00085cfc <_mprec_log10>:
   85cfc:	2817      	cmp	r0, #23
   85cfe:	b5d0      	push	{r4, r6, r7, lr}
   85d00:	4604      	mov	r4, r0
   85d02:	dd0a      	ble.n	85d1a <_mprec_log10+0x1e>
   85d04:	2000      	movs	r0, #0
   85d06:	2600      	movs	r6, #0
   85d08:	4907      	ldr	r1, [pc, #28]	; (85d28 <_mprec_log10+0x2c>)
   85d0a:	4f08      	ldr	r7, [pc, #32]	; (85d2c <_mprec_log10+0x30>)
   85d0c:	4632      	mov	r2, r6
   85d0e:	463b      	mov	r3, r7
   85d10:	f001 f9e2 	bl	870d8 <__aeabi_dmul>
   85d14:	3c01      	subs	r4, #1
   85d16:	d1f9      	bne.n	85d0c <_mprec_log10+0x10>
   85d18:	bdd0      	pop	{r4, r6, r7, pc}
   85d1a:	4b05      	ldr	r3, [pc, #20]	; (85d30 <_mprec_log10+0x34>)
   85d1c:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
   85d20:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
   85d24:	bdd0      	pop	{r4, r6, r7, pc}
   85d26:	bf00      	nop
   85d28:	3ff00000 	.word	0x3ff00000
   85d2c:	40240000 	.word	0x40240000
   85d30:	00087740 	.word	0x00087740

00085d34 <__copybits>:
   85d34:	b470      	push	{r4, r5, r6}
   85d36:	6914      	ldr	r4, [r2, #16]
   85d38:	1e4d      	subs	r5, r1, #1
   85d3a:	f102 0314 	add.w	r3, r2, #20
   85d3e:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   85d42:	116d      	asrs	r5, r5, #5
   85d44:	3501      	adds	r5, #1
   85d46:	428b      	cmp	r3, r1
   85d48:	eb00 0485 	add.w	r4, r0, r5, lsl #2
   85d4c:	d20c      	bcs.n	85d68 <__copybits+0x34>
   85d4e:	1f05      	subs	r5, r0, #4
   85d50:	f853 6b04 	ldr.w	r6, [r3], #4
   85d54:	4299      	cmp	r1, r3
   85d56:	f845 6f04 	str.w	r6, [r5, #4]!
   85d5a:	d8f9      	bhi.n	85d50 <__copybits+0x1c>
   85d5c:	1a8b      	subs	r3, r1, r2
   85d5e:	3b15      	subs	r3, #21
   85d60:	f023 0303 	bic.w	r3, r3, #3
   85d64:	3304      	adds	r3, #4
   85d66:	4418      	add	r0, r3
   85d68:	4284      	cmp	r4, r0
   85d6a:	d904      	bls.n	85d76 <__copybits+0x42>
   85d6c:	2300      	movs	r3, #0
   85d6e:	f840 3b04 	str.w	r3, [r0], #4
   85d72:	4284      	cmp	r4, r0
   85d74:	d8fb      	bhi.n	85d6e <__copybits+0x3a>
   85d76:	bc70      	pop	{r4, r5, r6}
   85d78:	4770      	bx	lr
   85d7a:	bf00      	nop

00085d7c <__any_on>:
   85d7c:	6903      	ldr	r3, [r0, #16]
   85d7e:	b410      	push	{r4}
   85d80:	114c      	asrs	r4, r1, #5
   85d82:	42a3      	cmp	r3, r4
   85d84:	f100 0214 	add.w	r2, r0, #20
   85d88:	da0f      	bge.n	85daa <__any_on+0x2e>
   85d8a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   85d8e:	429a      	cmp	r2, r3
   85d90:	d21c      	bcs.n	85dcc <__any_on+0x50>
   85d92:	f853 0c04 	ldr.w	r0, [r3, #-4]
   85d96:	3b04      	subs	r3, #4
   85d98:	b118      	cbz	r0, 85da2 <__any_on+0x26>
   85d9a:	e014      	b.n	85dc6 <__any_on+0x4a>
   85d9c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   85da0:	b989      	cbnz	r1, 85dc6 <__any_on+0x4a>
   85da2:	429a      	cmp	r2, r3
   85da4:	d3fa      	bcc.n	85d9c <__any_on+0x20>
   85da6:	bc10      	pop	{r4}
   85da8:	4770      	bx	lr
   85daa:	eb02 0384 	add.w	r3, r2, r4, lsl #2
   85dae:	ddee      	ble.n	85d8e <__any_on+0x12>
   85db0:	f011 011f 	ands.w	r1, r1, #31
   85db4:	d0eb      	beq.n	85d8e <__any_on+0x12>
   85db6:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
   85dba:	fa24 f001 	lsr.w	r0, r4, r1
   85dbe:	fa00 f101 	lsl.w	r1, r0, r1
   85dc2:	428c      	cmp	r4, r1
   85dc4:	d0e3      	beq.n	85d8e <__any_on+0x12>
   85dc6:	2001      	movs	r0, #1
   85dc8:	bc10      	pop	{r4}
   85dca:	4770      	bx	lr
   85dcc:	2000      	movs	r0, #0
   85dce:	e7ea      	b.n	85da6 <__any_on+0x2a>

00085dd0 <_realloc_r>:
   85dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85dd4:	4692      	mov	sl, r2
   85dd6:	b083      	sub	sp, #12
   85dd8:	2900      	cmp	r1, #0
   85dda:	f000 80a1 	beq.w	85f20 <_realloc_r+0x150>
   85dde:	460d      	mov	r5, r1
   85de0:	4680      	mov	r8, r0
   85de2:	f10a 040b 	add.w	r4, sl, #11
   85de6:	f7ff fb7b 	bl	854e0 <__malloc_lock>
   85dea:	f855 2c04 	ldr.w	r2, [r5, #-4]
   85dee:	2c16      	cmp	r4, #22
   85df0:	f022 0603 	bic.w	r6, r2, #3
   85df4:	f1a5 0708 	sub.w	r7, r5, #8
   85df8:	d83e      	bhi.n	85e78 <_realloc_r+0xa8>
   85dfa:	2410      	movs	r4, #16
   85dfc:	4621      	mov	r1, r4
   85dfe:	45a2      	cmp	sl, r4
   85e00:	d83f      	bhi.n	85e82 <_realloc_r+0xb2>
   85e02:	428e      	cmp	r6, r1
   85e04:	eb07 0906 	add.w	r9, r7, r6
   85e08:	da74      	bge.n	85ef4 <_realloc_r+0x124>
   85e0a:	4bc8      	ldr	r3, [pc, #800]	; (8612c <_realloc_r+0x35c>)
   85e0c:	6898      	ldr	r0, [r3, #8]
   85e0e:	4548      	cmp	r0, r9
   85e10:	f000 80aa 	beq.w	85f68 <_realloc_r+0x198>
   85e14:	f8d9 0004 	ldr.w	r0, [r9, #4]
   85e18:	f020 0301 	bic.w	r3, r0, #1
   85e1c:	444b      	add	r3, r9
   85e1e:	685b      	ldr	r3, [r3, #4]
   85e20:	07db      	lsls	r3, r3, #31
   85e22:	f140 8083 	bpl.w	85f2c <_realloc_r+0x15c>
   85e26:	07d2      	lsls	r2, r2, #31
   85e28:	d534      	bpl.n	85e94 <_realloc_r+0xc4>
   85e2a:	4651      	mov	r1, sl
   85e2c:	4640      	mov	r0, r8
   85e2e:	f7fe ff75 	bl	84d1c <_malloc_r>
   85e32:	4682      	mov	sl, r0
   85e34:	b1e0      	cbz	r0, 85e70 <_realloc_r+0xa0>
   85e36:	f855 3c04 	ldr.w	r3, [r5, #-4]
   85e3a:	f1a0 0208 	sub.w	r2, r0, #8
   85e3e:	f023 0301 	bic.w	r3, r3, #1
   85e42:	443b      	add	r3, r7
   85e44:	4293      	cmp	r3, r2
   85e46:	f000 810e 	beq.w	86066 <_realloc_r+0x296>
   85e4a:	1f32      	subs	r2, r6, #4
   85e4c:	2a24      	cmp	r2, #36	; 0x24
   85e4e:	f200 8114 	bhi.w	8607a <_realloc_r+0x2aa>
   85e52:	2a13      	cmp	r2, #19
   85e54:	6829      	ldr	r1, [r5, #0]
   85e56:	f200 80fb 	bhi.w	86050 <_realloc_r+0x280>
   85e5a:	4603      	mov	r3, r0
   85e5c:	462a      	mov	r2, r5
   85e5e:	6019      	str	r1, [r3, #0]
   85e60:	6851      	ldr	r1, [r2, #4]
   85e62:	6059      	str	r1, [r3, #4]
   85e64:	6892      	ldr	r2, [r2, #8]
   85e66:	609a      	str	r2, [r3, #8]
   85e68:	4629      	mov	r1, r5
   85e6a:	4640      	mov	r0, r8
   85e6c:	f7fe fe58 	bl	84b20 <_free_r>
   85e70:	4640      	mov	r0, r8
   85e72:	f7ff fb37 	bl	854e4 <__malloc_unlock>
   85e76:	e04f      	b.n	85f18 <_realloc_r+0x148>
   85e78:	f024 0407 	bic.w	r4, r4, #7
   85e7c:	2c00      	cmp	r4, #0
   85e7e:	4621      	mov	r1, r4
   85e80:	dabd      	bge.n	85dfe <_realloc_r+0x2e>
   85e82:	f04f 0a00 	mov.w	sl, #0
   85e86:	230c      	movs	r3, #12
   85e88:	4650      	mov	r0, sl
   85e8a:	f8c8 3000 	str.w	r3, [r8]
   85e8e:	b003      	add	sp, #12
   85e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85e94:	f855 3c08 	ldr.w	r3, [r5, #-8]
   85e98:	eba7 0b03 	sub.w	fp, r7, r3
   85e9c:	f8db 2004 	ldr.w	r2, [fp, #4]
   85ea0:	f022 0203 	bic.w	r2, r2, #3
   85ea4:	18b3      	adds	r3, r6, r2
   85ea6:	428b      	cmp	r3, r1
   85ea8:	dbbf      	blt.n	85e2a <_realloc_r+0x5a>
   85eaa:	46da      	mov	sl, fp
   85eac:	f8db 100c 	ldr.w	r1, [fp, #12]
   85eb0:	f85a 0f08 	ldr.w	r0, [sl, #8]!
   85eb4:	1f32      	subs	r2, r6, #4
   85eb6:	2a24      	cmp	r2, #36	; 0x24
   85eb8:	60c1      	str	r1, [r0, #12]
   85eba:	eb0b 0903 	add.w	r9, fp, r3
   85ebe:	6088      	str	r0, [r1, #8]
   85ec0:	f200 80be 	bhi.w	86040 <_realloc_r+0x270>
   85ec4:	2a13      	cmp	r2, #19
   85ec6:	6829      	ldr	r1, [r5, #0]
   85ec8:	f240 80d5 	bls.w	86076 <_realloc_r+0x2a6>
   85ecc:	f8cb 1008 	str.w	r1, [fp, #8]
   85ed0:	6869      	ldr	r1, [r5, #4]
   85ed2:	2a1b      	cmp	r2, #27
   85ed4:	f8cb 100c 	str.w	r1, [fp, #12]
   85ed8:	68a9      	ldr	r1, [r5, #8]
   85eda:	f200 80e5 	bhi.w	860a8 <_realloc_r+0x2d8>
   85ede:	f10b 0210 	add.w	r2, fp, #16
   85ee2:	3508      	adds	r5, #8
   85ee4:	6011      	str	r1, [r2, #0]
   85ee6:	6869      	ldr	r1, [r5, #4]
   85ee8:	461e      	mov	r6, r3
   85eea:	6051      	str	r1, [r2, #4]
   85eec:	68ab      	ldr	r3, [r5, #8]
   85eee:	465f      	mov	r7, fp
   85ef0:	4655      	mov	r5, sl
   85ef2:	6093      	str	r3, [r2, #8]
   85ef4:	687a      	ldr	r2, [r7, #4]
   85ef6:	1b33      	subs	r3, r6, r4
   85ef8:	2b0f      	cmp	r3, #15
   85efa:	f002 0201 	and.w	r2, r2, #1
   85efe:	d822      	bhi.n	85f46 <_realloc_r+0x176>
   85f00:	4332      	orrs	r2, r6
   85f02:	607a      	str	r2, [r7, #4]
   85f04:	f8d9 3004 	ldr.w	r3, [r9, #4]
   85f08:	f043 0301 	orr.w	r3, r3, #1
   85f0c:	f8c9 3004 	str.w	r3, [r9, #4]
   85f10:	4640      	mov	r0, r8
   85f12:	f7ff fae7 	bl	854e4 <__malloc_unlock>
   85f16:	46aa      	mov	sl, r5
   85f18:	4650      	mov	r0, sl
   85f1a:	b003      	add	sp, #12
   85f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85f20:	4611      	mov	r1, r2
   85f22:	b003      	add	sp, #12
   85f24:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85f28:	f7fe bef8 	b.w	84d1c <_malloc_r>
   85f2c:	f020 0003 	bic.w	r0, r0, #3
   85f30:	1833      	adds	r3, r6, r0
   85f32:	428b      	cmp	r3, r1
   85f34:	db63      	blt.n	85ffe <_realloc_r+0x22e>
   85f36:	e9d9 1202 	ldrd	r1, r2, [r9, #8]
   85f3a:	461e      	mov	r6, r3
   85f3c:	60ca      	str	r2, [r1, #12]
   85f3e:	eb07 0903 	add.w	r9, r7, r3
   85f42:	6091      	str	r1, [r2, #8]
   85f44:	e7d6      	b.n	85ef4 <_realloc_r+0x124>
   85f46:	1939      	adds	r1, r7, r4
   85f48:	4322      	orrs	r2, r4
   85f4a:	f043 0301 	orr.w	r3, r3, #1
   85f4e:	607a      	str	r2, [r7, #4]
   85f50:	604b      	str	r3, [r1, #4]
   85f52:	f8d9 3004 	ldr.w	r3, [r9, #4]
   85f56:	3108      	adds	r1, #8
   85f58:	f043 0301 	orr.w	r3, r3, #1
   85f5c:	f8c9 3004 	str.w	r3, [r9, #4]
   85f60:	4640      	mov	r0, r8
   85f62:	f7fe fddd 	bl	84b20 <_free_r>
   85f66:	e7d3      	b.n	85f10 <_realloc_r+0x140>
   85f68:	f8d0 9004 	ldr.w	r9, [r0, #4]
   85f6c:	f104 0010 	add.w	r0, r4, #16
   85f70:	f029 0903 	bic.w	r9, r9, #3
   85f74:	44b1      	add	r9, r6
   85f76:	4581      	cmp	r9, r0
   85f78:	f280 8083 	bge.w	86082 <_realloc_r+0x2b2>
   85f7c:	07d2      	lsls	r2, r2, #31
   85f7e:	f53f af54 	bmi.w	85e2a <_realloc_r+0x5a>
   85f82:	f855 2c08 	ldr.w	r2, [r5, #-8]
   85f86:	eba7 0b02 	sub.w	fp, r7, r2
   85f8a:	f8db 2004 	ldr.w	r2, [fp, #4]
   85f8e:	f022 0203 	bic.w	r2, r2, #3
   85f92:	4491      	add	r9, r2
   85f94:	4548      	cmp	r0, r9
   85f96:	dc85      	bgt.n	85ea4 <_realloc_r+0xd4>
   85f98:	46da      	mov	sl, fp
   85f9a:	f8db 100c 	ldr.w	r1, [fp, #12]
   85f9e:	f85a 0f08 	ldr.w	r0, [sl, #8]!
   85fa2:	1f32      	subs	r2, r6, #4
   85fa4:	2a24      	cmp	r2, #36	; 0x24
   85fa6:	60c1      	str	r1, [r0, #12]
   85fa8:	6088      	str	r0, [r1, #8]
   85faa:	f200 80ab 	bhi.w	86104 <_realloc_r+0x334>
   85fae:	2a13      	cmp	r2, #19
   85fb0:	6829      	ldr	r1, [r5, #0]
   85fb2:	f240 80a5 	bls.w	86100 <_realloc_r+0x330>
   85fb6:	f8cb 1008 	str.w	r1, [fp, #8]
   85fba:	6869      	ldr	r1, [r5, #4]
   85fbc:	2a1b      	cmp	r2, #27
   85fbe:	f8cb 100c 	str.w	r1, [fp, #12]
   85fc2:	68a9      	ldr	r1, [r5, #8]
   85fc4:	f200 80a5 	bhi.w	86112 <_realloc_r+0x342>
   85fc8:	f10b 0210 	add.w	r2, fp, #16
   85fcc:	3508      	adds	r5, #8
   85fce:	6011      	str	r1, [r2, #0]
   85fd0:	6869      	ldr	r1, [r5, #4]
   85fd2:	6051      	str	r1, [r2, #4]
   85fd4:	68a9      	ldr	r1, [r5, #8]
   85fd6:	6091      	str	r1, [r2, #8]
   85fd8:	eba9 0204 	sub.w	r2, r9, r4
   85fdc:	eb0b 0104 	add.w	r1, fp, r4
   85fe0:	f042 0201 	orr.w	r2, r2, #1
   85fe4:	6099      	str	r1, [r3, #8]
   85fe6:	604a      	str	r2, [r1, #4]
   85fe8:	f8db 3004 	ldr.w	r3, [fp, #4]
   85fec:	4640      	mov	r0, r8
   85fee:	f003 0301 	and.w	r3, r3, #1
   85ff2:	431c      	orrs	r4, r3
   85ff4:	f8cb 4004 	str.w	r4, [fp, #4]
   85ff8:	f7ff fa74 	bl	854e4 <__malloc_unlock>
   85ffc:	e78c      	b.n	85f18 <_realloc_r+0x148>
   85ffe:	07d3      	lsls	r3, r2, #31
   86000:	f53f af13 	bmi.w	85e2a <_realloc_r+0x5a>
   86004:	f855 3c08 	ldr.w	r3, [r5, #-8]
   86008:	eba7 0b03 	sub.w	fp, r7, r3
   8600c:	f8db 2004 	ldr.w	r2, [fp, #4]
   86010:	f022 0203 	bic.w	r2, r2, #3
   86014:	4410      	add	r0, r2
   86016:	1983      	adds	r3, r0, r6
   86018:	428b      	cmp	r3, r1
   8601a:	f6ff af43 	blt.w	85ea4 <_realloc_r+0xd4>
   8601e:	e9d9 0102 	ldrd	r0, r1, [r9, #8]
   86022:	46da      	mov	sl, fp
   86024:	60c1      	str	r1, [r0, #12]
   86026:	6088      	str	r0, [r1, #8]
   86028:	f85a 0f08 	ldr.w	r0, [sl, #8]!
   8602c:	f8db 100c 	ldr.w	r1, [fp, #12]
   86030:	1f32      	subs	r2, r6, #4
   86032:	2a24      	cmp	r2, #36	; 0x24
   86034:	60c1      	str	r1, [r0, #12]
   86036:	eb0b 0903 	add.w	r9, fp, r3
   8603a:	6088      	str	r0, [r1, #8]
   8603c:	f67f af42 	bls.w	85ec4 <_realloc_r+0xf4>
   86040:	4629      	mov	r1, r5
   86042:	4650      	mov	r0, sl
   86044:	461e      	mov	r6, r3
   86046:	465f      	mov	r7, fp
   86048:	f7ff f9e8 	bl	8541c <memmove>
   8604c:	4655      	mov	r5, sl
   8604e:	e751      	b.n	85ef4 <_realloc_r+0x124>
   86050:	6001      	str	r1, [r0, #0]
   86052:	686b      	ldr	r3, [r5, #4]
   86054:	2a1b      	cmp	r2, #27
   86056:	6043      	str	r3, [r0, #4]
   86058:	d832      	bhi.n	860c0 <_realloc_r+0x2f0>
   8605a:	f105 0208 	add.w	r2, r5, #8
   8605e:	f100 0308 	add.w	r3, r0, #8
   86062:	68a9      	ldr	r1, [r5, #8]
   86064:	e6fb      	b.n	85e5e <_realloc_r+0x8e>
   86066:	f850 3c04 	ldr.w	r3, [r0, #-4]
   8606a:	f023 0303 	bic.w	r3, r3, #3
   8606e:	441e      	add	r6, r3
   86070:	eb07 0906 	add.w	r9, r7, r6
   86074:	e73e      	b.n	85ef4 <_realloc_r+0x124>
   86076:	4652      	mov	r2, sl
   86078:	e734      	b.n	85ee4 <_realloc_r+0x114>
   8607a:	4629      	mov	r1, r5
   8607c:	f7ff f9ce 	bl	8541c <memmove>
   86080:	e6f2      	b.n	85e68 <_realloc_r+0x98>
   86082:	eba9 0904 	sub.w	r9, r9, r4
   86086:	4427      	add	r7, r4
   86088:	f049 0201 	orr.w	r2, r9, #1
   8608c:	609f      	str	r7, [r3, #8]
   8608e:	607a      	str	r2, [r7, #4]
   86090:	f855 3c04 	ldr.w	r3, [r5, #-4]
   86094:	4640      	mov	r0, r8
   86096:	f003 0301 	and.w	r3, r3, #1
   8609a:	431c      	orrs	r4, r3
   8609c:	f845 4c04 	str.w	r4, [r5, #-4]
   860a0:	f7ff fa20 	bl	854e4 <__malloc_unlock>
   860a4:	46aa      	mov	sl, r5
   860a6:	e737      	b.n	85f18 <_realloc_r+0x148>
   860a8:	f8cb 1010 	str.w	r1, [fp, #16]
   860ac:	68e9      	ldr	r1, [r5, #12]
   860ae:	2a24      	cmp	r2, #36	; 0x24
   860b0:	f8cb 1014 	str.w	r1, [fp, #20]
   860b4:	6929      	ldr	r1, [r5, #16]
   860b6:	d00f      	beq.n	860d8 <_realloc_r+0x308>
   860b8:	f10b 0218 	add.w	r2, fp, #24
   860bc:	3510      	adds	r5, #16
   860be:	e711      	b.n	85ee4 <_realloc_r+0x114>
   860c0:	68ab      	ldr	r3, [r5, #8]
   860c2:	2a24      	cmp	r2, #36	; 0x24
   860c4:	6083      	str	r3, [r0, #8]
   860c6:	68eb      	ldr	r3, [r5, #12]
   860c8:	60c3      	str	r3, [r0, #12]
   860ca:	d00f      	beq.n	860ec <_realloc_r+0x31c>
   860cc:	f105 0210 	add.w	r2, r5, #16
   860d0:	f100 0310 	add.w	r3, r0, #16
   860d4:	6929      	ldr	r1, [r5, #16]
   860d6:	e6c2      	b.n	85e5e <_realloc_r+0x8e>
   860d8:	f8cb 1018 	str.w	r1, [fp, #24]
   860dc:	6969      	ldr	r1, [r5, #20]
   860de:	f10b 0220 	add.w	r2, fp, #32
   860e2:	f8cb 101c 	str.w	r1, [fp, #28]
   860e6:	69a9      	ldr	r1, [r5, #24]
   860e8:	3518      	adds	r5, #24
   860ea:	e6fb      	b.n	85ee4 <_realloc_r+0x114>
   860ec:	692b      	ldr	r3, [r5, #16]
   860ee:	f105 0218 	add.w	r2, r5, #24
   860f2:	6103      	str	r3, [r0, #16]
   860f4:	6969      	ldr	r1, [r5, #20]
   860f6:	f100 0318 	add.w	r3, r0, #24
   860fa:	6141      	str	r1, [r0, #20]
   860fc:	69a9      	ldr	r1, [r5, #24]
   860fe:	e6ae      	b.n	85e5e <_realloc_r+0x8e>
   86100:	4652      	mov	r2, sl
   86102:	e764      	b.n	85fce <_realloc_r+0x1fe>
   86104:	4629      	mov	r1, r5
   86106:	4650      	mov	r0, sl
   86108:	9301      	str	r3, [sp, #4]
   8610a:	f7ff f987 	bl	8541c <memmove>
   8610e:	9b01      	ldr	r3, [sp, #4]
   86110:	e762      	b.n	85fd8 <_realloc_r+0x208>
   86112:	f8cb 1010 	str.w	r1, [fp, #16]
   86116:	68e9      	ldr	r1, [r5, #12]
   86118:	2a24      	cmp	r2, #36	; 0x24
   8611a:	f8cb 1014 	str.w	r1, [fp, #20]
   8611e:	6929      	ldr	r1, [r5, #16]
   86120:	d006      	beq.n	86130 <_realloc_r+0x360>
   86122:	f10b 0218 	add.w	r2, fp, #24
   86126:	3510      	adds	r5, #16
   86128:	e751      	b.n	85fce <_realloc_r+0x1fe>
   8612a:	bf00      	nop
   8612c:	20070834 	.word	0x20070834
   86130:	f8cb 1018 	str.w	r1, [fp, #24]
   86134:	6969      	ldr	r1, [r5, #20]
   86136:	f10b 0220 	add.w	r2, fp, #32
   8613a:	f8cb 101c 	str.w	r1, [fp, #28]
   8613e:	69a9      	ldr	r1, [r5, #24]
   86140:	3518      	adds	r5, #24
   86142:	e744      	b.n	85fce <_realloc_r+0x1fe>

00086144 <_sbrk_r>:
   86144:	b538      	push	{r3, r4, r5, lr}
   86146:	2300      	movs	r3, #0
   86148:	4c06      	ldr	r4, [pc, #24]	; (86164 <_sbrk_r+0x20>)
   8614a:	4605      	mov	r5, r0
   8614c:	4608      	mov	r0, r1
   8614e:	6023      	str	r3, [r4, #0]
   86150:	f7fb fdb6 	bl	81cc0 <_sbrk>
   86154:	1c43      	adds	r3, r0, #1
   86156:	d000      	beq.n	8615a <_sbrk_r+0x16>
   86158:	bd38      	pop	{r3, r4, r5, pc}
   8615a:	6823      	ldr	r3, [r4, #0]
   8615c:	2b00      	cmp	r3, #0
   8615e:	d0fb      	beq.n	86158 <_sbrk_r+0x14>
   86160:	602b      	str	r3, [r5, #0]
   86162:	bd38      	pop	{r3, r4, r5, pc}
   86164:	20070d94 	.word	0x20070d94

00086168 <__ssprint_r>:
   86168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8616c:	6893      	ldr	r3, [r2, #8]
   8616e:	b083      	sub	sp, #12
   86170:	4690      	mov	r8, r2
   86172:	2b00      	cmp	r3, #0
   86174:	d06c      	beq.n	86250 <__ssprint_r+0xe8>
   86176:	6817      	ldr	r7, [r2, #0]
   86178:	4682      	mov	sl, r0
   8617a:	460c      	mov	r4, r1
   8617c:	6808      	ldr	r0, [r1, #0]
   8617e:	3708      	adds	r7, #8
   86180:	688d      	ldr	r5, [r1, #8]
   86182:	e042      	b.n	8620a <__ssprint_r+0xa2>
   86184:	89a3      	ldrh	r3, [r4, #12]
   86186:	f413 6f90 	tst.w	r3, #1152	; 0x480
   8618a:	d02d      	beq.n	861e8 <__ssprint_r+0x80>
   8618c:	e9d4 1504 	ldrd	r1, r5, [r4, #16]
   86190:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   86194:	eba0 0b01 	sub.w	fp, r0, r1
   86198:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   8619c:	1c70      	adds	r0, r6, #1
   8619e:	106d      	asrs	r5, r5, #1
   861a0:	4458      	add	r0, fp
   861a2:	42a8      	cmp	r0, r5
   861a4:	462a      	mov	r2, r5
   861a6:	bf84      	itt	hi
   861a8:	4605      	movhi	r5, r0
   861aa:	462a      	movhi	r2, r5
   861ac:	055b      	lsls	r3, r3, #21
   861ae:	d536      	bpl.n	8621e <__ssprint_r+0xb6>
   861b0:	4611      	mov	r1, r2
   861b2:	4650      	mov	r0, sl
   861b4:	f7fe fdb2 	bl	84d1c <_malloc_r>
   861b8:	2800      	cmp	r0, #0
   861ba:	d03a      	beq.n	86232 <__ssprint_r+0xca>
   861bc:	465a      	mov	r2, fp
   861be:	6921      	ldr	r1, [r4, #16]
   861c0:	9001      	str	r0, [sp, #4]
   861c2:	f7ff f8b5 	bl	85330 <memcpy>
   861c6:	89a2      	ldrh	r2, [r4, #12]
   861c8:	9b01      	ldr	r3, [sp, #4]
   861ca:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   861ce:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   861d2:	81a2      	strh	r2, [r4, #12]
   861d4:	eba5 020b 	sub.w	r2, r5, fp
   861d8:	eb03 000b 	add.w	r0, r3, fp
   861dc:	6165      	str	r5, [r4, #20]
   861de:	46b3      	mov	fp, r6
   861e0:	4635      	mov	r5, r6
   861e2:	6123      	str	r3, [r4, #16]
   861e4:	6020      	str	r0, [r4, #0]
   861e6:	60a2      	str	r2, [r4, #8]
   861e8:	465a      	mov	r2, fp
   861ea:	4649      	mov	r1, r9
   861ec:	f7ff f916 	bl	8541c <memmove>
   861f0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   861f4:	68a2      	ldr	r2, [r4, #8]
   861f6:	6820      	ldr	r0, [r4, #0]
   861f8:	1b55      	subs	r5, r2, r5
   861fa:	4458      	add	r0, fp
   861fc:	1b9e      	subs	r6, r3, r6
   861fe:	60a5      	str	r5, [r4, #8]
   86200:	6020      	str	r0, [r4, #0]
   86202:	f8c8 6008 	str.w	r6, [r8, #8]
   86206:	b31e      	cbz	r6, 86250 <__ssprint_r+0xe8>
   86208:	3708      	adds	r7, #8
   8620a:	e957 9602 	ldrd	r9, r6, [r7, #-8]
   8620e:	46ab      	mov	fp, r5
   86210:	2e00      	cmp	r6, #0
   86212:	d0f9      	beq.n	86208 <__ssprint_r+0xa0>
   86214:	42ae      	cmp	r6, r5
   86216:	d2b5      	bcs.n	86184 <__ssprint_r+0x1c>
   86218:	4635      	mov	r5, r6
   8621a:	46b3      	mov	fp, r6
   8621c:	e7e4      	b.n	861e8 <__ssprint_r+0x80>
   8621e:	4650      	mov	r0, sl
   86220:	f7ff fdd6 	bl	85dd0 <_realloc_r>
   86224:	4603      	mov	r3, r0
   86226:	2800      	cmp	r0, #0
   86228:	d1d4      	bne.n	861d4 <__ssprint_r+0x6c>
   8622a:	6921      	ldr	r1, [r4, #16]
   8622c:	4650      	mov	r0, sl
   8622e:	f7fe fc77 	bl	84b20 <_free_r>
   86232:	230c      	movs	r3, #12
   86234:	2200      	movs	r2, #0
   86236:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   8623a:	f8ca 3000 	str.w	r3, [sl]
   8623e:	89a3      	ldrh	r3, [r4, #12]
   86240:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86244:	81a3      	strh	r3, [r4, #12]
   86246:	e9c8 2201 	strd	r2, r2, [r8, #4]
   8624a:	b003      	add	sp, #12
   8624c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86250:	2000      	movs	r0, #0
   86252:	f8c8 0004 	str.w	r0, [r8, #4]
   86256:	b003      	add	sp, #12
   86258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008625c <_svfiprintf_r>:
   8625c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86260:	b0ab      	sub	sp, #172	; 0xac
   86262:	460c      	mov	r4, r1
   86264:	9102      	str	r1, [sp, #8]
   86266:	8989      	ldrh	r1, [r1, #12]
   86268:	4693      	mov	fp, r2
   8626a:	0609      	lsls	r1, r1, #24
   8626c:	e9cd 0305 	strd	r0, r3, [sp, #20]
   86270:	d503      	bpl.n	8627a <_svfiprintf_r+0x1e>
   86272:	6923      	ldr	r3, [r4, #16]
   86274:	2b00      	cmp	r3, #0
   86276:	f000 8493 	beq.w	86ba0 <_svfiprintf_r+0x944>
   8627a:	2300      	movs	r3, #0
   8627c:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
   86280:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86284:	9308      	str	r3, [sp, #32]
   86286:	9301      	str	r3, [sp, #4]
   86288:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
   8628c:	f89b 3000 	ldrb.w	r3, [fp]
   86290:	2b00      	cmp	r3, #0
   86292:	f000 80f0 	beq.w	86476 <_svfiprintf_r+0x21a>
   86296:	2b25      	cmp	r3, #37	; 0x25
   86298:	465c      	mov	r4, fp
   8629a:	d102      	bne.n	862a2 <_svfiprintf_r+0x46>
   8629c:	e01c      	b.n	862d8 <_svfiprintf_r+0x7c>
   8629e:	2b25      	cmp	r3, #37	; 0x25
   862a0:	d003      	beq.n	862aa <_svfiprintf_r+0x4e>
   862a2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   862a6:	2b00      	cmp	r3, #0
   862a8:	d1f9      	bne.n	8629e <_svfiprintf_r+0x42>
   862aa:	eba4 050b 	sub.w	r5, r4, fp
   862ae:	b17d      	cbz	r5, 862d0 <_svfiprintf_r+0x74>
   862b0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
   862b4:	3301      	adds	r3, #1
   862b6:	442a      	add	r2, r5
   862b8:	2b07      	cmp	r3, #7
   862ba:	e9ca b500 	strd	fp, r5, [sl]
   862be:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
   862c2:	f300 80cf 	bgt.w	86464 <_svfiprintf_r+0x208>
   862c6:	f10a 0a08 	add.w	sl, sl, #8
   862ca:	9b01      	ldr	r3, [sp, #4]
   862cc:	442b      	add	r3, r5
   862ce:	9301      	str	r3, [sp, #4]
   862d0:	7823      	ldrb	r3, [r4, #0]
   862d2:	2b00      	cmp	r3, #0
   862d4:	f000 80cf 	beq.w	86476 <_svfiprintf_r+0x21a>
   862d8:	2100      	movs	r1, #0
   862da:	f04f 0300 	mov.w	r3, #0
   862de:	4608      	mov	r0, r1
   862e0:	4688      	mov	r8, r1
   862e2:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
   862e6:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
   862ea:	7863      	ldrb	r3, [r4, #1]
   862ec:	9104      	str	r1, [sp, #16]
   862ee:	f104 0b01 	add.w	fp, r4, #1
   862f2:	f10b 0b01 	add.w	fp, fp, #1
   862f6:	f1a3 0220 	sub.w	r2, r3, #32
   862fa:	2a58      	cmp	r2, #88	; 0x58
   862fc:	f200 8343 	bhi.w	86986 <_svfiprintf_r+0x72a>
   86300:	e8df f012 	tbh	[pc, r2, lsl #1]
   86304:	03410117 	.word	0x03410117
   86308:	01120341 	.word	0x01120341
   8630c:	03410341 	.word	0x03410341
   86310:	03410341 	.word	0x03410341
   86314:	03410341 	.word	0x03410341
   86318:	01000105 	.word	0x01000105
   8631c:	00fb0341 	.word	0x00fb0341
   86320:	034100e1 	.word	0x034100e1
   86324:	00cd00dc 	.word	0x00cd00dc
   86328:	00cd00cd 	.word	0x00cd00cd
   8632c:	00cd00cd 	.word	0x00cd00cd
   86330:	00cd00cd 	.word	0x00cd00cd
   86334:	00cd00cd 	.word	0x00cd00cd
   86338:	03410341 	.word	0x03410341
   8633c:	03410341 	.word	0x03410341
   86340:	03410341 	.word	0x03410341
   86344:	03410341 	.word	0x03410341
   86348:	03410341 	.word	0x03410341
   8634c:	034102e3 	.word	0x034102e3
   86350:	03410341 	.word	0x03410341
   86354:	03410341 	.word	0x03410341
   86358:	03410341 	.word	0x03410341
   8635c:	03410341 	.word	0x03410341
   86360:	009f0341 	.word	0x009f0341
   86364:	03410341 	.word	0x03410341
   86368:	03410341 	.word	0x03410341
   8636c:	00590341 	.word	0x00590341
   86370:	03410341 	.word	0x03410341
   86374:	034102cb 	.word	0x034102cb
   86378:	03410341 	.word	0x03410341
   8637c:	03410341 	.word	0x03410341
   86380:	03410341 	.word	0x03410341
   86384:	03410341 	.word	0x03410341
   86388:	01ad0341 	.word	0x01ad0341
   8638c:	03410179 	.word	0x03410179
   86390:	03410341 	.word	0x03410341
   86394:	01790174 	.word	0x01790174
   86398:	03410341 	.word	0x03410341
   8639c:	03410167 	.word	0x03410167
   863a0:	00a10313 	.word	0x00a10313
   863a4:	016202fb 	.word	0x016202fb
   863a8:	01420341 	.word	0x01420341
   863ac:	005b0341 	.word	0x005b0341
   863b0:	03410341 	.word	0x03410341
   863b4:	011f      	.short	0x011f
   863b6:	f048 0810 	orr.w	r8, r8, #16
   863ba:	f018 0f20 	tst.w	r8, #32
   863be:	f000 82d5 	beq.w	8696c <_svfiprintf_r+0x710>
   863c2:	9c06      	ldr	r4, [sp, #24]
   863c4:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   863c8:	f104 0407 	add.w	r4, r4, #7
   863cc:	f024 0307 	bic.w	r3, r4, #7
   863d0:	f103 0208 	add.w	r2, r3, #8
   863d4:	9206      	str	r2, [sp, #24]
   863d6:	f04f 0200 	mov.w	r2, #0
   863da:	e9d3 6700 	ldrd	r6, r7, [r3]
   863de:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
   863e2:	f04f 0301 	mov.w	r3, #1
   863e6:	f040 829e 	bne.w	86926 <_svfiprintf_r+0x6ca>
   863ea:	2400      	movs	r4, #0
   863ec:	f8cd 8000 	str.w	r8, [sp]
   863f0:	2b01      	cmp	r3, #1
   863f2:	f000 836e 	beq.w	86ad2 <_svfiprintf_r+0x876>
   863f6:	2b02      	cmp	r3, #2
   863f8:	f000 82d5 	beq.w	869a6 <_svfiprintf_r+0x74a>
   863fc:	a91a      	add	r1, sp, #104	; 0x68
   863fe:	e000      	b.n	86402 <_svfiprintf_r+0x1a6>
   86400:	4629      	mov	r1, r5
   86402:	08f2      	lsrs	r2, r6, #3
   86404:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   86408:	08f8      	lsrs	r0, r7, #3
   8640a:	f006 0307 	and.w	r3, r6, #7
   8640e:	4607      	mov	r7, r0
   86410:	4616      	mov	r6, r2
   86412:	3330      	adds	r3, #48	; 0x30
   86414:	ea56 0207 	orrs.w	r2, r6, r7
   86418:	f801 3c01 	strb.w	r3, [r1, #-1]
   8641c:	f101 35ff 	add.w	r5, r1, #4294967295	; 0xffffffff
   86420:	d1ee      	bne.n	86400 <_svfiprintf_r+0x1a4>
   86422:	9a00      	ldr	r2, [sp, #0]
   86424:	07d2      	lsls	r2, r2, #31
   86426:	f140 82ce 	bpl.w	869c6 <_svfiprintf_r+0x76a>
   8642a:	2b30      	cmp	r3, #48	; 0x30
   8642c:	f000 82cb 	beq.w	869c6 <_svfiprintf_r+0x76a>
   86430:	2330      	movs	r3, #48	; 0x30
   86432:	3902      	subs	r1, #2
   86434:	f805 3c01 	strb.w	r3, [r5, #-1]
   86438:	ab1a      	add	r3, sp, #104	; 0x68
   8643a:	1a5b      	subs	r3, r3, r1
   8643c:	9303      	str	r3, [sp, #12]
   8643e:	460d      	mov	r5, r1
   86440:	e2c4      	b.n	869cc <_svfiprintf_r+0x770>
   86442:	f048 0810 	orr.w	r8, r8, #16
   86446:	f018 0320 	ands.w	r3, r8, #32
   8644a:	f000 8285 	beq.w	86958 <_svfiprintf_r+0x6fc>
   8644e:	9c06      	ldr	r4, [sp, #24]
   86450:	3407      	adds	r4, #7
   86452:	f024 0307 	bic.w	r3, r4, #7
   86456:	f103 0208 	add.w	r2, r3, #8
   8645a:	e9d3 6700 	ldrd	r6, r7, [r3]
   8645e:	9206      	str	r2, [sp, #24]
   86460:	2300      	movs	r3, #0
   86462:	e258      	b.n	86916 <_svfiprintf_r+0x6ba>
   86464:	aa0d      	add	r2, sp, #52	; 0x34
   86466:	9902      	ldr	r1, [sp, #8]
   86468:	9805      	ldr	r0, [sp, #20]
   8646a:	f7ff fe7d 	bl	86168 <__ssprint_r>
   8646e:	b948      	cbnz	r0, 86484 <_svfiprintf_r+0x228>
   86470:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86474:	e729      	b.n	862ca <_svfiprintf_r+0x6e>
   86476:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86478:	b123      	cbz	r3, 86484 <_svfiprintf_r+0x228>
   8647a:	9805      	ldr	r0, [sp, #20]
   8647c:	aa0d      	add	r2, sp, #52	; 0x34
   8647e:	9902      	ldr	r1, [sp, #8]
   86480:	f7ff fe72 	bl	86168 <__ssprint_r>
   86484:	9b02      	ldr	r3, [sp, #8]
   86486:	899b      	ldrh	r3, [r3, #12]
   86488:	f013 0f40 	tst.w	r3, #64	; 0x40
   8648c:	9b01      	ldr	r3, [sp, #4]
   8648e:	bf18      	it	ne
   86490:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
   86494:	9301      	str	r3, [sp, #4]
   86496:	9801      	ldr	r0, [sp, #4]
   86498:	b02b      	add	sp, #172	; 0xac
   8649a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8649e:	2400      	movs	r4, #0
   864a0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   864a4:	f81b 3b01 	ldrb.w	r3, [fp], #1
   864a8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   864ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
   864b0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   864b4:	2a09      	cmp	r2, #9
   864b6:	d9f5      	bls.n	864a4 <_svfiprintf_r+0x248>
   864b8:	9404      	str	r4, [sp, #16]
   864ba:	e71c      	b.n	862f6 <_svfiprintf_r+0x9a>
   864bc:	f048 0880 	orr.w	r8, r8, #128	; 0x80
   864c0:	f89b 3000 	ldrb.w	r3, [fp]
   864c4:	e715      	b.n	862f2 <_svfiprintf_r+0x96>
   864c6:	f89b 3000 	ldrb.w	r3, [fp]
   864ca:	f10b 0401 	add.w	r4, fp, #1
   864ce:	2b2a      	cmp	r3, #42	; 0x2a
   864d0:	f000 83cf 	beq.w	86c72 <_svfiprintf_r+0xa16>
   864d4:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   864d8:	2a09      	cmp	r2, #9
   864da:	f200 83b8 	bhi.w	86c4e <_svfiprintf_r+0x9f2>
   864de:	f04f 0900 	mov.w	r9, #0
   864e2:	f814 3b01 	ldrb.w	r3, [r4], #1
   864e6:	eb09 0989 	add.w	r9, r9, r9, lsl #2
   864ea:	eb02 0949 	add.w	r9, r2, r9, lsl #1
   864ee:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   864f2:	2a09      	cmp	r2, #9
   864f4:	d9f5      	bls.n	864e2 <_svfiprintf_r+0x286>
   864f6:	46a3      	mov	fp, r4
   864f8:	e6fd      	b.n	862f6 <_svfiprintf_r+0x9a>
   864fa:	f89b 3000 	ldrb.w	r3, [fp]
   864fe:	f048 0804 	orr.w	r8, r8, #4
   86502:	e6f6      	b.n	862f2 <_svfiprintf_r+0x96>
   86504:	f89b 3000 	ldrb.w	r3, [fp]
   86508:	2101      	movs	r1, #1
   8650a:	202b      	movs	r0, #43	; 0x2b
   8650c:	e6f1      	b.n	862f2 <_svfiprintf_r+0x96>
   8650e:	9b06      	ldr	r3, [sp, #24]
   86510:	681c      	ldr	r4, [r3, #0]
   86512:	1d1a      	adds	r2, r3, #4
   86514:	2c00      	cmp	r4, #0
   86516:	9404      	str	r4, [sp, #16]
   86518:	f89b 3000 	ldrb.w	r3, [fp]
   8651c:	9206      	str	r2, [sp, #24]
   8651e:	f6bf aee8 	bge.w	862f2 <_svfiprintf_r+0x96>
   86522:	4262      	negs	r2, r4
   86524:	9204      	str	r2, [sp, #16]
   86526:	e7ea      	b.n	864fe <_svfiprintf_r+0x2a2>
   86528:	f048 0801 	orr.w	r8, r8, #1
   8652c:	f89b 3000 	ldrb.w	r3, [fp]
   86530:	e6df      	b.n	862f2 <_svfiprintf_r+0x96>
   86532:	f89b 3000 	ldrb.w	r3, [fp]
   86536:	2800      	cmp	r0, #0
   86538:	f47f aedb 	bne.w	862f2 <_svfiprintf_r+0x96>
   8653c:	2101      	movs	r1, #1
   8653e:	2020      	movs	r0, #32
   86540:	e6d7      	b.n	862f2 <_svfiprintf_r+0x96>
   86542:	2900      	cmp	r1, #0
   86544:	f040 83b7 	bne.w	86cb6 <_svfiprintf_r+0xa5a>
   86548:	4ab7      	ldr	r2, [pc, #732]	; (86828 <_svfiprintf_r+0x5cc>)
   8654a:	f018 0f20 	tst.w	r8, #32
   8654e:	9208      	str	r2, [sp, #32]
   86550:	f000 81ac 	beq.w	868ac <_svfiprintf_r+0x650>
   86554:	9c06      	ldr	r4, [sp, #24]
   86556:	3407      	adds	r4, #7
   86558:	f024 0207 	bic.w	r2, r4, #7
   8655c:	f102 0108 	add.w	r1, r2, #8
   86560:	9106      	str	r1, [sp, #24]
   86562:	e9d2 6700 	ldrd	r6, r7, [r2]
   86566:	f018 0f01 	tst.w	r8, #1
   8656a:	f000 820a 	beq.w	86982 <_svfiprintf_r+0x726>
   8656e:	ea56 0207 	orrs.w	r2, r6, r7
   86572:	f000 8206 	beq.w	86982 <_svfiprintf_r+0x726>
   86576:	2230      	movs	r2, #48	; 0x30
   86578:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
   8657c:	f048 0802 	orr.w	r8, r8, #2
   86580:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
   86584:	2302      	movs	r3, #2
   86586:	e1c6      	b.n	86916 <_svfiprintf_r+0x6ba>
   86588:	f04f 0200 	mov.w	r2, #0
   8658c:	9b06      	ldr	r3, [sp, #24]
   8658e:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
   86592:	681d      	ldr	r5, [r3, #0]
   86594:	1d1c      	adds	r4, r3, #4
   86596:	2d00      	cmp	r5, #0
   86598:	f000 834d 	beq.w	86c36 <_svfiprintf_r+0x9da>
   8659c:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   865a0:	f000 830b 	beq.w	86bba <_svfiprintf_r+0x95e>
   865a4:	464a      	mov	r2, r9
   865a6:	2100      	movs	r1, #0
   865a8:	4628      	mov	r0, r5
   865aa:	f7fe fe7b 	bl	852a4 <memchr>
   865ae:	2800      	cmp	r0, #0
   865b0:	f000 8352 	beq.w	86c58 <_svfiprintf_r+0x9fc>
   865b4:	1b43      	subs	r3, r0, r5
   865b6:	9406      	str	r4, [sp, #24]
   865b8:	9303      	str	r3, [sp, #12]
   865ba:	f8cd 8000 	str.w	r8, [sp]
   865be:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   865c2:	f04f 0900 	mov.w	r9, #0
   865c6:	e201      	b.n	869cc <_svfiprintf_r+0x770>
   865c8:	f048 0820 	orr.w	r8, r8, #32
   865cc:	f89b 3000 	ldrb.w	r3, [fp]
   865d0:	e68f      	b.n	862f2 <_svfiprintf_r+0x96>
   865d2:	f89b 3000 	ldrb.w	r3, [fp]
   865d6:	2b6c      	cmp	r3, #108	; 0x6c
   865d8:	bf03      	ittte	eq
   865da:	f89b 3001 	ldrbeq.w	r3, [fp, #1]
   865de:	f048 0820 	orreq.w	r8, r8, #32
   865e2:	f10b 0b01 	addeq.w	fp, fp, #1
   865e6:	f048 0810 	orrne.w	r8, r8, #16
   865ea:	e682      	b.n	862f2 <_svfiprintf_r+0x96>
   865ec:	f048 0840 	orr.w	r8, r8, #64	; 0x40
   865f0:	f89b 3000 	ldrb.w	r3, [fp]
   865f4:	e67d      	b.n	862f2 <_svfiprintf_r+0x96>
   865f6:	2900      	cmp	r1, #0
   865f8:	f040 8357 	bne.w	86caa <_svfiprintf_r+0xa4e>
   865fc:	f018 0f20 	tst.w	r8, #32
   86600:	f000 816c 	beq.w	868dc <_svfiprintf_r+0x680>
   86604:	9c06      	ldr	r4, [sp, #24]
   86606:	3407      	adds	r4, #7
   86608:	f024 0307 	bic.w	r3, r4, #7
   8660c:	f103 0208 	add.w	r2, r3, #8
   86610:	9206      	str	r2, [sp, #24]
   86612:	e9d3 6700 	ldrd	r6, r7, [r3]
   86616:	2e00      	cmp	r6, #0
   86618:	f177 0300 	sbcs.w	r3, r7, #0
   8661c:	f2c0 827f 	blt.w	86b1e <_svfiprintf_r+0x8c2>
   86620:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   86624:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   86628:	f000 8251 	beq.w	86ace <_svfiprintf_r+0x872>
   8662c:	2301      	movs	r3, #1
   8662e:	f028 0280 	bic.w	r2, r8, #128	; 0x80
   86632:	9200      	str	r2, [sp, #0]
   86634:	ea56 0207 	orrs.w	r2, r6, r7
   86638:	f47f aeda 	bne.w	863f0 <_svfiprintf_r+0x194>
   8663c:	f1b9 0f00 	cmp.w	r9, #0
   86640:	f040 82cc 	bne.w	86bdc <_svfiprintf_r+0x980>
   86644:	2b00      	cmp	r3, #0
   86646:	f040 8260 	bne.w	86b0a <_svfiprintf_r+0x8ae>
   8664a:	f018 0301 	ands.w	r3, r8, #1
   8664e:	9303      	str	r3, [sp, #12]
   86650:	f000 8287 	beq.w	86b62 <_svfiprintf_r+0x906>
   86654:	2330      	movs	r3, #48	; 0x30
   86656:	ad2a      	add	r5, sp, #168	; 0xa8
   86658:	f805 3d41 	strb.w	r3, [r5, #-65]!
   8665c:	e1b6      	b.n	869cc <_svfiprintf_r+0x770>
   8665e:	2601      	movs	r6, #1
   86660:	f04f 0100 	mov.w	r1, #0
   86664:	9a06      	ldr	r2, [sp, #24]
   86666:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
   8666a:	6813      	ldr	r3, [r2, #0]
   8666c:	9603      	str	r6, [sp, #12]
   8666e:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
   86672:	1d13      	adds	r3, r2, #4
   86674:	9306      	str	r3, [sp, #24]
   86676:	ad10      	add	r5, sp, #64	; 0x40
   86678:	f04f 0900 	mov.w	r9, #0
   8667c:	f8cd 8000 	str.w	r8, [sp]
   86680:	9b00      	ldr	r3, [sp, #0]
   86682:	9800      	ldr	r0, [sp, #0]
   86684:	f013 0302 	ands.w	r3, r3, #2
   86688:	bf18      	it	ne
   8668a:	3602      	addne	r6, #2
   8668c:	f010 0084 	ands.w	r0, r0, #132	; 0x84
   86690:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   86694:	9007      	str	r0, [sp, #28]
   86696:	d13c      	bne.n	86712 <_svfiprintf_r+0x4b6>
   86698:	9804      	ldr	r0, [sp, #16]
   8669a:	1b84      	subs	r4, r0, r6
   8669c:	2c00      	cmp	r4, #0
   8669e:	dd38      	ble.n	86712 <_svfiprintf_r+0x4b6>
   866a0:	2c10      	cmp	r4, #16
   866a2:	f340 82d0 	ble.w	86c46 <_svfiprintf_r+0x9ea>
   866a6:	4f61      	ldr	r7, [pc, #388]	; (8682c <_svfiprintf_r+0x5d0>)
   866a8:	4650      	mov	r0, sl
   866aa:	46b2      	mov	sl, r6
   866ac:	461e      	mov	r6, r3
   866ae:	463b      	mov	r3, r7
   866b0:	f04f 0810 	mov.w	r8, #16
   866b4:	462f      	mov	r7, r5
   866b6:	461d      	mov	r5, r3
   866b8:	e004      	b.n	866c4 <_svfiprintf_r+0x468>
   866ba:	3c10      	subs	r4, #16
   866bc:	2c10      	cmp	r4, #16
   866be:	f100 0008 	add.w	r0, r0, #8
   866c2:	dd15      	ble.n	866f0 <_svfiprintf_r+0x494>
   866c4:	3101      	adds	r1, #1
   866c6:	3210      	adds	r2, #16
   866c8:	2907      	cmp	r1, #7
   866ca:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   866ce:	e9c0 5800 	strd	r5, r8, [r0]
   866d2:	ddf2      	ble.n	866ba <_svfiprintf_r+0x45e>
   866d4:	aa0d      	add	r2, sp, #52	; 0x34
   866d6:	9902      	ldr	r1, [sp, #8]
   866d8:	9805      	ldr	r0, [sp, #20]
   866da:	f7ff fd45 	bl	86168 <__ssprint_r>
   866de:	2800      	cmp	r0, #0
   866e0:	f47f aed0 	bne.w	86484 <_svfiprintf_r+0x228>
   866e4:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   866e8:	3c10      	subs	r4, #16
   866ea:	2c10      	cmp	r4, #16
   866ec:	a81a      	add	r0, sp, #104	; 0x68
   866ee:	dce9      	bgt.n	866c4 <_svfiprintf_r+0x468>
   866f0:	4633      	mov	r3, r6
   866f2:	4656      	mov	r6, sl
   866f4:	4682      	mov	sl, r0
   866f6:	4628      	mov	r0, r5
   866f8:	463d      	mov	r5, r7
   866fa:	4607      	mov	r7, r0
   866fc:	3101      	adds	r1, #1
   866fe:	4422      	add	r2, r4
   86700:	2907      	cmp	r1, #7
   86702:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   86706:	e9ca 7400 	strd	r7, r4, [sl]
   8670a:	f300 8211 	bgt.w	86b30 <_svfiprintf_r+0x8d4>
   8670e:	f10a 0a08 	add.w	sl, sl, #8
   86712:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   86716:	f101 0c01 	add.w	ip, r1, #1
   8671a:	f10a 0008 	add.w	r0, sl, #8
   8671e:	b194      	cbz	r4, 86746 <_svfiprintf_r+0x4ea>
   86720:	2701      	movs	r7, #1
   86722:	f10d 042f 	add.w	r4, sp, #47	; 0x2f
   86726:	443a      	add	r2, r7
   86728:	f1bc 0f07 	cmp.w	ip, #7
   8672c:	e9cd c20e 	strd	ip, r2, [sp, #56]	; 0x38
   86730:	e9ca 4700 	strd	r4, r7, [sl]
   86734:	f300 81a9 	bgt.w	86a8a <_svfiprintf_r+0x82e>
   86738:	1c8f      	adds	r7, r1, #2
   8673a:	f10a 0410 	add.w	r4, sl, #16
   8673e:	4661      	mov	r1, ip
   86740:	4682      	mov	sl, r0
   86742:	46bc      	mov	ip, r7
   86744:	4620      	mov	r0, r4
   86746:	b17b      	cbz	r3, 86768 <_svfiprintf_r+0x50c>
   86748:	2102      	movs	r1, #2
   8674a:	ab0c      	add	r3, sp, #48	; 0x30
   8674c:	440a      	add	r2, r1
   8674e:	f1bc 0f07 	cmp.w	ip, #7
   86752:	e9cd c20e 	strd	ip, r2, [sp, #56]	; 0x38
   86756:	e9ca 3100 	strd	r3, r1, [sl]
   8675a:	f300 81a8 	bgt.w	86aae <_svfiprintf_r+0x852>
   8675e:	4661      	mov	r1, ip
   86760:	4682      	mov	sl, r0
   86762:	f10c 0c01 	add.w	ip, ip, #1
   86766:	3008      	adds	r0, #8
   86768:	9b07      	ldr	r3, [sp, #28]
   8676a:	2b80      	cmp	r3, #128	; 0x80
   8676c:	f000 8138 	beq.w	869e0 <_svfiprintf_r+0x784>
   86770:	9b03      	ldr	r3, [sp, #12]
   86772:	eba9 0703 	sub.w	r7, r9, r3
   86776:	2f00      	cmp	r7, #0
   86778:	dd39      	ble.n	867ee <_svfiprintf_r+0x592>
   8677a:	2f10      	cmp	r7, #16
   8677c:	f340 8258 	ble.w	86c30 <_svfiprintf_r+0x9d4>
   86780:	4653      	mov	r3, sl
   86782:	f04f 0810 	mov.w	r8, #16
   86786:	4c2a      	ldr	r4, [pc, #168]	; (86830 <_svfiprintf_r+0x5d4>)
   86788:	f8dd 9014 	ldr.w	r9, [sp, #20]
   8678c:	f8dd a008 	ldr.w	sl, [sp, #8]
   86790:	e004      	b.n	8679c <_svfiprintf_r+0x540>
   86792:	3f10      	subs	r7, #16
   86794:	2f10      	cmp	r7, #16
   86796:	f103 0308 	add.w	r3, r3, #8
   8679a:	dd15      	ble.n	867c8 <_svfiprintf_r+0x56c>
   8679c:	3101      	adds	r1, #1
   8679e:	3210      	adds	r2, #16
   867a0:	2907      	cmp	r1, #7
   867a2:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   867a6:	e9c3 4800 	strd	r4, r8, [r3]
   867aa:	ddf2      	ble.n	86792 <_svfiprintf_r+0x536>
   867ac:	aa0d      	add	r2, sp, #52	; 0x34
   867ae:	4651      	mov	r1, sl
   867b0:	4648      	mov	r0, r9
   867b2:	f7ff fcd9 	bl	86168 <__ssprint_r>
   867b6:	2800      	cmp	r0, #0
   867b8:	f47f ae64 	bne.w	86484 <_svfiprintf_r+0x228>
   867bc:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   867c0:	3f10      	subs	r7, #16
   867c2:	2f10      	cmp	r7, #16
   867c4:	ab1a      	add	r3, sp, #104	; 0x68
   867c6:	dce9      	bgt.n	8679c <_svfiprintf_r+0x540>
   867c8:	469a      	mov	sl, r3
   867ca:	f101 0c01 	add.w	ip, r1, #1
   867ce:	3308      	adds	r3, #8
   867d0:	443a      	add	r2, r7
   867d2:	f1bc 0f07 	cmp.w	ip, #7
   867d6:	920f      	str	r2, [sp, #60]	; 0x3c
   867d8:	e9ca 4700 	strd	r4, r7, [sl]
   867dc:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
   867e0:	f300 8183 	bgt.w	86aea <_svfiprintf_r+0x88e>
   867e4:	469a      	mov	sl, r3
   867e6:	f10c 0c01 	add.w	ip, ip, #1
   867ea:	f103 0008 	add.w	r0, r3, #8
   867ee:	9b03      	ldr	r3, [sp, #12]
   867f0:	f1bc 0f07 	cmp.w	ip, #7
   867f4:	441a      	add	r2, r3
   867f6:	920f      	str	r2, [sp, #60]	; 0x3c
   867f8:	e9ca 5300 	strd	r5, r3, [sl]
   867fc:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
   86800:	f300 812f 	bgt.w	86a62 <_svfiprintf_r+0x806>
   86804:	9b00      	ldr	r3, [sp, #0]
   86806:	075b      	lsls	r3, r3, #29
   86808:	d538      	bpl.n	8687c <_svfiprintf_r+0x620>
   8680a:	9b04      	ldr	r3, [sp, #16]
   8680c:	1b9c      	subs	r4, r3, r6
   8680e:	2c00      	cmp	r4, #0
   86810:	dd34      	ble.n	8687c <_svfiprintf_r+0x620>
   86812:	2c10      	cmp	r4, #16
   86814:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86816:	f340 8218 	ble.w	86c4a <_svfiprintf_r+0x9ee>
   8681a:	2510      	movs	r5, #16
   8681c:	4f03      	ldr	r7, [pc, #12]	; (8682c <_svfiprintf_r+0x5d0>)
   8681e:	f8dd 8014 	ldr.w	r8, [sp, #20]
   86822:	f8dd 9008 	ldr.w	r9, [sp, #8]
   86826:	e00a      	b.n	8683e <_svfiprintf_r+0x5e2>
   86828:	000876fc 	.word	0x000876fc
   8682c:	00087868 	.word	0x00087868
   86830:	00087878 	.word	0x00087878
   86834:	3c10      	subs	r4, #16
   86836:	2c10      	cmp	r4, #16
   86838:	f100 0008 	add.w	r0, r0, #8
   8683c:	dd15      	ble.n	8686a <_svfiprintf_r+0x60e>
   8683e:	3301      	adds	r3, #1
   86840:	3210      	adds	r2, #16
   86842:	2b07      	cmp	r3, #7
   86844:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
   86848:	e9c0 7500 	strd	r7, r5, [r0]
   8684c:	ddf2      	ble.n	86834 <_svfiprintf_r+0x5d8>
   8684e:	aa0d      	add	r2, sp, #52	; 0x34
   86850:	4649      	mov	r1, r9
   86852:	4640      	mov	r0, r8
   86854:	f7ff fc88 	bl	86168 <__ssprint_r>
   86858:	2800      	cmp	r0, #0
   8685a:	f47f ae13 	bne.w	86484 <_svfiprintf_r+0x228>
   8685e:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
   86862:	3c10      	subs	r4, #16
   86864:	2c10      	cmp	r4, #16
   86866:	a81a      	add	r0, sp, #104	; 0x68
   86868:	dce9      	bgt.n	8683e <_svfiprintf_r+0x5e2>
   8686a:	3301      	adds	r3, #1
   8686c:	4422      	add	r2, r4
   8686e:	2b07      	cmp	r3, #7
   86870:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
   86874:	e9c0 7400 	strd	r7, r4, [r0]
   86878:	f300 8169 	bgt.w	86b4e <_svfiprintf_r+0x8f2>
   8687c:	9b01      	ldr	r3, [sp, #4]
   8687e:	9904      	ldr	r1, [sp, #16]
   86880:	42b1      	cmp	r1, r6
   86882:	bfac      	ite	ge
   86884:	185b      	addge	r3, r3, r1
   86886:	199b      	addlt	r3, r3, r6
   86888:	9301      	str	r3, [sp, #4]
   8688a:	2a00      	cmp	r2, #0
   8688c:	f040 80f4 	bne.w	86a78 <_svfiprintf_r+0x81c>
   86890:	2300      	movs	r3, #0
   86892:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86896:	930e      	str	r3, [sp, #56]	; 0x38
   86898:	e4f8      	b.n	8628c <_svfiprintf_r+0x30>
   8689a:	2900      	cmp	r1, #0
   8689c:	f040 8208 	bne.w	86cb0 <_svfiprintf_r+0xa54>
   868a0:	4abc      	ldr	r2, [pc, #752]	; (86b94 <_svfiprintf_r+0x938>)
   868a2:	f018 0f20 	tst.w	r8, #32
   868a6:	9208      	str	r2, [sp, #32]
   868a8:	f47f ae54 	bne.w	86554 <_svfiprintf_r+0x2f8>
   868ac:	9a06      	ldr	r2, [sp, #24]
   868ae:	f018 0f10 	tst.w	r8, #16
   868b2:	f852 6b04 	ldr.w	r6, [r2], #4
   868b6:	9206      	str	r2, [sp, #24]
   868b8:	f040 8138 	bne.w	86b2c <_svfiprintf_r+0x8d0>
   868bc:	f018 0f40 	tst.w	r8, #64	; 0x40
   868c0:	f000 8134 	beq.w	86b2c <_svfiprintf_r+0x8d0>
   868c4:	b2b6      	uxth	r6, r6
   868c6:	2700      	movs	r7, #0
   868c8:	e64d      	b.n	86566 <_svfiprintf_r+0x30a>
   868ca:	2900      	cmp	r1, #0
   868cc:	f040 81e4 	bne.w	86c98 <_svfiprintf_r+0xa3c>
   868d0:	f048 0810 	orr.w	r8, r8, #16
   868d4:	f018 0f20 	tst.w	r8, #32
   868d8:	f47f ae94 	bne.w	86604 <_svfiprintf_r+0x3a8>
   868dc:	9b06      	ldr	r3, [sp, #24]
   868de:	f018 0f10 	tst.w	r8, #16
   868e2:	f853 6b04 	ldr.w	r6, [r3], #4
   868e6:	9306      	str	r3, [sp, #24]
   868e8:	f040 8113 	bne.w	86b12 <_svfiprintf_r+0x8b6>
   868ec:	f018 0f40 	tst.w	r8, #64	; 0x40
   868f0:	f000 810f 	beq.w	86b12 <_svfiprintf_r+0x8b6>
   868f4:	b236      	sxth	r6, r6
   868f6:	17f7      	asrs	r7, r6, #31
   868f8:	e68d      	b.n	86616 <_svfiprintf_r+0x3ba>
   868fa:	f647 0330 	movw	r3, #30768	; 0x7830
   868fe:	9a06      	ldr	r2, [sp, #24]
   86900:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
   86904:	1d13      	adds	r3, r2, #4
   86906:	9306      	str	r3, [sp, #24]
   86908:	4ba3      	ldr	r3, [pc, #652]	; (86b98 <_svfiprintf_r+0x93c>)
   8690a:	2700      	movs	r7, #0
   8690c:	9308      	str	r3, [sp, #32]
   8690e:	2302      	movs	r3, #2
   86910:	6816      	ldr	r6, [r2, #0]
   86912:	f048 0802 	orr.w	r8, r8, #2
   86916:	f04f 0200 	mov.w	r2, #0
   8691a:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   8691e:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
   86922:	f43f ad62 	beq.w	863ea <_svfiprintf_r+0x18e>
   86926:	2400      	movs	r4, #0
   86928:	e681      	b.n	8662e <_svfiprintf_r+0x3d2>
   8692a:	2900      	cmp	r1, #0
   8692c:	f040 81b7 	bne.w	86c9e <_svfiprintf_r+0xa42>
   86930:	9a06      	ldr	r2, [sp, #24]
   86932:	f018 0f20 	tst.w	r8, #32
   86936:	f102 0304 	add.w	r3, r2, #4
   8693a:	6812      	ldr	r2, [r2, #0]
   8693c:	f040 8113 	bne.w	86b66 <_svfiprintf_r+0x90a>
   86940:	f018 0f10 	tst.w	r8, #16
   86944:	f040 8145 	bne.w	86bd2 <_svfiprintf_r+0x976>
   86948:	f018 0f40 	tst.w	r8, #64	; 0x40
   8694c:	f000 8141 	beq.w	86bd2 <_svfiprintf_r+0x976>
   86950:	9901      	ldr	r1, [sp, #4]
   86952:	9306      	str	r3, [sp, #24]
   86954:	8011      	strh	r1, [r2, #0]
   86956:	e499      	b.n	8628c <_svfiprintf_r+0x30>
   86958:	9a06      	ldr	r2, [sp, #24]
   8695a:	f852 6b04 	ldr.w	r6, [r2], #4
   8695e:	9206      	str	r2, [sp, #24]
   86960:	f018 0210 	ands.w	r2, r8, #16
   86964:	f000 810f 	beq.w	86b86 <_svfiprintf_r+0x92a>
   86968:	2700      	movs	r7, #0
   8696a:	e7d4      	b.n	86916 <_svfiprintf_r+0x6ba>
   8696c:	9b06      	ldr	r3, [sp, #24]
   8696e:	f018 0f10 	tst.w	r8, #16
   86972:	f853 6b04 	ldr.w	r6, [r3], #4
   86976:	9306      	str	r3, [sp, #24]
   86978:	f000 80fe 	beq.w	86b78 <_svfiprintf_r+0x91c>
   8697c:	2700      	movs	r7, #0
   8697e:	2301      	movs	r3, #1
   86980:	e7c9      	b.n	86916 <_svfiprintf_r+0x6ba>
   86982:	2302      	movs	r3, #2
   86984:	e7c7      	b.n	86916 <_svfiprintf_r+0x6ba>
   86986:	2900      	cmp	r1, #0
   86988:	f040 818c 	bne.w	86ca4 <_svfiprintf_r+0xa48>
   8698c:	2b00      	cmp	r3, #0
   8698e:	f43f ad72 	beq.w	86476 <_svfiprintf_r+0x21a>
   86992:	2601      	movs	r6, #1
   86994:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
   86998:	f04f 0300 	mov.w	r3, #0
   8699c:	9603      	str	r6, [sp, #12]
   8699e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
   869a2:	ad10      	add	r5, sp, #64	; 0x40
   869a4:	e668      	b.n	86678 <_svfiprintf_r+0x41c>
   869a6:	9808      	ldr	r0, [sp, #32]
   869a8:	ad1a      	add	r5, sp, #104	; 0x68
   869aa:	0933      	lsrs	r3, r6, #4
   869ac:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   869b0:	0939      	lsrs	r1, r7, #4
   869b2:	f006 020f 	and.w	r2, r6, #15
   869b6:	460f      	mov	r7, r1
   869b8:	461e      	mov	r6, r3
   869ba:	5c83      	ldrb	r3, [r0, r2]
   869bc:	f805 3d01 	strb.w	r3, [r5, #-1]!
   869c0:	ea56 0307 	orrs.w	r3, r6, r7
   869c4:	d1f1      	bne.n	869aa <_svfiprintf_r+0x74e>
   869c6:	ab1a      	add	r3, sp, #104	; 0x68
   869c8:	1b5b      	subs	r3, r3, r5
   869ca:	9303      	str	r3, [sp, #12]
   869cc:	9b03      	ldr	r3, [sp, #12]
   869ce:	454b      	cmp	r3, r9
   869d0:	bfb8      	it	lt
   869d2:	464b      	movlt	r3, r9
   869d4:	461e      	mov	r6, r3
   869d6:	2c00      	cmp	r4, #0
   869d8:	f43f ae52 	beq.w	86680 <_svfiprintf_r+0x424>
   869dc:	3601      	adds	r6, #1
   869de:	e64f      	b.n	86680 <_svfiprintf_r+0x424>
   869e0:	9b04      	ldr	r3, [sp, #16]
   869e2:	1b9f      	subs	r7, r3, r6
   869e4:	2f00      	cmp	r7, #0
   869e6:	f77f aec3 	ble.w	86770 <_svfiprintf_r+0x514>
   869ea:	2f10      	cmp	r7, #16
   869ec:	f340 813d 	ble.w	86c6a <_svfiprintf_r+0xa0e>
   869f0:	4c6a      	ldr	r4, [pc, #424]	; (86b9c <_svfiprintf_r+0x940>)
   869f2:	4650      	mov	r0, sl
   869f4:	f04f 0810 	mov.w	r8, #16
   869f8:	46b2      	mov	sl, r6
   869fa:	462e      	mov	r6, r5
   869fc:	4625      	mov	r5, r4
   869fe:	9c05      	ldr	r4, [sp, #20]
   86a00:	e004      	b.n	86a0c <_svfiprintf_r+0x7b0>
   86a02:	3f10      	subs	r7, #16
   86a04:	2f10      	cmp	r7, #16
   86a06:	f100 0008 	add.w	r0, r0, #8
   86a0a:	dd15      	ble.n	86a38 <_svfiprintf_r+0x7dc>
   86a0c:	3101      	adds	r1, #1
   86a0e:	3210      	adds	r2, #16
   86a10:	2907      	cmp	r1, #7
   86a12:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   86a16:	e9c0 5800 	strd	r5, r8, [r0]
   86a1a:	ddf2      	ble.n	86a02 <_svfiprintf_r+0x7a6>
   86a1c:	aa0d      	add	r2, sp, #52	; 0x34
   86a1e:	9902      	ldr	r1, [sp, #8]
   86a20:	4620      	mov	r0, r4
   86a22:	f7ff fba1 	bl	86168 <__ssprint_r>
   86a26:	2800      	cmp	r0, #0
   86a28:	f47f ad2c 	bne.w	86484 <_svfiprintf_r+0x228>
   86a2c:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   86a30:	3f10      	subs	r7, #16
   86a32:	2f10      	cmp	r7, #16
   86a34:	a81a      	add	r0, sp, #104	; 0x68
   86a36:	dce9      	bgt.n	86a0c <_svfiprintf_r+0x7b0>
   86a38:	462c      	mov	r4, r5
   86a3a:	4635      	mov	r5, r6
   86a3c:	4656      	mov	r6, sl
   86a3e:	4682      	mov	sl, r0
   86a40:	3101      	adds	r1, #1
   86a42:	f100 0308 	add.w	r3, r0, #8
   86a46:	443a      	add	r2, r7
   86a48:	2907      	cmp	r1, #7
   86a4a:	920f      	str	r2, [sp, #60]	; 0x3c
   86a4c:	e9ca 4700 	strd	r4, r7, [sl]
   86a50:	910e      	str	r1, [sp, #56]	; 0x38
   86a52:	f300 80dd 	bgt.w	86c10 <_svfiprintf_r+0x9b4>
   86a56:	f101 0c01 	add.w	ip, r1, #1
   86a5a:	f103 0008 	add.w	r0, r3, #8
   86a5e:	469a      	mov	sl, r3
   86a60:	e686      	b.n	86770 <_svfiprintf_r+0x514>
   86a62:	aa0d      	add	r2, sp, #52	; 0x34
   86a64:	9902      	ldr	r1, [sp, #8]
   86a66:	9805      	ldr	r0, [sp, #20]
   86a68:	f7ff fb7e 	bl	86168 <__ssprint_r>
   86a6c:	2800      	cmp	r0, #0
   86a6e:	f47f ad09 	bne.w	86484 <_svfiprintf_r+0x228>
   86a72:	a81a      	add	r0, sp, #104	; 0x68
   86a74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   86a76:	e6c5      	b.n	86804 <_svfiprintf_r+0x5a8>
   86a78:	aa0d      	add	r2, sp, #52	; 0x34
   86a7a:	9902      	ldr	r1, [sp, #8]
   86a7c:	9805      	ldr	r0, [sp, #20]
   86a7e:	f7ff fb73 	bl	86168 <__ssprint_r>
   86a82:	2800      	cmp	r0, #0
   86a84:	f43f af04 	beq.w	86890 <_svfiprintf_r+0x634>
   86a88:	e4fc      	b.n	86484 <_svfiprintf_r+0x228>
   86a8a:	aa0d      	add	r2, sp, #52	; 0x34
   86a8c:	9902      	ldr	r1, [sp, #8]
   86a8e:	9805      	ldr	r0, [sp, #20]
   86a90:	9309      	str	r3, [sp, #36]	; 0x24
   86a92:	f7ff fb69 	bl	86168 <__ssprint_r>
   86a96:	2800      	cmp	r0, #0
   86a98:	f47f acf4 	bne.w	86484 <_svfiprintf_r+0x228>
   86a9c:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   86aa0:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86aa4:	f101 0c01 	add.w	ip, r1, #1
   86aa8:	a81c      	add	r0, sp, #112	; 0x70
   86aaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86aac:	e64b      	b.n	86746 <_svfiprintf_r+0x4ea>
   86aae:	aa0d      	add	r2, sp, #52	; 0x34
   86ab0:	9902      	ldr	r1, [sp, #8]
   86ab2:	9805      	ldr	r0, [sp, #20]
   86ab4:	f7ff fb58 	bl	86168 <__ssprint_r>
   86ab8:	2800      	cmp	r0, #0
   86aba:	f47f ace3 	bne.w	86484 <_svfiprintf_r+0x228>
   86abe:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   86ac2:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86ac6:	f101 0c01 	add.w	ip, r1, #1
   86aca:	a81c      	add	r0, sp, #112	; 0x70
   86acc:	e64c      	b.n	86768 <_svfiprintf_r+0x50c>
   86ace:	f8cd 8000 	str.w	r8, [sp]
   86ad2:	2f00      	cmp	r7, #0
   86ad4:	bf08      	it	eq
   86ad6:	2e0a      	cmpeq	r6, #10
   86ad8:	f080 8084 	bcs.w	86be4 <_svfiprintf_r+0x988>
   86adc:	2301      	movs	r3, #1
   86ade:	ad2a      	add	r5, sp, #168	; 0xa8
   86ae0:	3630      	adds	r6, #48	; 0x30
   86ae2:	f805 6d41 	strb.w	r6, [r5, #-65]!
   86ae6:	9303      	str	r3, [sp, #12]
   86ae8:	e770      	b.n	869cc <_svfiprintf_r+0x770>
   86aea:	aa0d      	add	r2, sp, #52	; 0x34
   86aec:	9902      	ldr	r1, [sp, #8]
   86aee:	9805      	ldr	r0, [sp, #20]
   86af0:	f7ff fb3a 	bl	86168 <__ssprint_r>
   86af4:	2800      	cmp	r0, #0
   86af6:	f47f acc5 	bne.w	86484 <_svfiprintf_r+0x228>
   86afa:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
   86afe:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86b02:	f103 0c01 	add.w	ip, r3, #1
   86b06:	a81c      	add	r0, sp, #112	; 0x70
   86b08:	e671      	b.n	867ee <_svfiprintf_r+0x592>
   86b0a:	f8cd 900c 	str.w	r9, [sp, #12]
   86b0e:	ad1a      	add	r5, sp, #104	; 0x68
   86b10:	e75c      	b.n	869cc <_svfiprintf_r+0x770>
   86b12:	17f7      	asrs	r7, r6, #31
   86b14:	2e00      	cmp	r6, #0
   86b16:	f177 0300 	sbcs.w	r3, r7, #0
   86b1a:	f6bf ad81 	bge.w	86620 <_svfiprintf_r+0x3c4>
   86b1e:	242d      	movs	r4, #45	; 0x2d
   86b20:	4276      	negs	r6, r6
   86b22:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   86b26:	f88d 402f 	strb.w	r4, [sp, #47]	; 0x2f
   86b2a:	e57b      	b.n	86624 <_svfiprintf_r+0x3c8>
   86b2c:	2700      	movs	r7, #0
   86b2e:	e51a      	b.n	86566 <_svfiprintf_r+0x30a>
   86b30:	aa0d      	add	r2, sp, #52	; 0x34
   86b32:	9902      	ldr	r1, [sp, #8]
   86b34:	9805      	ldr	r0, [sp, #20]
   86b36:	9309      	str	r3, [sp, #36]	; 0x24
   86b38:	f7ff fb16 	bl	86168 <__ssprint_r>
   86b3c:	2800      	cmp	r0, #0
   86b3e:	f47f aca1 	bne.w	86484 <_svfiprintf_r+0x228>
   86b42:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   86b46:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86b4c:	e5e1      	b.n	86712 <_svfiprintf_r+0x4b6>
   86b4e:	aa0d      	add	r2, sp, #52	; 0x34
   86b50:	9902      	ldr	r1, [sp, #8]
   86b52:	9805      	ldr	r0, [sp, #20]
   86b54:	f7ff fb08 	bl	86168 <__ssprint_r>
   86b58:	2800      	cmp	r0, #0
   86b5a:	f47f ac93 	bne.w	86484 <_svfiprintf_r+0x228>
   86b5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   86b60:	e68c      	b.n	8687c <_svfiprintf_r+0x620>
   86b62:	ad1a      	add	r5, sp, #104	; 0x68
   86b64:	e732      	b.n	869cc <_svfiprintf_r+0x770>
   86b66:	9901      	ldr	r1, [sp, #4]
   86b68:	9306      	str	r3, [sp, #24]
   86b6a:	17cd      	asrs	r5, r1, #31
   86b6c:	4608      	mov	r0, r1
   86b6e:	4629      	mov	r1, r5
   86b70:	e9c2 0100 	strd	r0, r1, [r2]
   86b74:	f7ff bb8a 	b.w	8628c <_svfiprintf_r+0x30>
   86b78:	f018 0f40 	tst.w	r8, #64	; 0x40
   86b7c:	bf18      	it	ne
   86b7e:	b2b6      	uxthne	r6, r6
   86b80:	2700      	movs	r7, #0
   86b82:	2301      	movs	r3, #1
   86b84:	e6c7      	b.n	86916 <_svfiprintf_r+0x6ba>
   86b86:	f018 0340 	ands.w	r3, r8, #64	; 0x40
   86b8a:	bf1c      	itt	ne
   86b8c:	4613      	movne	r3, r2
   86b8e:	b2b6      	uxthne	r6, r6
   86b90:	2700      	movs	r7, #0
   86b92:	e6c0      	b.n	86916 <_svfiprintf_r+0x6ba>
   86b94:	000876e8 	.word	0x000876e8
   86b98:	000876fc 	.word	0x000876fc
   86b9c:	00087878 	.word	0x00087878
   86ba0:	2140      	movs	r1, #64	; 0x40
   86ba2:	f7fe f8bb 	bl	84d1c <_malloc_r>
   86ba6:	9b02      	ldr	r3, [sp, #8]
   86ba8:	6018      	str	r0, [r3, #0]
   86baa:	6118      	str	r0, [r3, #16]
   86bac:	2800      	cmp	r0, #0
   86bae:	d06b      	beq.n	86c88 <_svfiprintf_r+0xa2c>
   86bb0:	2340      	movs	r3, #64	; 0x40
   86bb2:	9a02      	ldr	r2, [sp, #8]
   86bb4:	6153      	str	r3, [r2, #20]
   86bb6:	f7ff bb60 	b.w	8627a <_svfiprintf_r+0x1e>
   86bba:	4628      	mov	r0, r5
   86bbc:	9406      	str	r4, [sp, #24]
   86bbe:	f8cd 8000 	str.w	r8, [sp]
   86bc2:	f7fb fcd5 	bl	82570 <strlen>
   86bc6:	f04f 0900 	mov.w	r9, #0
   86bca:	9003      	str	r0, [sp, #12]
   86bcc:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   86bd0:	e6fc      	b.n	869cc <_svfiprintf_r+0x770>
   86bd2:	9901      	ldr	r1, [sp, #4]
   86bd4:	6011      	str	r1, [r2, #0]
   86bd6:	9306      	str	r3, [sp, #24]
   86bd8:	f7ff bb58 	b.w	8628c <_svfiprintf_r+0x30>
   86bdc:	2b01      	cmp	r3, #1
   86bde:	f47f ac0a 	bne.w	863f6 <_svfiprintf_r+0x19a>
   86be2:	e77b      	b.n	86adc <_svfiprintf_r+0x880>
   86be4:	ad1a      	add	r5, sp, #104	; 0x68
   86be6:	4630      	mov	r0, r6
   86be8:	4639      	mov	r1, r7
   86bea:	220a      	movs	r2, #10
   86bec:	2300      	movs	r3, #0
   86bee:	f7fb fa6f 	bl	820d0 <__aeabi_uldivmod>
   86bf2:	3230      	adds	r2, #48	; 0x30
   86bf4:	f805 2d01 	strb.w	r2, [r5, #-1]!
   86bf8:	4630      	mov	r0, r6
   86bfa:	4639      	mov	r1, r7
   86bfc:	2300      	movs	r3, #0
   86bfe:	220a      	movs	r2, #10
   86c00:	f7fb fa66 	bl	820d0 <__aeabi_uldivmod>
   86c04:	4606      	mov	r6, r0
   86c06:	460f      	mov	r7, r1
   86c08:	ea56 0307 	orrs.w	r3, r6, r7
   86c0c:	d1eb      	bne.n	86be6 <_svfiprintf_r+0x98a>
   86c0e:	e6da      	b.n	869c6 <_svfiprintf_r+0x76a>
   86c10:	aa0d      	add	r2, sp, #52	; 0x34
   86c12:	9902      	ldr	r1, [sp, #8]
   86c14:	9805      	ldr	r0, [sp, #20]
   86c16:	f7ff faa7 	bl	86168 <__ssprint_r>
   86c1a:	2800      	cmp	r0, #0
   86c1c:	f47f ac32 	bne.w	86484 <_svfiprintf_r+0x228>
   86c20:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   86c24:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   86c28:	f101 0c01 	add.w	ip, r1, #1
   86c2c:	a81c      	add	r0, sp, #112	; 0x70
   86c2e:	e59f      	b.n	86770 <_svfiprintf_r+0x514>
   86c30:	4603      	mov	r3, r0
   86c32:	4c22      	ldr	r4, [pc, #136]	; (86cbc <_svfiprintf_r+0xa60>)
   86c34:	e5cc      	b.n	867d0 <_svfiprintf_r+0x574>
   86c36:	464e      	mov	r6, r9
   86c38:	2e06      	cmp	r6, #6
   86c3a:	bf28      	it	cs
   86c3c:	2606      	movcs	r6, #6
   86c3e:	9406      	str	r4, [sp, #24]
   86c40:	9603      	str	r6, [sp, #12]
   86c42:	4d1f      	ldr	r5, [pc, #124]	; (86cc0 <_svfiprintf_r+0xa64>)
   86c44:	e518      	b.n	86678 <_svfiprintf_r+0x41c>
   86c46:	4f1f      	ldr	r7, [pc, #124]	; (86cc4 <_svfiprintf_r+0xa68>)
   86c48:	e558      	b.n	866fc <_svfiprintf_r+0x4a0>
   86c4a:	4f1e      	ldr	r7, [pc, #120]	; (86cc4 <_svfiprintf_r+0xa68>)
   86c4c:	e60d      	b.n	8686a <_svfiprintf_r+0x60e>
   86c4e:	46a3      	mov	fp, r4
   86c50:	f04f 0900 	mov.w	r9, #0
   86c54:	f7ff bb4f 	b.w	862f6 <_svfiprintf_r+0x9a>
   86c58:	f8cd 900c 	str.w	r9, [sp, #12]
   86c5c:	9406      	str	r4, [sp, #24]
   86c5e:	f8cd 8000 	str.w	r8, [sp]
   86c62:	4681      	mov	r9, r0
   86c64:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   86c68:	e6b0      	b.n	869cc <_svfiprintf_r+0x770>
   86c6a:	4603      	mov	r3, r0
   86c6c:	4661      	mov	r1, ip
   86c6e:	4c13      	ldr	r4, [pc, #76]	; (86cbc <_svfiprintf_r+0xa60>)
   86c70:	e6e9      	b.n	86a46 <_svfiprintf_r+0x7ea>
   86c72:	9d06      	ldr	r5, [sp, #24]
   86c74:	f89b 3001 	ldrb.w	r3, [fp, #1]
   86c78:	682a      	ldr	r2, [r5, #0]
   86c7a:	46a3      	mov	fp, r4
   86c7c:	ea42 79e2 	orr.w	r9, r2, r2, asr #31
   86c80:	1d2a      	adds	r2, r5, #4
   86c82:	9206      	str	r2, [sp, #24]
   86c84:	f7ff bb35 	b.w	862f2 <_svfiprintf_r+0x96>
   86c88:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   86c8c:	230c      	movs	r3, #12
   86c8e:	9201      	str	r2, [sp, #4]
   86c90:	9a05      	ldr	r2, [sp, #20]
   86c92:	6013      	str	r3, [r2, #0]
   86c94:	f7ff bbff 	b.w	86496 <_svfiprintf_r+0x23a>
   86c98:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   86c9c:	e618      	b.n	868d0 <_svfiprintf_r+0x674>
   86c9e:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   86ca2:	e645      	b.n	86930 <_svfiprintf_r+0x6d4>
   86ca4:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   86ca8:	e670      	b.n	8698c <_svfiprintf_r+0x730>
   86caa:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   86cae:	e4a5      	b.n	865fc <_svfiprintf_r+0x3a0>
   86cb0:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   86cb4:	e5f4      	b.n	868a0 <_svfiprintf_r+0x644>
   86cb6:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   86cba:	e445      	b.n	86548 <_svfiprintf_r+0x2ec>
   86cbc:	00087878 	.word	0x00087878
   86cc0:	00087710 	.word	0x00087710
   86cc4:	00087868 	.word	0x00087868

00086cc8 <_wctomb_r>:
   86cc8:	b410      	push	{r4}
   86cca:	4c03      	ldr	r4, [pc, #12]	; (86cd8 <_wctomb_r+0x10>)
   86ccc:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   86cd0:	46a4      	mov	ip, r4
   86cd2:	bc10      	pop	{r4}
   86cd4:	4760      	bx	ip
   86cd6:	bf00      	nop
   86cd8:	200706c8 	.word	0x200706c8

00086cdc <__ascii_wctomb>:
   86cdc:	b119      	cbz	r1, 86ce6 <__ascii_wctomb+0xa>
   86cde:	2aff      	cmp	r2, #255	; 0xff
   86ce0:	d803      	bhi.n	86cea <__ascii_wctomb+0xe>
   86ce2:	700a      	strb	r2, [r1, #0]
   86ce4:	2101      	movs	r1, #1
   86ce6:	4608      	mov	r0, r1
   86ce8:	4770      	bx	lr
   86cea:	238a      	movs	r3, #138	; 0x8a
   86cec:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   86cf0:	6003      	str	r3, [r0, #0]
   86cf2:	e7f8      	b.n	86ce6 <__ascii_wctomb+0xa>

00086cf4 <_calloc_r>:
   86cf4:	b510      	push	{r4, lr}
   86cf6:	fb02 f101 	mul.w	r1, r2, r1
   86cfa:	f7fe f80f 	bl	84d1c <_malloc_r>
   86cfe:	4604      	mov	r4, r0
   86d00:	b1e8      	cbz	r0, 86d3e <_calloc_r+0x4a>
   86d02:	f850 2c04 	ldr.w	r2, [r0, #-4]
   86d06:	f022 0203 	bic.w	r2, r2, #3
   86d0a:	3a04      	subs	r2, #4
   86d0c:	2a24      	cmp	r2, #36	; 0x24
   86d0e:	d81f      	bhi.n	86d50 <_calloc_r+0x5c>
   86d10:	2a13      	cmp	r2, #19
   86d12:	d916      	bls.n	86d42 <_calloc_r+0x4e>
   86d14:	2300      	movs	r3, #0
   86d16:	2a1b      	cmp	r2, #27
   86d18:	e9c0 3300 	strd	r3, r3, [r0]
   86d1c:	d91d      	bls.n	86d5a <_calloc_r+0x66>
   86d1e:	2a24      	cmp	r2, #36	; 0x24
   86d20:	e9c0 3302 	strd	r3, r3, [r0, #8]
   86d24:	bf08      	it	eq
   86d26:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
   86d2a:	f04f 0300 	mov.w	r3, #0
   86d2e:	bf14      	ite	ne
   86d30:	f100 0210 	addne.w	r2, r0, #16
   86d34:	f100 0218 	addeq.w	r2, r0, #24
   86d38:	e9c2 3300 	strd	r3, r3, [r2]
   86d3c:	6093      	str	r3, [r2, #8]
   86d3e:	4620      	mov	r0, r4
   86d40:	bd10      	pop	{r4, pc}
   86d42:	4602      	mov	r2, r0
   86d44:	2300      	movs	r3, #0
   86d46:	4620      	mov	r0, r4
   86d48:	e9c2 3300 	strd	r3, r3, [r2]
   86d4c:	6093      	str	r3, [r2, #8]
   86d4e:	bd10      	pop	{r4, pc}
   86d50:	2100      	movs	r1, #0
   86d52:	f7fb fb83 	bl	8245c <memset>
   86d56:	4620      	mov	r0, r4
   86d58:	bd10      	pop	{r4, pc}
   86d5a:	f100 0208 	add.w	r2, r0, #8
   86d5e:	e7f1      	b.n	86d44 <_calloc_r+0x50>

00086d60 <__aeabi_drsub>:
   86d60:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   86d64:	e002      	b.n	86d6c <__adddf3>
   86d66:	bf00      	nop

00086d68 <__aeabi_dsub>:
   86d68:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00086d6c <__adddf3>:
   86d6c:	b530      	push	{r4, r5, lr}
   86d6e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   86d72:	ea4f 0543 	mov.w	r5, r3, lsl #1
   86d76:	ea94 0f05 	teq	r4, r5
   86d7a:	bf08      	it	eq
   86d7c:	ea90 0f02 	teqeq	r0, r2
   86d80:	bf1f      	itttt	ne
   86d82:	ea54 0c00 	orrsne.w	ip, r4, r0
   86d86:	ea55 0c02 	orrsne.w	ip, r5, r2
   86d8a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   86d8e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   86d92:	f000 80e2 	beq.w	86f5a <__adddf3+0x1ee>
   86d96:	ea4f 5454 	mov.w	r4, r4, lsr #21
   86d9a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   86d9e:	bfb8      	it	lt
   86da0:	426d      	neglt	r5, r5
   86da2:	dd0c      	ble.n	86dbe <__adddf3+0x52>
   86da4:	442c      	add	r4, r5
   86da6:	ea80 0202 	eor.w	r2, r0, r2
   86daa:	ea81 0303 	eor.w	r3, r1, r3
   86dae:	ea82 0000 	eor.w	r0, r2, r0
   86db2:	ea83 0101 	eor.w	r1, r3, r1
   86db6:	ea80 0202 	eor.w	r2, r0, r2
   86dba:	ea81 0303 	eor.w	r3, r1, r3
   86dbe:	2d36      	cmp	r5, #54	; 0x36
   86dc0:	bf88      	it	hi
   86dc2:	bd30      	pophi	{r4, r5, pc}
   86dc4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86dc8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86dcc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   86dd0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   86dd4:	d002      	beq.n	86ddc <__adddf3+0x70>
   86dd6:	4240      	negs	r0, r0
   86dd8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86ddc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   86de0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   86de4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   86de8:	d002      	beq.n	86df0 <__adddf3+0x84>
   86dea:	4252      	negs	r2, r2
   86dec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   86df0:	ea94 0f05 	teq	r4, r5
   86df4:	f000 80a7 	beq.w	86f46 <__adddf3+0x1da>
   86df8:	f1a4 0401 	sub.w	r4, r4, #1
   86dfc:	f1d5 0e20 	rsbs	lr, r5, #32
   86e00:	db0d      	blt.n	86e1e <__adddf3+0xb2>
   86e02:	fa02 fc0e 	lsl.w	ip, r2, lr
   86e06:	fa22 f205 	lsr.w	r2, r2, r5
   86e0a:	1880      	adds	r0, r0, r2
   86e0c:	f141 0100 	adc.w	r1, r1, #0
   86e10:	fa03 f20e 	lsl.w	r2, r3, lr
   86e14:	1880      	adds	r0, r0, r2
   86e16:	fa43 f305 	asr.w	r3, r3, r5
   86e1a:	4159      	adcs	r1, r3
   86e1c:	e00e      	b.n	86e3c <__adddf3+0xd0>
   86e1e:	f1a5 0520 	sub.w	r5, r5, #32
   86e22:	f10e 0e20 	add.w	lr, lr, #32
   86e26:	2a01      	cmp	r2, #1
   86e28:	fa03 fc0e 	lsl.w	ip, r3, lr
   86e2c:	bf28      	it	cs
   86e2e:	f04c 0c02 	orrcs.w	ip, ip, #2
   86e32:	fa43 f305 	asr.w	r3, r3, r5
   86e36:	18c0      	adds	r0, r0, r3
   86e38:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   86e3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86e40:	d507      	bpl.n	86e52 <__adddf3+0xe6>
   86e42:	f04f 0e00 	mov.w	lr, #0
   86e46:	f1dc 0c00 	rsbs	ip, ip, #0
   86e4a:	eb7e 0000 	sbcs.w	r0, lr, r0
   86e4e:	eb6e 0101 	sbc.w	r1, lr, r1
   86e52:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   86e56:	d31b      	bcc.n	86e90 <__adddf3+0x124>
   86e58:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   86e5c:	d30c      	bcc.n	86e78 <__adddf3+0x10c>
   86e5e:	0849      	lsrs	r1, r1, #1
   86e60:	ea5f 0030 	movs.w	r0, r0, rrx
   86e64:	ea4f 0c3c 	mov.w	ip, ip, rrx
   86e68:	f104 0401 	add.w	r4, r4, #1
   86e6c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   86e70:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   86e74:	f080 809a 	bcs.w	86fac <__adddf3+0x240>
   86e78:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   86e7c:	bf08      	it	eq
   86e7e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   86e82:	f150 0000 	adcs.w	r0, r0, #0
   86e86:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86e8a:	ea41 0105 	orr.w	r1, r1, r5
   86e8e:	bd30      	pop	{r4, r5, pc}
   86e90:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   86e94:	4140      	adcs	r0, r0
   86e96:	eb41 0101 	adc.w	r1, r1, r1
   86e9a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86e9e:	f1a4 0401 	sub.w	r4, r4, #1
   86ea2:	d1e9      	bne.n	86e78 <__adddf3+0x10c>
   86ea4:	f091 0f00 	teq	r1, #0
   86ea8:	bf04      	itt	eq
   86eaa:	4601      	moveq	r1, r0
   86eac:	2000      	moveq	r0, #0
   86eae:	fab1 f381 	clz	r3, r1
   86eb2:	bf08      	it	eq
   86eb4:	3320      	addeq	r3, #32
   86eb6:	f1a3 030b 	sub.w	r3, r3, #11
   86eba:	f1b3 0220 	subs.w	r2, r3, #32
   86ebe:	da0c      	bge.n	86eda <__adddf3+0x16e>
   86ec0:	320c      	adds	r2, #12
   86ec2:	dd08      	ble.n	86ed6 <__adddf3+0x16a>
   86ec4:	f102 0c14 	add.w	ip, r2, #20
   86ec8:	f1c2 020c 	rsb	r2, r2, #12
   86ecc:	fa01 f00c 	lsl.w	r0, r1, ip
   86ed0:	fa21 f102 	lsr.w	r1, r1, r2
   86ed4:	e00c      	b.n	86ef0 <__adddf3+0x184>
   86ed6:	f102 0214 	add.w	r2, r2, #20
   86eda:	bfd8      	it	le
   86edc:	f1c2 0c20 	rsble	ip, r2, #32
   86ee0:	fa01 f102 	lsl.w	r1, r1, r2
   86ee4:	fa20 fc0c 	lsr.w	ip, r0, ip
   86ee8:	bfdc      	itt	le
   86eea:	ea41 010c 	orrle.w	r1, r1, ip
   86eee:	4090      	lslle	r0, r2
   86ef0:	1ae4      	subs	r4, r4, r3
   86ef2:	bfa2      	ittt	ge
   86ef4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   86ef8:	4329      	orrge	r1, r5
   86efa:	bd30      	popge	{r4, r5, pc}
   86efc:	ea6f 0404 	mvn.w	r4, r4
   86f00:	3c1f      	subs	r4, #31
   86f02:	da1c      	bge.n	86f3e <__adddf3+0x1d2>
   86f04:	340c      	adds	r4, #12
   86f06:	dc0e      	bgt.n	86f26 <__adddf3+0x1ba>
   86f08:	f104 0414 	add.w	r4, r4, #20
   86f0c:	f1c4 0220 	rsb	r2, r4, #32
   86f10:	fa20 f004 	lsr.w	r0, r0, r4
   86f14:	fa01 f302 	lsl.w	r3, r1, r2
   86f18:	ea40 0003 	orr.w	r0, r0, r3
   86f1c:	fa21 f304 	lsr.w	r3, r1, r4
   86f20:	ea45 0103 	orr.w	r1, r5, r3
   86f24:	bd30      	pop	{r4, r5, pc}
   86f26:	f1c4 040c 	rsb	r4, r4, #12
   86f2a:	f1c4 0220 	rsb	r2, r4, #32
   86f2e:	fa20 f002 	lsr.w	r0, r0, r2
   86f32:	fa01 f304 	lsl.w	r3, r1, r4
   86f36:	ea40 0003 	orr.w	r0, r0, r3
   86f3a:	4629      	mov	r1, r5
   86f3c:	bd30      	pop	{r4, r5, pc}
   86f3e:	fa21 f004 	lsr.w	r0, r1, r4
   86f42:	4629      	mov	r1, r5
   86f44:	bd30      	pop	{r4, r5, pc}
   86f46:	f094 0f00 	teq	r4, #0
   86f4a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   86f4e:	bf06      	itte	eq
   86f50:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   86f54:	3401      	addeq	r4, #1
   86f56:	3d01      	subne	r5, #1
   86f58:	e74e      	b.n	86df8 <__adddf3+0x8c>
   86f5a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   86f5e:	bf18      	it	ne
   86f60:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   86f64:	d029      	beq.n	86fba <__adddf3+0x24e>
   86f66:	ea94 0f05 	teq	r4, r5
   86f6a:	bf08      	it	eq
   86f6c:	ea90 0f02 	teqeq	r0, r2
   86f70:	d005      	beq.n	86f7e <__adddf3+0x212>
   86f72:	ea54 0c00 	orrs.w	ip, r4, r0
   86f76:	bf04      	itt	eq
   86f78:	4619      	moveq	r1, r3
   86f7a:	4610      	moveq	r0, r2
   86f7c:	bd30      	pop	{r4, r5, pc}
   86f7e:	ea91 0f03 	teq	r1, r3
   86f82:	bf1e      	ittt	ne
   86f84:	2100      	movne	r1, #0
   86f86:	2000      	movne	r0, #0
   86f88:	bd30      	popne	{r4, r5, pc}
   86f8a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   86f8e:	d105      	bne.n	86f9c <__adddf3+0x230>
   86f90:	0040      	lsls	r0, r0, #1
   86f92:	4149      	adcs	r1, r1
   86f94:	bf28      	it	cs
   86f96:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   86f9a:	bd30      	pop	{r4, r5, pc}
   86f9c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   86fa0:	bf3c      	itt	cc
   86fa2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   86fa6:	bd30      	popcc	{r4, r5, pc}
   86fa8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86fac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   86fb0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86fb4:	f04f 0000 	mov.w	r0, #0
   86fb8:	bd30      	pop	{r4, r5, pc}
   86fba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   86fbe:	bf1a      	itte	ne
   86fc0:	4619      	movne	r1, r3
   86fc2:	4610      	movne	r0, r2
   86fc4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   86fc8:	bf1c      	itt	ne
   86fca:	460b      	movne	r3, r1
   86fcc:	4602      	movne	r2, r0
   86fce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86fd2:	bf06      	itte	eq
   86fd4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   86fd8:	ea91 0f03 	teqeq	r1, r3
   86fdc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   86fe0:	bd30      	pop	{r4, r5, pc}
   86fe2:	bf00      	nop

00086fe4 <__aeabi_ui2d>:
   86fe4:	f090 0f00 	teq	r0, #0
   86fe8:	bf04      	itt	eq
   86fea:	2100      	moveq	r1, #0
   86fec:	4770      	bxeq	lr
   86fee:	b530      	push	{r4, r5, lr}
   86ff0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86ff4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86ff8:	f04f 0500 	mov.w	r5, #0
   86ffc:	f04f 0100 	mov.w	r1, #0
   87000:	e750      	b.n	86ea4 <__adddf3+0x138>
   87002:	bf00      	nop

00087004 <__aeabi_i2d>:
   87004:	f090 0f00 	teq	r0, #0
   87008:	bf04      	itt	eq
   8700a:	2100      	moveq	r1, #0
   8700c:	4770      	bxeq	lr
   8700e:	b530      	push	{r4, r5, lr}
   87010:	f44f 6480 	mov.w	r4, #1024	; 0x400
   87014:	f104 0432 	add.w	r4, r4, #50	; 0x32
   87018:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   8701c:	bf48      	it	mi
   8701e:	4240      	negmi	r0, r0
   87020:	f04f 0100 	mov.w	r1, #0
   87024:	e73e      	b.n	86ea4 <__adddf3+0x138>
   87026:	bf00      	nop

00087028 <__aeabi_f2d>:
   87028:	0042      	lsls	r2, r0, #1
   8702a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8702e:	ea4f 0131 	mov.w	r1, r1, rrx
   87032:	ea4f 7002 	mov.w	r0, r2, lsl #28
   87036:	bf1f      	itttt	ne
   87038:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   8703c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   87040:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   87044:	4770      	bxne	lr
   87046:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   8704a:	bf08      	it	eq
   8704c:	4770      	bxeq	lr
   8704e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   87052:	bf04      	itt	eq
   87054:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   87058:	4770      	bxeq	lr
   8705a:	b530      	push	{r4, r5, lr}
   8705c:	f44f 7460 	mov.w	r4, #896	; 0x380
   87060:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   87064:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   87068:	e71c      	b.n	86ea4 <__adddf3+0x138>
   8706a:	bf00      	nop

0008706c <__aeabi_ul2d>:
   8706c:	ea50 0201 	orrs.w	r2, r0, r1
   87070:	bf08      	it	eq
   87072:	4770      	bxeq	lr
   87074:	b530      	push	{r4, r5, lr}
   87076:	f04f 0500 	mov.w	r5, #0
   8707a:	e00a      	b.n	87092 <__aeabi_l2d+0x16>

0008707c <__aeabi_l2d>:
   8707c:	ea50 0201 	orrs.w	r2, r0, r1
   87080:	bf08      	it	eq
   87082:	4770      	bxeq	lr
   87084:	b530      	push	{r4, r5, lr}
   87086:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   8708a:	d502      	bpl.n	87092 <__aeabi_l2d+0x16>
   8708c:	4240      	negs	r0, r0
   8708e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87092:	f44f 6480 	mov.w	r4, #1024	; 0x400
   87096:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8709a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   8709e:	f43f aed8 	beq.w	86e52 <__adddf3+0xe6>
   870a2:	f04f 0203 	mov.w	r2, #3
   870a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   870aa:	bf18      	it	ne
   870ac:	3203      	addne	r2, #3
   870ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   870b2:	bf18      	it	ne
   870b4:	3203      	addne	r2, #3
   870b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   870ba:	f1c2 0320 	rsb	r3, r2, #32
   870be:	fa00 fc03 	lsl.w	ip, r0, r3
   870c2:	fa20 f002 	lsr.w	r0, r0, r2
   870c6:	fa01 fe03 	lsl.w	lr, r1, r3
   870ca:	ea40 000e 	orr.w	r0, r0, lr
   870ce:	fa21 f102 	lsr.w	r1, r1, r2
   870d2:	4414      	add	r4, r2
   870d4:	e6bd      	b.n	86e52 <__adddf3+0xe6>
   870d6:	bf00      	nop

000870d8 <__aeabi_dmul>:
   870d8:	b570      	push	{r4, r5, r6, lr}
   870da:	f04f 0cff 	mov.w	ip, #255	; 0xff
   870de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   870e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   870e6:	bf1d      	ittte	ne
   870e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   870ec:	ea94 0f0c 	teqne	r4, ip
   870f0:	ea95 0f0c 	teqne	r5, ip
   870f4:	f000 f8de 	bleq	872b4 <__aeabi_dmul+0x1dc>
   870f8:	442c      	add	r4, r5
   870fa:	ea81 0603 	eor.w	r6, r1, r3
   870fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   87102:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   87106:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8710a:	bf18      	it	ne
   8710c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   87110:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   87114:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   87118:	d038      	beq.n	8718c <__aeabi_dmul+0xb4>
   8711a:	fba0 ce02 	umull	ip, lr, r0, r2
   8711e:	f04f 0500 	mov.w	r5, #0
   87122:	fbe1 e502 	umlal	lr, r5, r1, r2
   87126:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8712a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8712e:	f04f 0600 	mov.w	r6, #0
   87132:	fbe1 5603 	umlal	r5, r6, r1, r3
   87136:	f09c 0f00 	teq	ip, #0
   8713a:	bf18      	it	ne
   8713c:	f04e 0e01 	orrne.w	lr, lr, #1
   87140:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   87144:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   87148:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8714c:	d204      	bcs.n	87158 <__aeabi_dmul+0x80>
   8714e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   87152:	416d      	adcs	r5, r5
   87154:	eb46 0606 	adc.w	r6, r6, r6
   87158:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   8715c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   87160:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   87164:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   87168:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   8716c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   87170:	bf88      	it	hi
   87172:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   87176:	d81e      	bhi.n	871b6 <__aeabi_dmul+0xde>
   87178:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   8717c:	bf08      	it	eq
   8717e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   87182:	f150 0000 	adcs.w	r0, r0, #0
   87186:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8718a:	bd70      	pop	{r4, r5, r6, pc}
   8718c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   87190:	ea46 0101 	orr.w	r1, r6, r1
   87194:	ea40 0002 	orr.w	r0, r0, r2
   87198:	ea81 0103 	eor.w	r1, r1, r3
   8719c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   871a0:	bfc2      	ittt	gt
   871a2:	ebd4 050c 	rsbsgt	r5, r4, ip
   871a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   871aa:	bd70      	popgt	{r4, r5, r6, pc}
   871ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   871b0:	f04f 0e00 	mov.w	lr, #0
   871b4:	3c01      	subs	r4, #1
   871b6:	f300 80ab 	bgt.w	87310 <__aeabi_dmul+0x238>
   871ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
   871be:	bfde      	ittt	le
   871c0:	2000      	movle	r0, #0
   871c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   871c6:	bd70      	pople	{r4, r5, r6, pc}
   871c8:	f1c4 0400 	rsb	r4, r4, #0
   871cc:	3c20      	subs	r4, #32
   871ce:	da35      	bge.n	8723c <__aeabi_dmul+0x164>
   871d0:	340c      	adds	r4, #12
   871d2:	dc1b      	bgt.n	8720c <__aeabi_dmul+0x134>
   871d4:	f104 0414 	add.w	r4, r4, #20
   871d8:	f1c4 0520 	rsb	r5, r4, #32
   871dc:	fa00 f305 	lsl.w	r3, r0, r5
   871e0:	fa20 f004 	lsr.w	r0, r0, r4
   871e4:	fa01 f205 	lsl.w	r2, r1, r5
   871e8:	ea40 0002 	orr.w	r0, r0, r2
   871ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   871f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   871f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   871f8:	fa21 f604 	lsr.w	r6, r1, r4
   871fc:	eb42 0106 	adc.w	r1, r2, r6
   87200:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   87204:	bf08      	it	eq
   87206:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8720a:	bd70      	pop	{r4, r5, r6, pc}
   8720c:	f1c4 040c 	rsb	r4, r4, #12
   87210:	f1c4 0520 	rsb	r5, r4, #32
   87214:	fa00 f304 	lsl.w	r3, r0, r4
   87218:	fa20 f005 	lsr.w	r0, r0, r5
   8721c:	fa01 f204 	lsl.w	r2, r1, r4
   87220:	ea40 0002 	orr.w	r0, r0, r2
   87224:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87228:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8722c:	f141 0100 	adc.w	r1, r1, #0
   87230:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   87234:	bf08      	it	eq
   87236:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8723a:	bd70      	pop	{r4, r5, r6, pc}
   8723c:	f1c4 0520 	rsb	r5, r4, #32
   87240:	fa00 f205 	lsl.w	r2, r0, r5
   87244:	ea4e 0e02 	orr.w	lr, lr, r2
   87248:	fa20 f304 	lsr.w	r3, r0, r4
   8724c:	fa01 f205 	lsl.w	r2, r1, r5
   87250:	ea43 0302 	orr.w	r3, r3, r2
   87254:	fa21 f004 	lsr.w	r0, r1, r4
   87258:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8725c:	fa21 f204 	lsr.w	r2, r1, r4
   87260:	ea20 0002 	bic.w	r0, r0, r2
   87264:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   87268:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8726c:	bf08      	it	eq
   8726e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   87272:	bd70      	pop	{r4, r5, r6, pc}
   87274:	f094 0f00 	teq	r4, #0
   87278:	d10f      	bne.n	8729a <__aeabi_dmul+0x1c2>
   8727a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8727e:	0040      	lsls	r0, r0, #1
   87280:	eb41 0101 	adc.w	r1, r1, r1
   87284:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87288:	bf08      	it	eq
   8728a:	3c01      	subeq	r4, #1
   8728c:	d0f7      	beq.n	8727e <__aeabi_dmul+0x1a6>
   8728e:	ea41 0106 	orr.w	r1, r1, r6
   87292:	f095 0f00 	teq	r5, #0
   87296:	bf18      	it	ne
   87298:	4770      	bxne	lr
   8729a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8729e:	0052      	lsls	r2, r2, #1
   872a0:	eb43 0303 	adc.w	r3, r3, r3
   872a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   872a8:	bf08      	it	eq
   872aa:	3d01      	subeq	r5, #1
   872ac:	d0f7      	beq.n	8729e <__aeabi_dmul+0x1c6>
   872ae:	ea43 0306 	orr.w	r3, r3, r6
   872b2:	4770      	bx	lr
   872b4:	ea94 0f0c 	teq	r4, ip
   872b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   872bc:	bf18      	it	ne
   872be:	ea95 0f0c 	teqne	r5, ip
   872c2:	d00c      	beq.n	872de <__aeabi_dmul+0x206>
   872c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   872c8:	bf18      	it	ne
   872ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   872ce:	d1d1      	bne.n	87274 <__aeabi_dmul+0x19c>
   872d0:	ea81 0103 	eor.w	r1, r1, r3
   872d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   872d8:	f04f 0000 	mov.w	r0, #0
   872dc:	bd70      	pop	{r4, r5, r6, pc}
   872de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   872e2:	bf06      	itte	eq
   872e4:	4610      	moveq	r0, r2
   872e6:	4619      	moveq	r1, r3
   872e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   872ec:	d019      	beq.n	87322 <__aeabi_dmul+0x24a>
   872ee:	ea94 0f0c 	teq	r4, ip
   872f2:	d102      	bne.n	872fa <__aeabi_dmul+0x222>
   872f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   872f8:	d113      	bne.n	87322 <__aeabi_dmul+0x24a>
   872fa:	ea95 0f0c 	teq	r5, ip
   872fe:	d105      	bne.n	8730c <__aeabi_dmul+0x234>
   87300:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   87304:	bf1c      	itt	ne
   87306:	4610      	movne	r0, r2
   87308:	4619      	movne	r1, r3
   8730a:	d10a      	bne.n	87322 <__aeabi_dmul+0x24a>
   8730c:	ea81 0103 	eor.w	r1, r1, r3
   87310:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   87314:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   87318:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8731c:	f04f 0000 	mov.w	r0, #0
   87320:	bd70      	pop	{r4, r5, r6, pc}
   87322:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   87326:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8732a:	bd70      	pop	{r4, r5, r6, pc}

0008732c <__aeabi_ddiv>:
   8732c:	b570      	push	{r4, r5, r6, lr}
   8732e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   87332:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   87336:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8733a:	bf1d      	ittte	ne
   8733c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   87340:	ea94 0f0c 	teqne	r4, ip
   87344:	ea95 0f0c 	teqne	r5, ip
   87348:	f000 f8a7 	bleq	8749a <__aeabi_ddiv+0x16e>
   8734c:	eba4 0405 	sub.w	r4, r4, r5
   87350:	ea81 0e03 	eor.w	lr, r1, r3
   87354:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   87358:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8735c:	f000 8088 	beq.w	87470 <__aeabi_ddiv+0x144>
   87360:	ea4f 3303 	mov.w	r3, r3, lsl #12
   87364:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   87368:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8736c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   87370:	ea4f 2202 	mov.w	r2, r2, lsl #8
   87374:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   87378:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8737c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   87380:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   87384:	429d      	cmp	r5, r3
   87386:	bf08      	it	eq
   87388:	4296      	cmpeq	r6, r2
   8738a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8738e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   87392:	d202      	bcs.n	8739a <__aeabi_ddiv+0x6e>
   87394:	085b      	lsrs	r3, r3, #1
   87396:	ea4f 0232 	mov.w	r2, r2, rrx
   8739a:	1ab6      	subs	r6, r6, r2
   8739c:	eb65 0503 	sbc.w	r5, r5, r3
   873a0:	085b      	lsrs	r3, r3, #1
   873a2:	ea4f 0232 	mov.w	r2, r2, rrx
   873a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   873aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   873ae:	ebb6 0e02 	subs.w	lr, r6, r2
   873b2:	eb75 0e03 	sbcs.w	lr, r5, r3
   873b6:	bf22      	ittt	cs
   873b8:	1ab6      	subcs	r6, r6, r2
   873ba:	4675      	movcs	r5, lr
   873bc:	ea40 000c 	orrcs.w	r0, r0, ip
   873c0:	085b      	lsrs	r3, r3, #1
   873c2:	ea4f 0232 	mov.w	r2, r2, rrx
   873c6:	ebb6 0e02 	subs.w	lr, r6, r2
   873ca:	eb75 0e03 	sbcs.w	lr, r5, r3
   873ce:	bf22      	ittt	cs
   873d0:	1ab6      	subcs	r6, r6, r2
   873d2:	4675      	movcs	r5, lr
   873d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   873d8:	085b      	lsrs	r3, r3, #1
   873da:	ea4f 0232 	mov.w	r2, r2, rrx
   873de:	ebb6 0e02 	subs.w	lr, r6, r2
   873e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   873e6:	bf22      	ittt	cs
   873e8:	1ab6      	subcs	r6, r6, r2
   873ea:	4675      	movcs	r5, lr
   873ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   873f0:	085b      	lsrs	r3, r3, #1
   873f2:	ea4f 0232 	mov.w	r2, r2, rrx
   873f6:	ebb6 0e02 	subs.w	lr, r6, r2
   873fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   873fe:	bf22      	ittt	cs
   87400:	1ab6      	subcs	r6, r6, r2
   87402:	4675      	movcs	r5, lr
   87404:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   87408:	ea55 0e06 	orrs.w	lr, r5, r6
   8740c:	d018      	beq.n	87440 <__aeabi_ddiv+0x114>
   8740e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   87412:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   87416:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8741a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8741e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   87422:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   87426:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8742a:	d1c0      	bne.n	873ae <__aeabi_ddiv+0x82>
   8742c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87430:	d10b      	bne.n	8744a <__aeabi_ddiv+0x11e>
   87432:	ea41 0100 	orr.w	r1, r1, r0
   87436:	f04f 0000 	mov.w	r0, #0
   8743a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8743e:	e7b6      	b.n	873ae <__aeabi_ddiv+0x82>
   87440:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87444:	bf04      	itt	eq
   87446:	4301      	orreq	r1, r0
   87448:	2000      	moveq	r0, #0
   8744a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8744e:	bf88      	it	hi
   87450:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   87454:	f63f aeaf 	bhi.w	871b6 <__aeabi_dmul+0xde>
   87458:	ebb5 0c03 	subs.w	ip, r5, r3
   8745c:	bf04      	itt	eq
   8745e:	ebb6 0c02 	subseq.w	ip, r6, r2
   87462:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   87466:	f150 0000 	adcs.w	r0, r0, #0
   8746a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8746e:	bd70      	pop	{r4, r5, r6, pc}
   87470:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   87474:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   87478:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8747c:	bfc2      	ittt	gt
   8747e:	ebd4 050c 	rsbsgt	r5, r4, ip
   87482:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   87486:	bd70      	popgt	{r4, r5, r6, pc}
   87488:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8748c:	f04f 0e00 	mov.w	lr, #0
   87490:	3c01      	subs	r4, #1
   87492:	e690      	b.n	871b6 <__aeabi_dmul+0xde>
   87494:	ea45 0e06 	orr.w	lr, r5, r6
   87498:	e68d      	b.n	871b6 <__aeabi_dmul+0xde>
   8749a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8749e:	ea94 0f0c 	teq	r4, ip
   874a2:	bf08      	it	eq
   874a4:	ea95 0f0c 	teqeq	r5, ip
   874a8:	f43f af3b 	beq.w	87322 <__aeabi_dmul+0x24a>
   874ac:	ea94 0f0c 	teq	r4, ip
   874b0:	d10a      	bne.n	874c8 <__aeabi_ddiv+0x19c>
   874b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   874b6:	f47f af34 	bne.w	87322 <__aeabi_dmul+0x24a>
   874ba:	ea95 0f0c 	teq	r5, ip
   874be:	f47f af25 	bne.w	8730c <__aeabi_dmul+0x234>
   874c2:	4610      	mov	r0, r2
   874c4:	4619      	mov	r1, r3
   874c6:	e72c      	b.n	87322 <__aeabi_dmul+0x24a>
   874c8:	ea95 0f0c 	teq	r5, ip
   874cc:	d106      	bne.n	874dc <__aeabi_ddiv+0x1b0>
   874ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   874d2:	f43f aefd 	beq.w	872d0 <__aeabi_dmul+0x1f8>
   874d6:	4610      	mov	r0, r2
   874d8:	4619      	mov	r1, r3
   874da:	e722      	b.n	87322 <__aeabi_dmul+0x24a>
   874dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   874e0:	bf18      	it	ne
   874e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   874e6:	f47f aec5 	bne.w	87274 <__aeabi_dmul+0x19c>
   874ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   874ee:	f47f af0d 	bne.w	8730c <__aeabi_dmul+0x234>
   874f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   874f6:	f47f aeeb 	bne.w	872d0 <__aeabi_dmul+0x1f8>
   874fa:	e712      	b.n	87322 <__aeabi_dmul+0x24a>

000874fc <__gedf2>:
   874fc:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   87500:	e006      	b.n	87510 <__cmpdf2+0x4>
   87502:	bf00      	nop

00087504 <__ledf2>:
   87504:	f04f 0c01 	mov.w	ip, #1
   87508:	e002      	b.n	87510 <__cmpdf2+0x4>
   8750a:	bf00      	nop

0008750c <__cmpdf2>:
   8750c:	f04f 0c01 	mov.w	ip, #1
   87510:	f84d cd04 	str.w	ip, [sp, #-4]!
   87514:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87518:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8751c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87520:	bf18      	it	ne
   87522:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   87526:	d01b      	beq.n	87560 <__cmpdf2+0x54>
   87528:	b001      	add	sp, #4
   8752a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8752e:	bf0c      	ite	eq
   87530:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   87534:	ea91 0f03 	teqne	r1, r3
   87538:	bf02      	ittt	eq
   8753a:	ea90 0f02 	teqeq	r0, r2
   8753e:	2000      	moveq	r0, #0
   87540:	4770      	bxeq	lr
   87542:	f110 0f00 	cmn.w	r0, #0
   87546:	ea91 0f03 	teq	r1, r3
   8754a:	bf58      	it	pl
   8754c:	4299      	cmppl	r1, r3
   8754e:	bf08      	it	eq
   87550:	4290      	cmpeq	r0, r2
   87552:	bf2c      	ite	cs
   87554:	17d8      	asrcs	r0, r3, #31
   87556:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8755a:	f040 0001 	orr.w	r0, r0, #1
   8755e:	4770      	bx	lr
   87560:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87564:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87568:	d102      	bne.n	87570 <__cmpdf2+0x64>
   8756a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8756e:	d107      	bne.n	87580 <__cmpdf2+0x74>
   87570:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87574:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87578:	d1d6      	bne.n	87528 <__cmpdf2+0x1c>
   8757a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8757e:	d0d3      	beq.n	87528 <__cmpdf2+0x1c>
   87580:	f85d 0b04 	ldr.w	r0, [sp], #4
   87584:	4770      	bx	lr
   87586:	bf00      	nop

00087588 <__aeabi_cdrcmple>:
   87588:	4684      	mov	ip, r0
   8758a:	4610      	mov	r0, r2
   8758c:	4662      	mov	r2, ip
   8758e:	468c      	mov	ip, r1
   87590:	4619      	mov	r1, r3
   87592:	4663      	mov	r3, ip
   87594:	e000      	b.n	87598 <__aeabi_cdcmpeq>
   87596:	bf00      	nop

00087598 <__aeabi_cdcmpeq>:
   87598:	b501      	push	{r0, lr}
   8759a:	f7ff ffb7 	bl	8750c <__cmpdf2>
   8759e:	2800      	cmp	r0, #0
   875a0:	bf48      	it	mi
   875a2:	f110 0f00 	cmnmi.w	r0, #0
   875a6:	bd01      	pop	{r0, pc}

000875a8 <__aeabi_dcmpeq>:
   875a8:	f84d ed08 	str.w	lr, [sp, #-8]!
   875ac:	f7ff fff4 	bl	87598 <__aeabi_cdcmpeq>
   875b0:	bf0c      	ite	eq
   875b2:	2001      	moveq	r0, #1
   875b4:	2000      	movne	r0, #0
   875b6:	f85d fb08 	ldr.w	pc, [sp], #8
   875ba:	bf00      	nop

000875bc <__aeabi_dcmplt>:
   875bc:	f84d ed08 	str.w	lr, [sp, #-8]!
   875c0:	f7ff ffea 	bl	87598 <__aeabi_cdcmpeq>
   875c4:	bf34      	ite	cc
   875c6:	2001      	movcc	r0, #1
   875c8:	2000      	movcs	r0, #0
   875ca:	f85d fb08 	ldr.w	pc, [sp], #8
   875ce:	bf00      	nop

000875d0 <__aeabi_dcmple>:
   875d0:	f84d ed08 	str.w	lr, [sp, #-8]!
   875d4:	f7ff ffe0 	bl	87598 <__aeabi_cdcmpeq>
   875d8:	bf94      	ite	ls
   875da:	2001      	movls	r0, #1
   875dc:	2000      	movhi	r0, #0
   875de:	f85d fb08 	ldr.w	pc, [sp], #8
   875e2:	bf00      	nop

000875e4 <__aeabi_dcmpge>:
   875e4:	f84d ed08 	str.w	lr, [sp, #-8]!
   875e8:	f7ff ffce 	bl	87588 <__aeabi_cdrcmple>
   875ec:	bf94      	ite	ls
   875ee:	2001      	movls	r0, #1
   875f0:	2000      	movhi	r0, #0
   875f2:	f85d fb08 	ldr.w	pc, [sp], #8
   875f6:	bf00      	nop

000875f8 <__aeabi_dcmpgt>:
   875f8:	f84d ed08 	str.w	lr, [sp, #-8]!
   875fc:	f7ff ffc4 	bl	87588 <__aeabi_cdrcmple>
   87600:	bf34      	ite	cc
   87602:	2001      	movcc	r0, #1
   87604:	2000      	movcs	r0, #0
   87606:	f85d fb08 	ldr.w	pc, [sp], #8
   8760a:	bf00      	nop

0008760c <__aeabi_dcmpun>:
   8760c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87610:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87614:	d102      	bne.n	8761c <__aeabi_dcmpun+0x10>
   87616:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8761a:	d10a      	bne.n	87632 <__aeabi_dcmpun+0x26>
   8761c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87620:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87624:	d102      	bne.n	8762c <__aeabi_dcmpun+0x20>
   87626:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8762a:	d102      	bne.n	87632 <__aeabi_dcmpun+0x26>
   8762c:	f04f 0000 	mov.w	r0, #0
   87630:	4770      	bx	lr
   87632:	f04f 0001 	mov.w	r0, #1
   87636:	4770      	bx	lr

00087638 <__aeabi_d2iz>:
   87638:	ea4f 0241 	mov.w	r2, r1, lsl #1
   8763c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   87640:	d215      	bcs.n	8766e <__aeabi_d2iz+0x36>
   87642:	d511      	bpl.n	87668 <__aeabi_d2iz+0x30>
   87644:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   87648:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   8764c:	d912      	bls.n	87674 <__aeabi_d2iz+0x3c>
   8764e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   87652:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   87656:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8765a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8765e:	fa23 f002 	lsr.w	r0, r3, r2
   87662:	bf18      	it	ne
   87664:	4240      	negne	r0, r0
   87666:	4770      	bx	lr
   87668:	f04f 0000 	mov.w	r0, #0
   8766c:	4770      	bx	lr
   8766e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   87672:	d105      	bne.n	87680 <__aeabi_d2iz+0x48>
   87674:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   87678:	bf08      	it	eq
   8767a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   8767e:	4770      	bx	lr
   87680:	f04f 0000 	mov.w	r0, #0
   87684:	4770      	bx	lr
   87686:	bf00      	nop
   87688:	00006325 	.word	0x00006325
   8768c:	00003154 	.word	0x00003154
   87690:	00003254 	.word	0x00003254
   87694:	00003354 	.word	0x00003354
   87698:	00003454 	.word	0x00003454
   8769c:	000d6b6f 	.word	0x000d6b6f
   876a0:	0000000a 	.word	0x0000000a
   876a4:	766f0d0a 	.word	0x766f0d0a
   876a8:	6c667265 	.word	0x6c667265
   876ac:	0a776f6c 	.word	0x0a776f6c
   876b0:	0000000d 	.word	0x0000000d

000876b4 <_global_impure_ptr>:
   876b4:	200702a0                                ... 

000876b8 <blanks.7291>:
   876b8:	20202020 20202020 20202020 20202020                     

000876c8 <zeroes.7292>:
   876c8:	30303030 30303030 30303030 30303030     0000000000000000
   876d8:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   876e8:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   876f8:	00000000 33323130 37363534 62613938     ....0123456789ab
   87708:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   87718:	00000030 69666e49 7974696e 00000000     0...Infinity....
   87728:	004e614e 00000043 49534f50 00000058     NaN.C...POSIX...
   87738:	0000002e 00000000                       ........

00087740 <p05.6073>:
   87740:	00000005 00000019 0000007d 00000000     ........}.......

00087750 <__mprec_tens>:
   87750:	00000000 3ff00000 00000000 40240000     .......?......$@
   87760:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   87770:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   87780:	00000000 412e8480 00000000 416312d0     .......A......cA
   87790:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   877a0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   877b0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   877c0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   877d0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   877e0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   877f0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   87800:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   87810:	79d99db4 44ea7843                       ...yCx.D

00087818 <__mprec_tinytens>:
   87818:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   87828:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   87838:	64ac6f43 0ac80628                       Co.d(...

00087840 <__mprec_bigtens>:
   87840:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   87850:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   87860:	7f73bf3c 75154fdd                       <.s..O.u

00087868 <blanks.7271>:
   87868:	20202020 20202020 20202020 20202020                     

00087878 <zeroes.7272>:
   87878:	30303030 30303030 30303030 30303030     0000000000000000

00087888 <_ctype_>:
   87888:	20202000 20202020 28282020 20282828     .         ((((( 
   87898:	20202020 20202020 20202020 20202020                     
   878a8:	10108820 10101010 10101010 10101010      ...............
   878b8:	04040410 04040404 10040404 10101010     ................
   878c8:	41411010 41414141 01010101 01010101     ..AAAAAA........
   878d8:	01010101 01010101 01010101 10101010     ................
   878e8:	42421010 42424242 02020202 02020202     ..BBBBBB........
   878f8:	02020202 02020202 02020202 10101010     ................
   87908:	00000020 00000000 00000000 00000000      ...............
	...

0008798c <_init>:
   8798c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8798e:	bf00      	nop
   87990:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87992:	bc08      	pop	{r3}
   87994:	469e      	mov	lr, r3
   87996:	4770      	bx	lr

00087998 <__init_array_start>:
   87998:	00083b19 	.word	0x00083b19

0008799c <__frame_dummy_init_array_entry>:
   8799c:	0008015d                                ]...

000879a0 <_fini>:
   879a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   879a2:	bf00      	nop
   879a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   879a6:	bc08      	pop	{r3}
   879a8:	469e      	mov	lr, r3
   879aa:	4770      	bx	lr
   879ac:	0000      	movs	r0, r0
	...

000879b0 <__portable_delay_cycles_veneer>:
   879b0:	f85f f000 	ldr.w	pc, [pc]	; 879b4 <__portable_delay_cycles_veneer+0x4>
   879b4:	2007018d 	.word	0x2007018d

000879b8 <__system_init_flash_veneer>:
   879b8:	f85f f000 	ldr.w	pc, [pc]	; 879bc <__system_init_flash_veneer+0x4>
   879bc:	200700d1 	.word	0x200700d1

000879c0 <__fini_array_start>:
   879c0:	00080135 	.word	0x00080135

Disassembly of section .relocate:

20070000 <SystemInit>:
{
20070000:	b480      	push	{r7}
20070002:	af00      	add	r7, sp, #0
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070004:	4b2a      	ldr	r3, [pc, #168]	; (200700b0 <SystemInit+0xb0>)
20070006:	f44f 6280 	mov.w	r2, #1024	; 0x400
2007000a:	601a      	str	r2, [r3, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	4b29      	ldr	r3, [pc, #164]	; (200700b4 <SystemInit+0xb4>)
2007000e:	f44f 6280 	mov.w	r2, #1024	; 0x400
20070012:	601a      	str	r2, [r3, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20070014:	4b28      	ldr	r3, [pc, #160]	; (200700b8 <SystemInit+0xb8>)
20070016:	6a1b      	ldr	r3, [r3, #32]
20070018:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
2007001c:	2b00      	cmp	r3, #0
2007001e:	d109      	bne.n	20070034 <SystemInit+0x34>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070020:	4b25      	ldr	r3, [pc, #148]	; (200700b8 <SystemInit+0xb8>)
20070022:	4a26      	ldr	r2, [pc, #152]	; (200700bc <SystemInit+0xbc>)
20070024:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20070026:	bf00      	nop
20070028:	4b23      	ldr	r3, [pc, #140]	; (200700b8 <SystemInit+0xb8>)
2007002a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007002c:	f003 0301 	and.w	r3, r3, #1
20070030:	2b00      	cmp	r3, #0
20070032:	d0f9      	beq.n	20070028 <SystemInit+0x28>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4b20      	ldr	r3, [pc, #128]	; (200700b8 <SystemInit+0xb8>)
20070036:	4a22      	ldr	r2, [pc, #136]	; (200700c0 <SystemInit+0xc0>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	bf00      	nop
2007003c:	4b1e      	ldr	r3, [pc, #120]	; (200700b8 <SystemInit+0xb8>)
2007003e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070040:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
20070044:	2b00      	cmp	r3, #0
20070046:	d0f9      	beq.n	2007003c <SystemInit+0x3c>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070048:	4b1b      	ldr	r3, [pc, #108]	; (200700b8 <SystemInit+0xb8>)
2007004a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2007004c:	f023 0303 	bic.w	r3, r3, #3
20070050:	4a19      	ldr	r2, [pc, #100]	; (200700b8 <SystemInit+0xb8>)
20070052:	f043 0301 	orr.w	r3, r3, #1
20070056:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070058:	bf00      	nop
2007005a:	4b17      	ldr	r3, [pc, #92]	; (200700b8 <SystemInit+0xb8>)
2007005c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007005e:	f003 0308 	and.w	r3, r3, #8
20070062:	2b00      	cmp	r3, #0
20070064:	d0f9      	beq.n	2007005a <SystemInit+0x5a>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20070066:	4b14      	ldr	r3, [pc, #80]	; (200700b8 <SystemInit+0xb8>)
20070068:	4a16      	ldr	r2, [pc, #88]	; (200700c4 <SystemInit+0xc4>)
2007006a:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
2007006c:	bf00      	nop
2007006e:	4b12      	ldr	r3, [pc, #72]	; (200700b8 <SystemInit+0xb8>)
20070070:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070072:	f003 0302 	and.w	r3, r3, #2
20070076:	2b00      	cmp	r3, #0
20070078:	d0f9      	beq.n	2007006e <SystemInit+0x6e>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007007a:	4b0f      	ldr	r3, [pc, #60]	; (200700b8 <SystemInit+0xb8>)
2007007c:	2211      	movs	r2, #17
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	bf00      	nop
20070082:	4b0d      	ldr	r3, [pc, #52]	; (200700b8 <SystemInit+0xb8>)
20070084:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070086:	f003 0308 	and.w	r3, r3, #8
2007008a:	2b00      	cmp	r3, #0
2007008c:	d0f9      	beq.n	20070082 <SystemInit+0x82>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007008e:	4b0a      	ldr	r3, [pc, #40]	; (200700b8 <SystemInit+0xb8>)
20070090:	2212      	movs	r2, #18
20070092:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070094:	bf00      	nop
20070096:	4b08      	ldr	r3, [pc, #32]	; (200700b8 <SystemInit+0xb8>)
20070098:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007009a:	f003 0308 	and.w	r3, r3, #8
2007009e:	2b00      	cmp	r3, #0
200700a0:	d0f9      	beq.n	20070096 <SystemInit+0x96>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
200700a2:	4b09      	ldr	r3, [pc, #36]	; (200700c8 <SystemInit+0xc8>)
200700a4:	4a09      	ldr	r2, [pc, #36]	; (200700cc <SystemInit+0xcc>)
200700a6:	601a      	str	r2, [r3, #0]
}
200700a8:	bf00      	nop
200700aa:	46bd      	mov	sp, r7
200700ac:	bc80      	pop	{r7}
200700ae:	4770      	bx	lr
200700b0:	400e0a00 	.word	0x400e0a00
200700b4:	400e0c00 	.word	0x400e0c00
200700b8:	400e0600 	.word	0x400e0600
200700bc:	00370809 	.word	0x00370809
200700c0:	01370809 	.word	0x01370809
200700c4:	200d3f01 	.word	0x200d3f01
200700c8:	20070294 	.word	0x20070294
200700cc:	0501bd00 	.word	0x0501bd00

200700d0 <system_init_flash>:
 * Initialize flash.
 */
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
200700d0:	b480      	push	{r7}
200700d2:	b083      	sub	sp, #12
200700d4:	af00      	add	r7, sp, #0
200700d6:	6078      	str	r0, [r7, #4]
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700d8:	687b      	ldr	r3, [r7, #4]
200700da:	4a25      	ldr	r2, [pc, #148]	; (20070170 <system_init_flash+0xa0>)
200700dc:	4293      	cmp	r3, r2
200700de:	d806      	bhi.n	200700ee <system_init_flash+0x1e>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e0:	4b24      	ldr	r3, [pc, #144]	; (20070174 <system_init_flash+0xa4>)
200700e2:	2200      	movs	r2, #0
200700e4:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e6:	4b24      	ldr	r3, [pc, #144]	; (20070178 <system_init_flash+0xa8>)
200700e8:	2200      	movs	r2, #0
200700ea:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
	}
}
200700ec:	e03b      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700ee:	687b      	ldr	r3, [r7, #4]
200700f0:	4a22      	ldr	r2, [pc, #136]	; (2007017c <system_init_flash+0xac>)
200700f2:	4293      	cmp	r3, r2
200700f4:	d808      	bhi.n	20070108 <system_init_flash+0x38>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f6:	4b1f      	ldr	r3, [pc, #124]	; (20070174 <system_init_flash+0xa4>)
200700f8:	f44f 7280 	mov.w	r2, #256	; 0x100
200700fc:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700fe:	4b1e      	ldr	r3, [pc, #120]	; (20070178 <system_init_flash+0xa8>)
20070100:	f44f 7280 	mov.w	r2, #256	; 0x100
20070104:	601a      	str	r2, [r3, #0]
}
20070106:	e02e      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
20070108:	687b      	ldr	r3, [r7, #4]
2007010a:	4a1d      	ldr	r2, [pc, #116]	; (20070180 <system_init_flash+0xb0>)
2007010c:	4293      	cmp	r3, r2
2007010e:	d808      	bhi.n	20070122 <system_init_flash+0x52>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070110:	4b18      	ldr	r3, [pc, #96]	; (20070174 <system_init_flash+0xa4>)
20070112:	f44f 7200 	mov.w	r2, #512	; 0x200
20070116:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070118:	4b17      	ldr	r3, [pc, #92]	; (20070178 <system_init_flash+0xa8>)
2007011a:	f44f 7200 	mov.w	r2, #512	; 0x200
2007011e:	601a      	str	r2, [r3, #0]
}
20070120:	e021      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
20070122:	687b      	ldr	r3, [r7, #4]
20070124:	4a17      	ldr	r2, [pc, #92]	; (20070184 <system_init_flash+0xb4>)
20070126:	4293      	cmp	r3, r2
20070128:	d808      	bhi.n	2007013c <system_init_flash+0x6c>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
2007012a:	4b12      	ldr	r3, [pc, #72]	; (20070174 <system_init_flash+0xa4>)
2007012c:	f44f 7240 	mov.w	r2, #768	; 0x300
20070130:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070132:	4b11      	ldr	r3, [pc, #68]	; (20070178 <system_init_flash+0xa8>)
20070134:	f44f 7240 	mov.w	r2, #768	; 0x300
20070138:	601a      	str	r2, [r3, #0]
}
2007013a:	e014      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
2007013c:	687b      	ldr	r3, [r7, #4]
2007013e:	4a12      	ldr	r2, [pc, #72]	; (20070188 <system_init_flash+0xb8>)
20070140:	4293      	cmp	r3, r2
20070142:	d808      	bhi.n	20070156 <system_init_flash+0x86>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070144:	4b0b      	ldr	r3, [pc, #44]	; (20070174 <system_init_flash+0xa4>)
20070146:	f44f 6280 	mov.w	r2, #1024	; 0x400
2007014a:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
2007014c:	4b0a      	ldr	r3, [pc, #40]	; (20070178 <system_init_flash+0xa8>)
2007014e:	f44f 6280 	mov.w	r2, #1024	; 0x400
20070152:	601a      	str	r2, [r3, #0]
}
20070154:	e007      	b.n	20070166 <system_init_flash+0x96>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070156:	4b07      	ldr	r3, [pc, #28]	; (20070174 <system_init_flash+0xa4>)
20070158:	f44f 62a0 	mov.w	r2, #1280	; 0x500
2007015c:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007015e:	4b06      	ldr	r3, [pc, #24]	; (20070178 <system_init_flash+0xa8>)
20070160:	f44f 62a0 	mov.w	r2, #1280	; 0x500
20070164:	601a      	str	r2, [r3, #0]
}
20070166:	bf00      	nop
20070168:	370c      	adds	r7, #12
2007016a:	46bd      	mov	sp, r7
2007016c:	bc80      	pop	{r7}
2007016e:	4770      	bx	lr
20070170:	0121eabf 	.word	0x0121eabf
20070174:	400e0a00 	.word	0x400e0a00
20070178:	400e0c00 	.word	0x400e0c00
2007017c:	02faf07f 	.word	0x02faf07f
20070180:	03d08fff 	.word	0x03d08fff
20070184:	04c4b3ff 	.word	0x04c4b3ff
20070188:	055d4a7f 	.word	0x055d4a7f

2007018c <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
2007018c:	f3bf 8f5f 	dmb	sy
20070190:	3801      	subs	r0, #1
20070192:	d1fb      	bne.n	2007018c <portable_delay_cycles>
		"loop: DMB	\n"
		"SUBS R0, R0, #1  \n"
		"BNE.N loop         "
	);
}
20070194:	4770      	bx	lr
	...

20070198 <lcd_buff>:
20070198:	2020 2020 2020 2020 2020 2020 2020 2020                     
200701a8:	2020 2020 2020 2020 2020 2020 2020 2020                     
200701b8:	0000 0000                                   ....

200701bc <lcd_string>:
200701bc:	0198 2007                                   ... 

200701c0 <task_lcd>:
200701c0:	0000 0000 434c 0044 0000 0000 0000 0000     ....LCD.........
200701d0:	0000 0100 0b9d 0008                         ........

200701d8 <task_ura>:
200701d8:	0000 0000 5255 0041 0000 0000 0000 0000     ....URA.........
200701e8:	0000 0100 0cd5 0008                         ........

200701f0 <task_text>:
200701f0:	0000 0000 4143 434c 0000 0000 0000 0000     ....CALC........
20070200:	0000 0100 0d11 0008                         ........

20070208 <task_tipke>:
20070208:	0000 0000 4954 4b50 0045 0000 0000 0000     ....TIPKE.......
20070218:	0000 0100 0e51 0008                         ....Q...

20070220 <task_led>:
20070220:	0000 0000 454c 0044 0000 0000 0000 0000     ....LED.........
20070230:	0000 0000 0ecd 0008                         ........

20070238 <task_sent>:
20070238:	0000 0000 4553 544e 0000 0000 0000 0000     ....SENT........
20070248:	0000 0000 0fa9 0008                         ........

20070250 <task_dma>:
20070250:	0000 0000 4d44 0041 0000 0000 0000 0000     ....DMA.........
20070260:	0000 0100 1005 0008                         ........

20070268 <task_list>:
20070268:	0208 2007 01f0 2007 01c0 2007 0238 2007     ... ... ... 8.. 
20070278:	0220 2007 0250 2007 0000 0000                .. P.. ....

20070284 <task_priv>:
20070284:	01d8 2007                                   ... 

20070288 <keys_fifo>:
20070288:	0000 0000 0064 0000 0ccc 2007               ....d...... 

20070294 <SystemCoreClock>:
20070294:	0900 003d                                   ..=.

20070298 <_impure_ptr>:
20070298:	02a0 2007 0000 0000                         ... ....

200702a0 <impure_data>:
200702a0:	0000 0000 058c 2007 05f4 2007 065c 2007     ....... ... \.. 
	...
20070348:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20070358:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

200706c8 <__global_locale>:
200706c8:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200706e8:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070708:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070728:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070748:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070768:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070788:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200707a8:	6cdd 0008 5279 0008 0000 0000 7888 0008     .l..yR.......x..
200707b8:	7738 0008 76f8 0008 76f8 0008 76f8 0008     8w...v...v...v..
200707c8:	76f8 0008 76f8 0008 76f8 0008 76f8 0008     .v...v...v...v..
200707d8:	76f8 0008 76f8 0008 ffff ffff ffff ffff     .v...v..........
200707e8:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20070810:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

20070834 <__malloc_av_>:
	...
2007083c:	0834 2007 0834 2007 083c 2007 083c 2007     4.. 4.. <.. <.. 
2007084c:	0844 2007 0844 2007 084c 2007 084c 2007     D.. D.. L.. L.. 
2007085c:	0854 2007 0854 2007 085c 2007 085c 2007     T.. T.. \.. \.. 
2007086c:	0864 2007 0864 2007 086c 2007 086c 2007     d.. d.. l.. l.. 
2007087c:	0874 2007 0874 2007 087c 2007 087c 2007     t.. t.. |.. |.. 
2007088c:	0884 2007 0884 2007 088c 2007 088c 2007     ... ... ... ... 
2007089c:	0894 2007 0894 2007 089c 2007 089c 2007     ... ... ... ... 
200708ac:	08a4 2007 08a4 2007 08ac 2007 08ac 2007     ... ... ... ... 
200708bc:	08b4 2007 08b4 2007 08bc 2007 08bc 2007     ... ... ... ... 
200708cc:	08c4 2007 08c4 2007 08cc 2007 08cc 2007     ... ... ... ... 
200708dc:	08d4 2007 08d4 2007 08dc 2007 08dc 2007     ... ... ... ... 
200708ec:	08e4 2007 08e4 2007 08ec 2007 08ec 2007     ... ... ... ... 
200708fc:	08f4 2007 08f4 2007 08fc 2007 08fc 2007     ... ... ... ... 
2007090c:	0904 2007 0904 2007 090c 2007 090c 2007     ... ... ... ... 
2007091c:	0914 2007 0914 2007 091c 2007 091c 2007     ... ... ... ... 
2007092c:	0924 2007 0924 2007 092c 2007 092c 2007     $.. $.. ,.. ,.. 
2007093c:	0934 2007 0934 2007 093c 2007 093c 2007     4.. 4.. <.. <.. 
2007094c:	0944 2007 0944 2007 094c 2007 094c 2007     D.. D.. L.. L.. 
2007095c:	0954 2007 0954 2007 095c 2007 095c 2007     T.. T.. \.. \.. 
2007096c:	0964 2007 0964 2007 096c 2007 096c 2007     d.. d.. l.. l.. 
2007097c:	0974 2007 0974 2007 097c 2007 097c 2007     t.. t.. |.. |.. 
2007098c:	0984 2007 0984 2007 098c 2007 098c 2007     ... ... ... ... 
2007099c:	0994 2007 0994 2007 099c 2007 099c 2007     ... ... ... ... 
200709ac:	09a4 2007 09a4 2007 09ac 2007 09ac 2007     ... ... ... ... 
200709bc:	09b4 2007 09b4 2007 09bc 2007 09bc 2007     ... ... ... ... 
200709cc:	09c4 2007 09c4 2007 09cc 2007 09cc 2007     ... ... ... ... 
200709dc:	09d4 2007 09d4 2007 09dc 2007 09dc 2007     ... ... ... ... 
200709ec:	09e4 2007 09e4 2007 09ec 2007 09ec 2007     ... ... ... ... 
200709fc:	09f4 2007 09f4 2007 09fc 2007 09fc 2007     ... ... ... ... 
20070a0c:	0a04 2007 0a04 2007 0a0c 2007 0a0c 2007     ... ... ... ... 
20070a1c:	0a14 2007 0a14 2007 0a1c 2007 0a1c 2007     ... ... ... ... 
20070a2c:	0a24 2007 0a24 2007 0a2c 2007 0a2c 2007     $.. $.. ,.. ,.. 
20070a3c:	0a34 2007 0a34 2007 0a3c 2007 0a3c 2007     4.. 4.. <.. <.. 
20070a4c:	0a44 2007 0a44 2007 0a4c 2007 0a4c 2007     D.. D.. L.. L.. 
20070a5c:	0a54 2007 0a54 2007 0a5c 2007 0a5c 2007     T.. T.. \.. \.. 
20070a6c:	0a64 2007 0a64 2007 0a6c 2007 0a6c 2007     d.. d.. l.. l.. 
20070a7c:	0a74 2007 0a74 2007 0a7c 2007 0a7c 2007     t.. t.. |.. |.. 
20070a8c:	0a84 2007 0a84 2007 0a8c 2007 0a8c 2007     ... ... ... ... 
20070a9c:	0a94 2007 0a94 2007 0a9c 2007 0a9c 2007     ... ... ... ... 
20070aac:	0aa4 2007 0aa4 2007 0aac 2007 0aac 2007     ... ... ... ... 
20070abc:	0ab4 2007 0ab4 2007 0abc 2007 0abc 2007     ... ... ... ... 
20070acc:	0ac4 2007 0ac4 2007 0acc 2007 0acc 2007     ... ... ... ... 
20070adc:	0ad4 2007 0ad4 2007 0adc 2007 0adc 2007     ... ... ... ... 
20070aec:	0ae4 2007 0ae4 2007 0aec 2007 0aec 2007     ... ... ... ... 
20070afc:	0af4 2007 0af4 2007 0afc 2007 0afc 2007     ... ... ... ... 
20070b0c:	0b04 2007 0b04 2007 0b0c 2007 0b0c 2007     ... ... ... ... 
20070b1c:	0b14 2007 0b14 2007 0b1c 2007 0b1c 2007     ... ... ... ... 
20070b2c:	0b24 2007 0b24 2007 0b2c 2007 0b2c 2007     $.. $.. ,.. ,.. 
20070b3c:	0b34 2007 0b34 2007 0b3c 2007 0b3c 2007     4.. 4.. <.. <.. 
20070b4c:	0b44 2007 0b44 2007 0b4c 2007 0b4c 2007     D.. D.. L.. L.. 
20070b5c:	0b54 2007 0b54 2007 0b5c 2007 0b5c 2007     T.. T.. \.. \.. 
20070b6c:	0b64 2007 0b64 2007 0b6c 2007 0b6c 2007     d.. d.. l.. l.. 
20070b7c:	0b74 2007 0b74 2007 0b7c 2007 0b7c 2007     t.. t.. |.. |.. 
20070b8c:	0b84 2007 0b84 2007 0b8c 2007 0b8c 2007     ... ... ... ... 
20070b9c:	0b94 2007 0b94 2007 0b9c 2007 0b9c 2007     ... ... ... ... 
20070bac:	0ba4 2007 0ba4 2007 0bac 2007 0bac 2007     ... ... ... ... 
20070bbc:	0bb4 2007 0bb4 2007 0bbc 2007 0bbc 2007     ... ... ... ... 
20070bcc:	0bc4 2007 0bc4 2007 0bcc 2007 0bcc 2007     ... ... ... ... 
20070bdc:	0bd4 2007 0bd4 2007 0bdc 2007 0bdc 2007     ... ... ... ... 
20070bec:	0be4 2007 0be4 2007 0bec 2007 0bec 2007     ... ... ... ... 
20070bfc:	0bf4 2007 0bf4 2007 0bfc 2007 0bfc 2007     ... ... ... ... 
20070c0c:	0c04 2007 0c04 2007 0c0c 2007 0c0c 2007     ... ... ... ... 
20070c1c:	0c14 2007 0c14 2007 0c1c 2007 0c1c 2007     ... ... ... ... 
20070c2c:	0c24 2007 0c24 2007 0c2c 2007 0c2c 2007     $.. $.. ,.. ,.. 

20070c3c <__malloc_sbrk_base>:
20070c3c:	ffff ffff                                   ....

20070c40 <__malloc_trim_threshold>:
20070c40:	0000 0002                                   ....
